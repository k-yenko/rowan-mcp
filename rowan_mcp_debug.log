2025-08-02 13:40:45,107 - mcp.server.lowlevel.server - DEBUG - Initializing server 'Rowan MCP Server'
2025-08-02 13:40:45,107 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListToolsRequest
2025-08-02 13:40:45,107 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListResourcesRequest
2025-08-02 13:40:45,107 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListResourceTemplatesRequest
2025-08-02 13:40:45,107 - mcp.server.lowlevel.server - DEBUG - Registering handler for PromptListRequest
2025-08-02 13:40:45,107 - mcp.server.lowlevel.server - DEBUG - Registering handler for CallToolRequest
2025-08-02 13:40:45,107 - mcp.server.lowlevel.server - DEBUG - Registering handler for ReadResourceRequest
2025-08-02 13:40:45,107 - mcp.server.lowlevel.server - DEBUG - Registering handler for GetPromptRequest
2025-08-02 13:40:45,120 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 13:40:45,120 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 13:40:45,120 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2-xtb (type: <class 'str'>)
2025-08-02 13:40:45,120 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: ['optimize'] (type: <class 'list'>)
2025-08-02 13:40:45,120 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: auto
2025-08-02 13:40:45,120 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 13:40:45,120 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Test with tasks list
2025-08-02 13:40:45,120 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: dict with keys ['smiles', 'charge', 'multiplicity', 'atoms']...
2025-08-02 13:40:45,120 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -     SMILES in dict: CCCC
2025-08-02 13:40:45,120 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Extracting SMILES from dict: CCCC
2025-08-02 13:40:45,141 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully created StJamesMolecule from extracted SMILES
2025-08-02 13:40:45,141 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 13:40:45,168 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 13:40:45,264 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1096470e0>
2025-08-02 13:40:45,264 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10966af90> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 13:40:45,374 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1096d8550>
2025-08-02 13:40:45,374 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 13:40:45,374 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 13:40:45,375 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 13:40:45,375 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 13:40:45,375 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 13:40:46,037 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 20:40:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2072'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 13:40:46,038 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 13:40:46,038 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 13:40:46,038 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 13:40:46,038 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 13:40:46,039 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 13:40:46,040 - httpcore.connection - DEBUG - close.started
2025-08-02 13:40:46,040 - httpcore.connection - DEBUG - close.complete
2025-08-02 13:40:46,040 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: 4d395ec6-2b8c-4dbe-85fa-f23bacc4d3c1
2025-08-02 13:40:46,040 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 13:40:46,040 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 13:40:46,040 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2-xtb (type: <class 'str'>)
2025-08-02 13:40:46,041 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: None (type: <class 'NoneType'>)
2025-08-02 13:40:46,041 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: auto
2025-08-02 13:40:46,041 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 13:40:46,041 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Test with tasks None
2025-08-02 13:40:46,041 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: dict with keys ['smiles', 'charge', 'multiplicity', 'atoms']...
2025-08-02 13:40:46,041 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -     SMILES in dict: CCCC
2025-08-02 13:40:46,041 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Extracting SMILES from dict: CCCC
2025-08-02 13:40:46,046 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully created StJamesMolecule from extracted SMILES
2025-08-02 13:40:46,046 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 13:40:46,056 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 13:40:46,165 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1096d9e50>
2025-08-02 13:40:46,165 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10966aa80> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 13:40:46,276 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1094ab820>
2025-08-02 13:40:46,277 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 13:40:46,277 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 13:40:46,277 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 13:40:46,277 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 13:40:46,277 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 13:40:46,768 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 20:40:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2067'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 13:40:46,769 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 13:40:46,769 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 13:40:46,769 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 13:40:46,769 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 13:40:46,769 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 13:40:46,769 - httpcore.connection - DEBUG - close.started
2025-08-02 13:40:46,769 - httpcore.connection - DEBUG - close.complete
2025-08-02 13:40:46,769 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: bf62e4e1-dd50-4b9d-81a9-d178b26ad344
2025-08-02 13:42:08,997 - mcp.server.lowlevel.server - DEBUG - Initializing server 'Rowan MCP Server'
2025-08-02 13:42:08,997 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListToolsRequest
2025-08-02 13:42:08,997 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListResourcesRequest
2025-08-02 13:42:08,997 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListResourceTemplatesRequest
2025-08-02 13:42:08,997 - mcp.server.lowlevel.server - DEBUG - Registering handler for PromptListRequest
2025-08-02 13:42:08,997 - mcp.server.lowlevel.server - DEBUG - Registering handler for CallToolRequest
2025-08-02 13:42:08,997 - mcp.server.lowlevel.server - DEBUG - Registering handler for ReadResourceRequest
2025-08-02 13:42:08,997 - mcp.server.lowlevel.server - DEBUG - Registering handler for GetPromptRequest
2025-08-02 13:42:09,013 - asyncio - DEBUG - Using selector: KqueueSelector
2025-08-02 13:42:09,013 - mcp.server.sse - DEBUG - SseServerTransport initialized with endpoint: /messages/
2025-08-02 13:42:09,014 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-02 13:42:09,657 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 13:42:09,658 - mcp.server.sse - DEBUG - Created new session with ID: cf53541d-87b0-416a-8323-a2bbf7302a74
2025-08-02 13:42:09,658 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 13:42:09,658 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 13:42:09,660 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 13:42:09,661 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=cf53541d87b0416a8323a2bbf7302a74
2025-08-02 13:42:09,661 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=cf53541d87b0416a8323a2bbf7302a74\r\n\r\n'
2025-08-02 13:42:09,661 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 13:42:09,662 - mcp.server.sse - DEBUG - Created new session with ID: 0e836701-b927-482e-a2e2-20dddfa2b2b6
2025-08-02 13:42:09,662 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 13:42:09,662 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 13:42:09,664 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 13:42:09,665 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=0e836701b927482ea2e220dddfa2b2b6
2025-08-02 13:42:09,665 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=0e836701b927482ea2e220dddfa2b2b6\r\n\r\n'
2025-08-02 13:42:11,055 - sse_starlette.sse - DEBUG - Got event: http.disconnect. Stop streaming.
2025-08-02 13:42:11,056 - root - DEBUG - Client session disconnected cf53541d-87b0-416a-8323-a2bbf7302a74
2025-08-02 13:42:11,370 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 13:42:11,370 - mcp.server.sse - DEBUG - Created new session with ID: 9eb62d12-9922-4e00-918e-61d22c022c4b
2025-08-02 13:42:11,370 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 13:42:11,370 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 13:42:11,373 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 13:42:11,373 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=9eb62d1299224e00918e61d22c022c4b
2025-08-02 13:42:11,373 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=9eb62d1299224e00918e61d22c022c4b\r\n\r\n'
2025-08-02 13:42:11,376 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:42:11,376 - mcp.server.sse - DEBUG - Parsed session ID: 9eb62d12-9922-4e00-918e-61d22c022c4b
2025-08-02 13:42:11,377 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"initialize","params":{"protocolVersion":"2025-06-18","capabilities":{"tools":true,"prompts":true,"resources":false,"logging":false,"roots":{"listChanged":false}},"clientInfo":{"name":"cursor-vscode","version":"1.0.0"}},"jsonrpc":"2.0","id":1}'
2025-08-02 13:42:11,377 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'tools': True, 'prompts': True, 'resources': False, 'logging': False, 'roots': {'listChanged': False}}, 'clientInfo': {'name': 'cursor-vscode', 'version': '1.0.0'}}, jsonrpc='2.0', id=1)
2025-08-02 13:42:11,377 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'tools': True, 'prompts': True, 'resources': False, 'logging': False, 'roots': {'listChanged': False}}, 'clientInfo': {'name': 'cursor-vscode', 'version': '1.0.0'}}, jsonrpc='2.0', id=1)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c812350>))
2025-08-02 13:42:11,378 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=1, result={'protocolVersion': '2025-03-26', 'capabilities': {'experimental': {}, 'prompts': {'listChanged': False}, 'resources': {'subscribe': False, 'listChanged': False}, 'tools': {'listChanged': False}}, 'serverInfo': {'name': 'Rowan MCP Server', 'version': '1.9.3'}})), metadata=None)
2025-08-02 13:42:11,379 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":1,"result":{"protocolVersion":"2025-03-26","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"Rowan MCP Server","version":"1.9.3"}}}\r\n\r\n'
2025-08-02 13:42:11,381 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:42:11,381 - mcp.server.sse - DEBUG - Parsed session ID: 9eb62d12-9922-4e00-918e-61d22c022c4b
2025-08-02 13:42:11,381 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"notifications/initialized","jsonrpc":"2.0"}'
2025-08-02 13:42:11,381 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 13:42:11,381 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c820b90>))
2025-08-02 13:42:11,382 - mcp.server.lowlevel.server - DEBUG - Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 13:42:11,385 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:42:11,385 - mcp.server.sse - DEBUG - Parsed session ID: 9eb62d12-9922-4e00-918e-61d22c022c4b
2025-08-02 13:42:11,385 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/list","jsonrpc":"2.0","id":2}'
2025-08-02 13:42:11,385 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=2)
2025-08-02 13:42:11,385 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=2)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c7fff70>))
2025-08-02 13:42:11,385 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10c7a74d0>
2025-08-02 13:42:11,386 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 13:42:11,386 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListToolsRequest
2025-08-02 13:42:11,386 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:42:11,387 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=2, result={'tools': [{'name': 'submit_basic_calculation_workflow', 'description': 'Submit a basic calculation workflow using Rowan v2 API.\n\nPerforms fundamental quantum chemistry calculations with configurable methods\nand computational tasks. Returns a workflow object for tracking progress.\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'type': 'string'}, {'additionalProperties': True, 'type': 'object'}, {}], 'description': 'The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object', 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'description': "The method to use for the calculation (e.g., 'uma_m_omol', 'gfn2-xtb', 'r2scan_3c')", 'title': 'Method', 'type': 'string'}, 'tasks': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'description': 'List of computational tasks to perform. Optional[List[str]], Defaults to None', 'title': 'Tasks'}, 'mode': {'default': 'auto', 'description': "The mode to run the calculation in ('auto', 'rapid', 'careful', 'meticulous')", 'title': 'Mode', 'type': 'string'}, 'engine': {'default': 'omol25', 'description': "The computational engine to use ('omol25', 'xtb', 'psi4')", 'title': 'Engine', 'type': 'string'}, 'name': {'default': 'Basic Calculation Workflow', 'description': 'The name of the workflow for identification', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'UUID of the folder to place the workflow in (optional)', 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'description': 'Maximum number of credits to use for the workflow (optional)', 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_conformer_search_workflow', 'description': 'Submit a conformer search workflow using Rowan v2 API.\n\nExplores the conformational space of a molecule to find low-energy structures.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    conf_gen_mode: default to "rapid"\n        Options: "rapid", "careful", "meticulous"\n    final_method: default: "aimnet2_wb97md3"\n        Try other options, if user specifies\n    solvent: Optional solvent for implicit solvation (e.g., "water", "ethanol")\n    transition_state: Whether searching for transition state conformers (default: False)\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic conformer search\n    result = submit_conformer_search_workflow(\n        initial_molecule="CCCC",\n        conf_gen_mode="rapid"\n    )\n    \n    # Careful search with solvent\n    result = submit_conformer_search_workflow(\n        initial_molecule="CC(C)CC(=O)O",\n        conf_gen_mode="careful",\n        solvent="water",\n        final_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'conf_gen_mode': {'default': 'rapid', 'title': 'Conf Gen Mode', 'type': 'string'}, 'final_method': {'default': 'aimnet2_wb97md3', 'title': 'Final Method', 'type': 'string'}, 'solvent': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Solvent'}, 'transition_state': {'default': False, 'title': 'Transition State', 'type': 'boolean'}, 'name': {'default': 'Conformer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_solubility_workflow', 'description': 'Submit a solubility prediction workflow using Rowan v2 API.\n\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\nusing machine learning models.\n\nArgs:\n    initial_smiles: SMILES string of the molecule\n    solvents: List of solvents as SMILES or common names (e.g., ["water", "ethanol"])\n        If None, uses default solvents\n    temperatures: List of temperatures in Kelvin\n        If None, uses default temperature range\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic solubility prediction\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)Nc1ccc(O)cc1",\n        solvents=["water", "ethanol"],\n        temperatures=[298.15, 310.15]\n    )\n    \n    # With SMILES solvents\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)O",\n        solvents=["O", "CCO", "CCCCCC"],\n        temperatures=[273.15, 298.15, 323.15]\n    )\n', 'inputSchema': {'properties': {'initial_smiles': {'title': 'Initial Smiles', 'type': 'string'}, 'solvents': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Solvents'}, 'temperatures': {'anyOf': [{'items': {'type': 'number'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Temperatures'}, 'name': {'default': 'Solubility Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_smiles'], 'type': 'object'}}, {'name': 'submit_pka_workflow', 'description': 'Submit a pKa prediction workflow using Rowan v2 API.\n\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\nusing quantum chemistry calculations.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\n    deprotonate_elements: List of elements to consider for deprotonation\n        (e.g., ["N", "O", "S"]). If None, uses defaults\n    protonate_elements: List of elements to consider for protonation\n        (e.g., ["N", "O"]). If None, uses defaults\n    mode: Calculation mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic pKa prediction\n    result = submit_pka_workflow(\n        initial_molecule="CC(=O)O",\n        pka_range=(2, 8)\n    )\n    \n    # Specific elements with meticulous mode\n    result = submit_pka_workflow(\n        initial_molecule="NC(C)C(=O)O",\n        pka_range=(1, 14),\n        deprotonate_elements=["N", "O"],\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'pka_range': {'default': [2, 12], 'maxItems': 2, 'minItems': 2, 'prefixItems': [{'type': 'number'}, {'type': 'number'}], 'title': 'Pka Range', 'type': 'array'}, 'deprotonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Deprotonate Elements'}, 'protonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Protonate Elements'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'pKa Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_redox_potential_workflow', 'description': 'Submit a redox potential calculation workflow using Rowan v2 API.\n\nCalculates reduction and/or oxidation potentials for a molecule using\nquantum chemistry methods.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    reduction: Whether to calculate reduction potential (default: False)\n    oxidization: Whether to calculate oxidation potential (default: True)\n    mode: Calculation mode (default: "rapid")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic oxidation potential\n    result = submit_redox_potential_workflow(\n        initial_molecule="CC1=CC=CC=C1",\n        oxidization=True\n    )\n    \n    # Both reduction and oxidation with careful mode\n    result = submit_redox_potential_workflow(\n        initial_molecule="c1ccccc1",\n        reduction=True,\n        oxidization=True,\n        mode="careful"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'reduction': {'default': False, 'title': 'Reduction', 'type': 'boolean'}, 'oxidization': {'default': True, 'title': 'Oxidization', 'type': 'boolean'}, 'mode': {'default': 'rapid', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Redox Potential Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_fukui_workflow', 'description': 'Submit a Fukui indices calculation workflow using Rowan v2 API.\n\nCalculates Fukui indices to predict molecular reactivity at different sites.\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    optimization_method: Method for geometry optimization (default: "gfn2_xtb")\n        Common options: "gfn2_xtb", "r2scan_3c", "aimnet2_wb97md3"\n    fukui_method: Method for Fukui calculation (default: "gfn1_xtb")\n        Common options: "gfn1_xtb", "gfn2_xtb"\n    solvent_settings: Optional solvent configuration dictionary\n        Example: {"solvent": "water", "model": "alpb"}\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic Fukui indices\n    result = submit_fukui_workflow(\n        initial_molecule="CC(=O)O"\n    )\n    \n    # With solvent and advanced methods\n    result = submit_fukui_workflow(\n        initial_molecule="c1ccccc1N",\n        optimization_method="r2scan_3c",\n        fukui_method="gfn2_xtb",\n        solvent_settings={"solvent": "water", "model": "alpb"}\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'optimization_method': {'default': 'gfn2_xtb', 'title': 'Optimization Method', 'type': 'string'}, 'fukui_method': {'default': 'gfn1_xtb', 'title': 'Fukui Method', 'type': 'string'}, 'solvent_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Solvent Settings'}, 'name': {'default': 'Fukui Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_tautomer_search_workflow', 'description': 'Submit a tautomer search workflow using Rowan v2 API.\n\nSearches for different tautomeric forms of a molecule and evaluates their\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    mode: Search mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic tautomer search\n    result = submit_tautomer_search_workflow(\n        initial_molecule="CC(=O)CC(=O)C"\n    )\n    \n    # Meticulous search for complex molecule\n    result = submit_tautomer_search_workflow(\n        initial_molecule="c1ccc2c(c1)ncc(=O)[nH]2",\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Tautomer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_descriptors_workflow', 'description': 'Submit a molecular descriptors calculation workflow using Rowan v2 API.\n\nCalculates a comprehensive set of molecular descriptors including:\n- Physical properties (MW, logP, TPSA, etc.)\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\n- Topological indices\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic descriptor calculation\n    result = submit_descriptors_workflow(\n        initial_molecule="CC(=O)Nc1ccc(O)cc1"\n    )\n    \n    # For complex molecule\n    result = submit_descriptors_workflow(\n        initial_molecule="CN1C=NC2=C1C(=O)N(C(=O)N2C)C",\n        name="Caffeine Descriptors"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'name': {'default': 'Descriptors Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_scan_workflow', 'description': 'Submit a potential energy surface scan workflow using Rowan v2 API.\n\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\nor dihedrals) to map the potential energy surface.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    scan_settings: Dictionary specifying scan parameters\n        Example: {\n            "type": "dihedral",  # or "bond", "angle"\n            "atoms": [0, 1, 2, 3],  # atom indices\n            "start": -180,\n            "stop": 180,\n            "step": 10\n        }\n    calculation_engine: Computational engine (default: "omol25")\n        Options: "omol25", "xtb", "psi4"\n    calculation_method: Method for calculations (default: "uma_m_omol")\n        Options depend on engine\n    wavefront_propagation: Use wavefront optimization (default: True)\n        Speeds up scans by using previous geometries as starting points\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Dihedral scan\n    result = submit_scan_workflow(\n        initial_molecule="CC(C)CC",\n        scan_settings={\n            "type": "dihedral",\n            "atoms": [0, 1, 2, 3],\n            "start": -180,\n            "stop": 180,\n            "step": 15\n        }\n    )\n    \n    # Bond scan with advanced method\n    result = submit_scan_workflow(\n        initial_molecule="CC",\n        scan_settings={\n            "type": "bond",\n            "atoms": [0, 1],\n            "start": 1.0,\n            "stop": 2.5,\n            "step": 0.1\n        },\n        calculation_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'scan_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Scan Settings'}, 'calculation_engine': {'default': 'omol25', 'title': 'Calculation Engine', 'type': 'string'}, 'calculation_method': {'default': 'uma_m_omol', 'title': 'Calculation Method', 'type': 'string'}, 'wavefront_propagation': {'default': True, 'title': 'Wavefront Propagation', 'type': 'boolean'}, 'name': {'default': 'Scan Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_irc_workflow', 'description': 'Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\n\nArgs:\n    initial_molecule: The initial molecule to perform the IRC calculation on.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    method: The computational method to use for the IRC calculation (default: "uma_m_omol")\n        See list of available methods for options\n    engine: The computational engine to use for the calculation (default: "omol25")\n        See list of available engines\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\n    step_size: The step size to use for the IRC calculation (default: 0.05)\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted IRC workflow\n    \nExample:\n    # Basic IRC calculation\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "[CH3].[CH3]"},\n        method="gfn2_xtb",\n        max_irc_steps=50\n    )\n    \n    # IRC with specific method and engine\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "CC(O)=CC"},\n        method="r2scan_3c",\n        engine="psi4",\n        step_size=0.03\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'title': 'Method', 'type': 'string'}, 'engine': {'default': 'omol25', 'title': 'Engine', 'type': 'string'}, 'preopt': {'default': True, 'title': 'Preopt', 'type': 'boolean'}, 'step_size': {'default': 0.05, 'title': 'Step Size', 'type': 'number'}, 'max_irc_steps': {'default': 30, 'title': 'Max Irc Steps', 'type': 'integer'}, 'name': {'default': 'IRC Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'type': 'object'}}, {'name': 'submit_protein_cofolding_workflow', 'description': 'Submits a protein cofolding workflow to the API.\n\nArgs:\n    initial_protein_sequences: The sequences of the proteins to be cofolded\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\n    use_msa_server: Whether to use the MSA server for the computation\n    use_potentials: Whether to use potentials for the computation\n    name: The name of the workflow\n    model: The model to use for the computation\n    folder_uuid: The UUID of the folder to store the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Protein dimer cofolding\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=[\n            "MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK",\n            "MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF"\n        ]\n    )\n    \n    # Protein-ligand complex\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=["MGSSHHHHHHSSGLVPRGSH"],\n        initial_smiles_list=["CC(=O)O", "CCO"],\n        ligand_binding_affinity_index=0,\n        use_msa_server=True\n    )\n', 'inputSchema': {'properties': {'initial_protein_sequences': {'items': {'type': 'string'}, 'title': 'Initial Protein Sequences', 'type': 'array'}, 'initial_smiles_list': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Initial Smiles List'}, 'ligand_binding_affinity_index': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Ligand Binding Affinity Index'}, 'use_msa_server': {'default': True, 'title': 'Use Msa Server', 'type': 'boolean'}, 'use_potentials': {'default': False, 'title': 'Use Potentials', 'type': 'boolean'}, 'name': {'default': 'Cofolding Workflow', 'title': 'Name', 'type': 'string'}, 'model': {'default': 'boltz_2', 'title': 'Model', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_protein_sequences'], 'type': 'object'}}, {'name': 'submit_docking_workflow', 'description': 'Submits a Docking workflow to the API.\n\nArgs:\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\n    pocket: The pocket to dock into\n    initial_molecule: The initial molecule to be docked.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    do_csearch: Whether to perform a conformational search on the ligand\n    do_optimization: Whether to perform an optimization on the ligand\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic docking with protein UUID\n    result = submit_docking_workflow(\n        protein="protein-uuid-123",\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CC(=O)Oc1ccccc1C(=O)O"}\n    )\n    \n    # Docking with optimization disabled\n    result = submit_docking_workflow(\n        protein=protein_obj,\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CCO"},\n        do_csearch=False,\n        do_optimization=False\n    )\n', 'inputSchema': {'properties': {'protein': {'anyOf': [{'type': 'string'}, {}], 'title': 'Protein'}, 'pocket': {'title': 'Pocket'}, 'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'do_csearch': {'default': True, 'title': 'Do Csearch', 'type': 'boolean'}, 'do_optimization': {'default': True, 'title': 'Do Optimization', 'type': 'boolean'}, 'name': {'default': 'Docking Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['protein', 'pocket'], 'type': 'object'}}, {'name': 'workflow_fetch_latest', 'description': 'Fetch the latest workflow data from the database.\n\nUpdates the workflow object with the most recent status and results.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to fetch\n    in_place: Whether to update the workflow object in place (default: False)\n    \nReturns:\n    Dictionary containing the updated workflow data including status and results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'in_place': {'default': False, 'title': 'In Place', 'type': 'boolean'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_wait_for_result', 'description': 'Wait for a workflow to complete and return the result.\n\nBlocks until the workflow completes, polling at specified intervals.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to wait for\n    poll_interval: Time in seconds between status checks (default: 5)\n    \nReturns:\n    Dictionary containing the completed workflow data including results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'poll_interval': {'default': 5, 'title': 'Poll Interval', 'type': 'integer'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_get_status', 'description': 'Get the current status of a workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with status information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_stop', 'description': 'Stop a running workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to stop\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete', 'description': 'Delete a workflow.\n\nThis permanently removes the workflow and its results from the database.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to delete\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'retrieve_workflow', 'description': 'Retrieve a workflow from the API.\n\nArgs:\n    uuid: The UUID of the workflow to retrieve\n    \nReturns:\n    Dictionary containing the complete workflow data\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'retrieve_calculation_molecules', 'description': 'Retrieve a list of molecules from a calculation.\n\nArgs:\n    uuid: The UUID of the calculation to retrieve molecules from\n    \nReturns:\n    List of dictionaries representing the molecules in the calculation\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'list_workflows', 'description': 'List workflows subject to the specified criteria.\n\nArgs:\n    parent_uuid: The UUID of the parent folder\n    name_contains: Substring to search for in workflow names\n    public: Filter workflows by their public status\n    starred: Filter workflows by their starred status\n    status: Filter workflows by their status\n    workflow_type: Filter workflows by their type\n    page: The page number to retrieve (default: 0)\n    size: The number of items per page (default: 10)\n    \nReturns:\n    List of workflow dictionaries that match the search criteria\n    \nRaises:\n    HTTPError: If the request to the API fails\n', 'inputSchema': {'properties': {'parent_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Parent Uuid'}, 'name_contains': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name Contains'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'status': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Status'}, 'workflow_type': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Type'}, 'page': {'default': 0, 'title': 'Page', 'type': 'integer'}, 'size': {'default': 10, 'title': 'Size', 'type': 'integer'}}, 'type': 'object'}}, {'name': 'workflow_update', 'description': 'Update workflow details.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to update\n    name: New name for the workflow (optional)\n    notes: New notes for the workflow (optional)\n    starred: Whether to star/unstar the workflow (optional)\n    public: Whether to make the workflow public/private (optional)\n    \nReturns:\n    Dictionary with updated workflow information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name'}, 'notes': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Notes'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_is_finished', 'description': 'Check if a workflow is finished.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to check\n    \nReturns:\n    Dictionary with workflow completion status\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete_data', 'description': 'Delete workflow data while keeping the workflow record.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}]})), metadata=None)
2025-08-02 13:42:11,388 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":2,"result":{"tools":[{"name":"submit_basic_calculation_workflow","description":"Submit a basic calculation workflow using Rowan v2 API.\\n\\nPerforms fundamental quantum chemistry calculations with configurable methods\\nand computational tasks. Returns a workflow object for tracking progress.\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"type":"string"},{"additionalProperties":true,"type":"object"},{}],"description":"The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object","title":"Initial Molecule"},"method":{"default":"uma_m_omol","description":"The method to use for the calculation (e.g., \'uma_m_omol\', \'gfn2-xtb\', \'r2scan_3c\')","title":"Method","type":"string"},"tasks":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"description":"List of computational tasks to perform. Optional[List[str]], Defaults to None","title":"Tasks"},"mode":{"default":"auto","description":"The mode to run the calculation in (\'auto\', \'rapid\', \'careful\', \'meticulous\')","title":"Mode","type":"string"},"engine":{"default":"omol25","description":"The computational engine to use (\'omol25\', \'xtb\', \'psi4\')","title":"Engine","type":"string"},"name":{"default":"Basic Calculation Workflow","description":"The name of the workflow for identification","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"UUID of the folder to place the workflow in (optional)","title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"description":"Maximum number of credits to use for the workflow (optional)","title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_conformer_search_workflow","description":"Submit a conformer search workflow using Rowan v2 API.\\n\\nExplores the conformational space of a molecule to find low-energy structures.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    conf_gen_mode: default to \\"rapid\\"\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    final_method: default: \\"aimnet2_wb97md3\\"\\n        Try other options, if user specifies\\n    solvent: Optional solvent for implicit solvation (e.g., \\"water\\", \\"ethanol\\")\\n    transition_state: Whether searching for transition state conformers (default: False)\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic conformer search\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CCCC\\",\\n        conf_gen_mode=\\"rapid\\"\\n    )\\n    \\n    # Careful search with solvent\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CC(C)CC(=O)O\\",\\n        conf_gen_mode=\\"careful\\",\\n        solvent=\\"water\\",\\n        final_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"conf_gen_mode":{"default":"rapid","title":"Conf Gen Mode","type":"string"},"final_method":{"default":"aimnet2_wb97md3","title":"Final Method","type":"string"},"solvent":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Solvent"},"transition_state":{"default":false,"title":"Transition State","type":"boolean"},"name":{"default":"Conformer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_solubility_workflow","description":"Submit a solubility prediction workflow using Rowan v2 API.\\n\\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\\nusing machine learning models.\\n\\nArgs:\\n    initial_smiles: SMILES string of the molecule\\n    solvents: List of solvents as SMILES or common names (e.g., [\\"water\\", \\"ethanol\\"])\\n        If None, uses default solvents\\n    temperatures: List of temperatures in Kelvin\\n        If None, uses default temperature range\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic solubility prediction\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)Nc1ccc(O)cc1\\",\\n        solvents=[\\"water\\", \\"ethanol\\"],\\n        temperatures=[298.15, 310.15]\\n    )\\n    \\n    # With SMILES solvents\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)O\\",\\n        solvents=[\\"O\\", \\"CCO\\", \\"CCCCCC\\"],\\n        temperatures=[273.15, 298.15, 323.15]\\n    )\\n","inputSchema":{"properties":{"initial_smiles":{"title":"Initial Smiles","type":"string"},"solvents":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Solvents"},"temperatures":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"default":null,"title":"Temperatures"},"name":{"default":"Solubility Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_smiles"],"type":"object"}},{"name":"submit_pka_workflow","description":"Submit a pKa prediction workflow using Rowan v2 API.\\n\\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\\nusing quantum chemistry calculations.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\\n    deprotonate_elements: List of elements to consider for deprotonation\\n        (e.g., [\\"N\\", \\"O\\", \\"S\\"]). If None, uses defaults\\n    protonate_elements: List of elements to consider for protonation\\n        (e.g., [\\"N\\", \\"O\\"]). If None, uses defaults\\n    mode: Calculation mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic pKa prediction\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"CC(=O)O\\",\\n        pka_range=(2, 8)\\n    )\\n    \\n    # Specific elements with meticulous mode\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"NC(C)C(=O)O\\",\\n        pka_range=(1, 14),\\n        deprotonate_elements=[\\"N\\", \\"O\\"],\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"pka_range":{"default":[2,12],"maxItems":2,"minItems":2,"prefixItems":[{"type":"number"},{"type":"number"}],"title":"Pka Range","type":"array"},"deprotonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Deprotonate Elements"},"protonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Protonate Elements"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"pKa Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_redox_potential_workflow","description":"Submit a redox potential calculation workflow using Rowan v2 API.\\n\\nCalculates reduction and/or oxidation potentials for a molecule using\\nquantum chemistry methods.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    reduction: Whether to calculate reduction potential (default: False)\\n    oxidization: Whether to calculate oxidation potential (default: True)\\n    mode: Calculation mode (default: \\"rapid\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic oxidation potential\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"CC1=CC=CC=C1\\",\\n        oxidization=True\\n    )\\n    \\n    # Both reduction and oxidation with careful mode\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"c1ccccc1\\",\\n        reduction=True,\\n        oxidization=True,\\n        mode=\\"careful\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"reduction":{"default":false,"title":"Reduction","type":"boolean"},"oxidization":{"default":true,"title":"Oxidization","type":"boolean"},"mode":{"default":"rapid","title":"Mode","type":"string"},"name":{"default":"Redox Potential Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_fukui_workflow","description":"Submit a Fukui indices calculation workflow using Rowan v2 API.\\n\\nCalculates Fukui indices to predict molecular reactivity at different sites.\\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    optimization_method: Method for geometry optimization (default: \\"gfn2_xtb\\")\\n        Common options: \\"gfn2_xtb\\", \\"r2scan_3c\\", \\"aimnet2_wb97md3\\"\\n    fukui_method: Method for Fukui calculation (default: \\"gfn1_xtb\\")\\n        Common options: \\"gfn1_xtb\\", \\"gfn2_xtb\\"\\n    solvent_settings: Optional solvent configuration dictionary\\n        Example: {\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic Fukui indices\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"CC(=O)O\\"\\n    )\\n    \\n    # With solvent and advanced methods\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"c1ccccc1N\\",\\n        optimization_method=\\"r2scan_3c\\",\\n        fukui_method=\\"gfn2_xtb\\",\\n        solvent_settings={\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"optimization_method":{"default":"gfn2_xtb","title":"Optimization Method","type":"string"},"fukui_method":{"default":"gfn1_xtb","title":"Fukui Method","type":"string"},"solvent_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Solvent Settings"},"name":{"default":"Fukui Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_tautomer_search_workflow","description":"Submit a tautomer search workflow using Rowan v2 API.\\n\\nSearches for different tautomeric forms of a molecule and evaluates their\\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    mode: Search mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic tautomer search\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"CC(=O)CC(=O)C\\"\\n    )\\n    \\n    # Meticulous search for complex molecule\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"c1ccc2c(c1)ncc(=O)[nH]2\\",\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"Tautomer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_descriptors_workflow","description":"Submit a molecular descriptors calculation workflow using Rowan v2 API.\\n\\nCalculates a comprehensive set of molecular descriptors including:\\n- Physical properties (MW, logP, TPSA, etc.)\\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\\n- Topological indices\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic descriptor calculation\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CC(=O)Nc1ccc(O)cc1\\"\\n    )\\n    \\n    # For complex molecule\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)C\\",\\n        name=\\"Caffeine Descriptors\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"name":{"default":"Descriptors Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_scan_workflow","description":"Submit a potential energy surface scan workflow using Rowan v2 API.\\n\\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\\nor dihedrals) to map the potential energy surface.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    scan_settings: Dictionary specifying scan parameters\\n        Example: {\\n            \\"type\\": \\"dihedral\\",  # or \\"bond\\", \\"angle\\"\\n            \\"atoms\\": [0, 1, 2, 3],  # atom indices\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 10\\n        }\\n    calculation_engine: Computational engine (default: \\"omol25\\")\\n        Options: \\"omol25\\", \\"xtb\\", \\"psi4\\"\\n    calculation_method: Method for calculations (default: \\"uma_m_omol\\")\\n        Options depend on engine\\n    wavefront_propagation: Use wavefront optimization (default: True)\\n        Speeds up scans by using previous geometries as starting points\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Dihedral scan\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC(C)CC\\",\\n        scan_settings={\\n            \\"type\\": \\"dihedral\\",\\n            \\"atoms\\": [0, 1, 2, 3],\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 15\\n        }\\n    )\\n    \\n    # Bond scan with advanced method\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC\\",\\n        scan_settings={\\n            \\"type\\": \\"bond\\",\\n            \\"atoms\\": [0, 1],\\n            \\"start\\": 1.0,\\n            \\"stop\\": 2.5,\\n            \\"step\\": 0.1\\n        },\\n        calculation_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"scan_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Scan Settings"},"calculation_engine":{"default":"omol25","title":"Calculation Engine","type":"string"},"calculation_method":{"default":"uma_m_omol","title":"Calculation Method","type":"string"},"wavefront_propagation":{"default":true,"title":"Wavefront Propagation","type":"boolean"},"name":{"default":"Scan Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_irc_workflow","description":"Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\\n\\nArgs:\\n    initial_molecule: The initial molecule to perform the IRC calculation on.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    method: The computational method to use for the IRC calculation (default: \\"uma_m_omol\\")\\n        See list of available methods for options\\n    engine: The computational engine to use for the calculation (default: \\"omol25\\")\\n        See list of available engines\\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\\n    step_size: The step size to use for the IRC calculation (default: 0.05)\\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted IRC workflow\\n    \\nExample:\\n    # Basic IRC calculation\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"[CH3].[CH3]\\"},\\n        method=\\"gfn2_xtb\\",\\n        max_irc_steps=50\\n    )\\n    \\n    # IRC with specific method and engine\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"CC(O)=CC\\"},\\n        method=\\"r2scan_3c\\",\\n        engine=\\"psi4\\",\\n        step_size=0.03\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"method":{"default":"uma_m_omol","title":"Method","type":"string"},"engine":{"default":"omol25","title":"Engine","type":"string"},"preopt":{"default":true,"title":"Preopt","type":"boolean"},"step_size":{"default":0.05,"title":"Step Size","type":"number"},"max_irc_steps":{"default":30,"title":"Max Irc Steps","type":"integer"},"name":{"default":"IRC Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"type":"object"}},{"name":"submit_protein_cofolding_workflow","description":"Submits a protein cofolding workflow to the API.\\n\\nArgs:\\n    initial_protein_sequences: The sequences of the proteins to be cofolded\\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\\n    use_msa_server: Whether to use the MSA server for the computation\\n    use_potentials: Whether to use potentials for the computation\\n    name: The name of the workflow\\n    model: The model to use for the computation\\n    folder_uuid: The UUID of the folder to store the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Protein dimer cofolding\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\n            \\"MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK\\",\\n            \\"MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF\\"\\n        ]\\n    )\\n    \\n    # Protein-ligand complex\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\"MGSSHHHHHHSSGLVPRGSH\\"],\\n        initial_smiles_list=[\\"CC(=O)O\\", \\"CCO\\"],\\n        ligand_binding_affinity_index=0,\\n        use_msa_server=True\\n    )\\n","inputSchema":{"properties":{"initial_protein_sequences":{"items":{"type":"string"},"title":"Initial Protein Sequences","type":"array"},"initial_smiles_list":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Initial Smiles List"},"ligand_binding_affinity_index":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Ligand Binding Affinity Index"},"use_msa_server":{"default":true,"title":"Use Msa Server","type":"boolean"},"use_potentials":{"default":false,"title":"Use Potentials","type":"boolean"},"name":{"default":"Cofolding Workflow","title":"Name","type":"string"},"model":{"default":"boltz_2","title":"Model","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_protein_sequences"],"type":"object"}},{"name":"submit_docking_workflow","description":"Submits a Docking workflow to the API.\\n\\nArgs:\\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\\n    pocket: The pocket to dock into\\n    initial_molecule: The initial molecule to be docked.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    do_csearch: Whether to perform a conformational search on the ligand\\n    do_optimization: Whether to perform an optimization on the ligand\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic docking with protein UUID\\n    result = submit_docking_workflow(\\n        protein=\\"protein-uuid-123\\",\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CC(=O)Oc1ccccc1C(=O)O\\"}\\n    )\\n    \\n    # Docking with optimization disabled\\n    result = submit_docking_workflow(\\n        protein=protein_obj,\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CCO\\"},\\n        do_csearch=False,\\n        do_optimization=False\\n    )\\n","inputSchema":{"properties":{"protein":{"anyOf":[{"type":"string"},{}],"title":"Protein"},"pocket":{"title":"Pocket"},"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"do_csearch":{"default":true,"title":"Do Csearch","type":"boolean"},"do_optimization":{"default":true,"title":"Do Optimization","type":"boolean"},"name":{"default":"Docking Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["protein","pocket"],"type":"object"}},{"name":"workflow_fetch_latest","description":"Fetch the latest workflow data from the database.\\n\\nUpdates the workflow object with the most recent status and results.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to fetch\\n    in_place: Whether to update the workflow object in place (default: False)\\n    \\nReturns:\\n    Dictionary containing the updated workflow data including status and results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"in_place":{"default":false,"title":"In Place","type":"boolean"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_wait_for_result","description":"Wait for a workflow to complete and return the result.\\n\\nBlocks until the workflow completes, polling at specified intervals.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to wait for\\n    poll_interval: Time in seconds between status checks (default: 5)\\n    \\nReturns:\\n    Dictionary containing the completed workflow data including results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"poll_interval":{"default":5,"title":"Poll Interval","type":"integer"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_get_status","description":"Get the current status of a workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with status information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_stop","description":"Stop a running workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to stop\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete","description":"Delete a workflow.\\n\\nThis permanently removes the workflow and its results from the database.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to delete\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"retrieve_workflow","description":"Retrieve a workflow from the API.\\n\\nArgs:\\n    uuid: The UUID of the workflow to retrieve\\n    \\nReturns:\\n    Dictionary containing the complete workflow data\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"retrieve_calculation_molecules","description":"Retrieve a list of molecules from a calculation.\\n\\nArgs:\\n    uuid: The UUID of the calculation to retrieve molecules from\\n    \\nReturns:\\n    List of dictionaries representing the molecules in the calculation\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"list_workflows","description":"List workflows subject to the specified criteria.\\n\\nArgs:\\n    parent_uuid: The UUID of the parent folder\\n    name_contains: Substring to search for in workflow names\\n    public: Filter workflows by their public status\\n    starred: Filter workflows by their starred status\\n    status: Filter workflows by their status\\n    workflow_type: Filter workflows by their type\\n    page: The page number to retrieve (default: 0)\\n    size: The number of items per page (default: 10)\\n    \\nReturns:\\n    List of workflow dictionaries that match the search criteria\\n    \\nRaises:\\n    HTTPError: If the request to the API fails\\n","inputSchema":{"properties":{"parent_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Parent Uuid"},"name_contains":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name Contains"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"status":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Status"},"workflow_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Workflow Type"},"page":{"default":0,"title":"Page","type":"integer"},"size":{"default":10,"title":"Size","type":"integer"}},"type":"object"}},{"name":"workflow_update","description":"Update workflow details.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to update\\n    name: New name for the workflow (optional)\\n    notes: New notes for the workflow (optional)\\n    starred: Whether to star/unstar the workflow (optional)\\n    public: Whether to make the workflow public/private (optional)\\n    \\nReturns:\\n    Dictionary with updated workflow information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name"},"notes":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Notes"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_is_finished","description":"Check if a workflow is finished.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to check\\n    \\nReturns:\\n    Dictionary with workflow completion status\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete_data","description":"Delete workflow data while keeping the workflow record.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}}]}}\r\n\r\n'
2025-08-02 13:42:11,394 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:42:11,394 - mcp.server.sse - DEBUG - Parsed session ID: 9eb62d12-9922-4e00-918e-61d22c022c4b
2025-08-02 13:42:11,394 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"prompts/list","jsonrpc":"2.0","id":3}'
2025-08-02 13:42:11,394 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=3)
2025-08-02 13:42:11,394 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=3)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c7928d0>))
2025-08-02 13:42:11,395 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10c7a6fd0>
2025-08-02 13:42:11,395 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 13:42:11,395 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListPromptsRequest
2025-08-02 13:42:11,395 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:42:11,396 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=3, result={'prompts': []})), metadata=None)
2025-08-02 13:42:11,396 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":3,"result":{"prompts":[]}}\r\n\r\n'
2025-08-02 13:42:24,665 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:42:24.665691+00:00\r\n\r\n'
2025-08-02 13:42:26,374 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:42:26.374245+00:00\r\n\r\n'
2025-08-02 13:42:39,667 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:42:39.667245+00:00\r\n\r\n'
2025-08-02 13:42:40,228 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:42:40,228 - mcp.server.sse - DEBUG - Parsed session ID: 9eb62d12-9922-4e00-918e-61d22c022c4b
2025-08-02 13:42:40,228 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/call","params":{"name":"submit_basic_calculation_workflow","arguments":{"initial_molecule":"CCCC","engine":"xtb","method":"gfn2_xtb","mode":"auto","name":"Basic Calculation Workflow - Butane"},"_meta":{"progressToken":4}},"jsonrpc":"2.0","id":4}'
2025-08-02 13:42:40,229 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'engine': 'xtb', 'method': 'gfn2_xtb', 'mode': 'auto', 'name': 'Basic Calculation Workflow - Butane'}, '_meta': {'progressToken': 4}}, jsonrpc='2.0', id=4)
2025-08-02 13:42:40,229 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'engine': 'xtb', 'method': 'gfn2_xtb', 'mode': 'auto', 'name': 'Basic Calculation Workflow - Butane'}, '_meta': {'progressToken': 4}}, jsonrpc='2.0', id=4)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c792840>))
2025-08-02 13:42:40,229 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10c6d7bb0>
2025-08-02 13:42:40,229 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 13:42:40,229 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type CallToolRequest
2025-08-02 13:42:40,230 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 13:42:40,230 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 13:42:40,230 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2_xtb (type: <class 'str'>)
2025-08-02 13:42:40,230 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: None (type: <class 'NoneType'>)
2025-08-02 13:42:40,230 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: auto
2025-08-02 13:42:40,230 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 13:42:40,230 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Basic Calculation Workflow - Butane
2025-08-02 13:42:40,230 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: 'CCCC' (SMILES string)
2025-08-02 13:42:40,230 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 13:42:40,260 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully converted to StJamesMolecule
2025-08-02 13:42:40,260 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 13:42:40,281 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 13:42:40,386 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c803770>
2025-08-02 13:42:40,386 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10c889490> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 13:42:40,510 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c7a7610>
2025-08-02 13:42:40,511 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 13:42:40,512 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 13:42:40,512 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 13:42:40,512 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 13:42:40,512 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 13:42:41,102 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 20:42:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2087'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 13:42:41,104 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 13:42:41,104 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 13:42:41,104 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 13:42:41,105 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 13:42:41,105 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 13:42:41,105 - httpcore.connection - DEBUG - close.started
2025-08-02 13:42:41,106 - httpcore.connection - DEBUG - close.complete
2025-08-02 13:42:41,106 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: c25eeb44-b0c0-47dc-b5dc-3fb9ed7dbc3d
2025-08-02 13:42:41,107 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:42:41,107 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=4, result={'content': [{'type': 'text', 'text': '{\n  "name": "Basic Calculation Workflow - Butane",\n  "uuid": "c25eeb44-b0c0-47dc-b5dc-3fb9ed7dbc3d",\n  "created_at": "2025-08-02T20:42:40.663886Z",\n  "updated_at": null,\n  "started_at": null,\n  "completed_at": null,\n  "object_status": 0,\n  "parent_uuid": "e5c3ce65-43df-4ab3-90e0-a56f42584cc0",\n  "notes": "",\n  "starred": false,\n  "public": false,\n  "object_type": "basic_calculation",\n  "object_data": {\n    "settings": {\n      "method": "GFN2_XTB",\n      "tasks": [\n        "optimize"\n      ],\n      "mode": "auto"\n    },\n    "engine": "xtb",\n    "initial_molecule": {\n      "charge": 0,\n      "multiplicity": 1,\n      "atoms": [\n        {\n          "atomic_number": 6,\n          "position": [\n            -1.57731622,\n            0.46259034,\n            0.02288227\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            -0.55246934,\n            -0.31349805,\n            -0.78986664\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            0.65178196,\n            -0.77563238,\n            0.03104792\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            1.5013315,\n            0.37070813,\n            0.55769072\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.17009891,\n            1.41344062,\n            0.37886292\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.91277475,\n            -0.11690438,\n            0.88874548\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -2.45332233,\n            0.68757176,\n            -0.59399069\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -0.21575239,\n            0.30052639,\n            -1.63326648\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.04230601,\n            -1.19688302,\n            -1.21658189\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            0.31558706,\n            -1.39539838,\n            0.87044712\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            1.28031633,\n            -1.41330121,\n            -0.60197473\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            2.39258685,\n            -0.02154188,\n            1.05803044\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            0.95227634,\n            0.97534316,\n            1.28543953\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            1.83015992,\n            1.0229789,\n            -0.25746596\n          ]\n        }\n      ],\n      "cell": null,\n      "energy": null,\n      "scf_iterations": null,\n      "scf_completed": null,\n      "elapsed": null,\n      "homo_lumo_gap": null,\n      "gradient": null,\n      "stress": null,\n      "velocities": null,\n      "mulliken_charges": null,\n      "mulliken_spin_densities": null,\n      "dipole": null,\n      "vibrational_modes": null,\n      "zero_point_energy": null,\n      "thermal_energy_corr": null,\n      "thermal_enthalpy_corr": null,\n      "thermal_free_energy_corr": null,\n      "smiles": "CCCC",\n      "calculation_index": null\n    }\n  },\n  "email_when_complete": false,\n  "max_credits": null,\n  "elapsed": 0.0,\n  "credits_charged": 0.0\n}'}], 'isError': False})), metadata=None)
2025-08-02 13:42:41,108 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":4,"result":{"content":[{"type":"text","text":"{\\n  \\"name\\": \\"Basic Calculation Workflow - Butane\\",\\n  \\"uuid\\": \\"c25eeb44-b0c0-47dc-b5dc-3fb9ed7dbc3d\\",\\n  \\"created_at\\": \\"2025-08-02T20:42:40.663886Z\\",\\n  \\"updated_at\\": null,\\n  \\"started_at\\": null,\\n  \\"completed_at\\": null,\\n  \\"object_status\\": 0,\\n  \\"parent_uuid\\": \\"e5c3ce65-43df-4ab3-90e0-a56f42584cc0\\",\\n  \\"notes\\": \\"\\",\\n  \\"starred\\": false,\\n  \\"public\\": false,\\n  \\"object_type\\": \\"basic_calculation\\",\\n  \\"object_data\\": {\\n    \\"settings\\": {\\n      \\"method\\": \\"GFN2_XTB\\",\\n      \\"tasks\\": [\\n        \\"optimize\\"\\n      ],\\n      \\"mode\\": \\"auto\\"\\n    },\\n    \\"engine\\": \\"xtb\\",\\n    \\"initial_molecule\\": {\\n      \\"charge\\": 0,\\n      \\"multiplicity\\": 1,\\n      \\"atoms\\": [\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -1.57731622,\\n            0.46259034,\\n            0.02288227\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -0.55246934,\\n            -0.31349805,\\n            -0.78986664\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            0.65178196,\\n            -0.77563238,\\n            0.03104792\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            1.5013315,\\n            0.37070813,\\n            0.55769072\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.17009891,\\n            1.41344062,\\n            0.37886292\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.91277475,\\n            -0.11690438,\\n            0.88874548\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -2.45332233,\\n            0.68757176,\\n            -0.59399069\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -0.21575239,\\n            0.30052639,\\n            -1.63326648\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.04230601,\\n            -1.19688302,\\n            -1.21658189\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            0.31558706,\\n            -1.39539838,\\n            0.87044712\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            1.28031633,\\n            -1.41330121,\\n            -0.60197473\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            2.39258685,\\n            -0.02154188,\\n            1.05803044\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            0.95227634,\\n            0.97534316,\\n            1.28543953\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            1.83015992,\\n            1.0229789,\\n            -0.25746596\\n          ]\\n        }\\n      ],\\n      \\"cell\\": null,\\n      \\"energy\\": null,\\n      \\"scf_iterations\\": null,\\n      \\"scf_completed\\": null,\\n      \\"elapsed\\": null,\\n      \\"homo_lumo_gap\\": null,\\n      \\"gradient\\": null,\\n      \\"stress\\": null,\\n      \\"velocities\\": null,\\n      \\"mulliken_charges\\": null,\\n      \\"mulliken_spin_densities\\": null,\\n      \\"dipole\\": null,\\n      \\"vibrational_modes\\": null,\\n      \\"zero_point_energy\\": null,\\n      \\"thermal_energy_corr\\": null,\\n      \\"thermal_enthalpy_corr\\": null,\\n      \\"thermal_free_energy_corr\\": null,\\n      \\"smiles\\": \\"CCCC\\",\\n      \\"calculation_index\\": null\\n    }\\n  },\\n  \\"email_when_complete\\": false,\\n  \\"max_credits\\": null,\\n  \\"elapsed\\": 0.0,\\n  \\"credits_charged\\": 0.0\\n}"}],"isError":false}}\r\n\r\n'
2025-08-02 13:42:41,376 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:42:41.376020+00:00\r\n\r\n'
2025-08-02 13:42:54,669 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:42:54.669153+00:00\r\n\r\n'
2025-08-02 13:42:56,378 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:42:56.377977+00:00\r\n\r\n'
2025-08-02 13:43:09,672 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:43:09.672675+00:00\r\n\r\n'
2025-08-02 13:43:11,381 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:43:11.380826+00:00\r\n\r\n'
2025-08-02 13:43:24,676 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:43:24.675818+00:00\r\n\r\n'
2025-08-02 13:43:26,383 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:43:26.383675+00:00\r\n\r\n'
2025-08-02 13:43:39,678 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:43:39.678592+00:00\r\n\r\n'
2025-08-02 13:43:41,386 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:43:41.386513+00:00\r\n\r\n'
2025-08-02 13:43:54,681 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:43:54.681112+00:00\r\n\r\n'
2025-08-02 13:43:56,389 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:43:56.389302+00:00\r\n\r\n'
2025-08-02 13:44:09,684 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:44:09.684196+00:00\r\n\r\n'
2025-08-02 13:44:11,392 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:44:11.392265+00:00\r\n\r\n'
2025-08-02 13:44:24,685 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:44:24.685231+00:00\r\n\r\n'
2025-08-02 13:44:26,394 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:44:26.394024+00:00\r\n\r\n'
2025-08-02 13:44:39,687 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:44:39.687836+00:00\r\n\r\n'
2025-08-02 13:44:41,396 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:44:41.396800+00:00\r\n\r\n'
2025-08-02 13:44:54,689 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:44:54.689503+00:00\r\n\r\n'
2025-08-02 13:44:56,398 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:44:56.398375+00:00\r\n\r\n'
2025-08-02 13:45:09,692 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:45:09.692809+00:00\r\n\r\n'
2025-08-02 13:45:11,017 - mcp.server.lowlevel.server - DEBUG - Initializing server 'Rowan MCP Server'
2025-08-02 13:45:11,017 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListToolsRequest
2025-08-02 13:45:11,017 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListResourcesRequest
2025-08-02 13:45:11,017 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListResourceTemplatesRequest
2025-08-02 13:45:11,017 - mcp.server.lowlevel.server - DEBUG - Registering handler for PromptListRequest
2025-08-02 13:45:11,017 - mcp.server.lowlevel.server - DEBUG - Registering handler for CallToolRequest
2025-08-02 13:45:11,017 - mcp.server.lowlevel.server - DEBUG - Registering handler for ReadResourceRequest
2025-08-02 13:45:11,017 - mcp.server.lowlevel.server - DEBUG - Registering handler for GetPromptRequest
2025-08-02 13:45:11,030 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 13:45:11,030 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 13:45:11,030 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2-xtb (type: <class 'str'>)
2025-08-02 13:45:11,030 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: None (type: <class 'NoneType'>)
2025-08-02 13:45:11,030 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: auto
2025-08-02 13:45:11,030 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 13:45:11,030 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Test without tasks
2025-08-02 13:45:11,030 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: 'CCCC' (SMILES string)
2025-08-02 13:45:11,030 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 13:45:11,051 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully converted to StJamesMolecule
2025-08-02 13:45:11,051 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 13:45:11,074 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 13:45:11,171 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10ae470e0>
2025-08-02 13:45:11,171 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10ae6ef00> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 13:45:11,285 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10aec8550>
2025-08-02 13:45:11,285 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 13:45:11,285 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 13:45:11,285 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 13:45:11,286 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 13:45:11,286 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 13:45:11,401 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:45:11.401534+00:00\r\n\r\n'
2025-08-02 13:45:11,908 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 20:45:11 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2070'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 13:45:11,909 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 13:45:11,909 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 13:45:11,910 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 13:45:11,910 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 13:45:11,910 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 13:45:11,911 - httpcore.connection - DEBUG - close.started
2025-08-02 13:45:11,911 - httpcore.connection - DEBUG - close.complete
2025-08-02 13:45:11,911 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: c238e618-15bc-4324-a036-1f9c2d315d6b
2025-08-02 13:45:24,694 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:45:24.694636+00:00\r\n\r\n'
2025-08-02 13:45:26,402 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:45:26.402588+00:00\r\n\r\n'
2025-08-02 13:45:39,696 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:45:39.696758+00:00\r\n\r\n'
2025-08-02 13:45:41,404 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:45:41.404633+00:00\r\n\r\n'
2025-08-02 13:45:54,699 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:45:54.699491+00:00\r\n\r\n'
2025-08-02 13:45:56,408 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:45:56.408096+00:00\r\n\r\n'
2025-08-02 13:46:09,701 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:46:09.701155+00:00\r\n\r\n'
2025-08-02 13:46:11,410 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:46:11.410367+00:00\r\n\r\n'
2025-08-02 13:46:24,704 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:46:24.704059+00:00\r\n\r\n'
2025-08-02 13:46:26,413 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:46:26.413031+00:00\r\n\r\n'
2025-08-02 13:46:39,706 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:46:39.706772+00:00\r\n\r\n'
2025-08-02 13:46:41,414 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:46:41.414801+00:00\r\n\r\n'
2025-08-02 13:46:54,708 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:46:54.708505+00:00\r\n\r\n'
2025-08-02 13:46:56,416 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:46:56.416368+00:00\r\n\r\n'
2025-08-02 13:47:09,710 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:47:09.710417+00:00\r\n\r\n'
2025-08-02 13:47:11,418 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:47:11.417975+00:00\r\n\r\n'
2025-08-02 13:47:24,711 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:47:24.711502+00:00\r\n\r\n'
2025-08-02 13:47:25,433 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 13:47:25,433 - mcp.server.sse - DEBUG - Created new session with ID: 2d7c0adc-fcb2-47bf-80f6-d47e45a9c113
2025-08-02 13:47:25,433 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 13:47:25,433 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 13:47:25,435 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 13:47:25,435 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=2d7c0adcfcb247bf80f6d47e45a9c113
2025-08-02 13:47:25,435 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=2d7c0adcfcb247bf80f6d47e45a9c113\r\n\r\n'
2025-08-02 13:47:25,455 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:47:25,455 - mcp.server.sse - DEBUG - Parsed session ID: 2d7c0adc-fcb2-47bf-80f6-d47e45a9c113
2025-08-02 13:47:25,455 - mcp.server.sse - DEBUG - Received JSON: b'{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"protocolVersion":"2025-06-18","capabilities":{"sampling":{},"elicitation":{},"roots":{"listChanged":true}},"clientInfo":{"name":"mcp-inspector","version":"0.16.2"}}}'
2025-08-02 13:47:25,455 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.2'}}, jsonrpc='2.0', id=0)
2025-08-02 13:47:25,455 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.2'}}, jsonrpc='2.0', id=0)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c889be0>))
2025-08-02 13:47:25,456 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=0, result={'protocolVersion': '2025-03-26', 'capabilities': {'experimental': {}, 'prompts': {'listChanged': False}, 'resources': {'subscribe': False, 'listChanged': False}, 'tools': {'listChanged': False}}, 'serverInfo': {'name': 'Rowan MCP Server', 'version': '1.9.3'}})), metadata=None)
2025-08-02 13:47:25,456 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":0,"result":{"protocolVersion":"2025-03-26","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"Rowan MCP Server","version":"1.9.3"}}}\r\n\r\n'
2025-08-02 13:47:25,462 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:47:25,462 - mcp.server.sse - DEBUG - Parsed session ID: 2d7c0adc-fcb2-47bf-80f6-d47e45a9c113
2025-08-02 13:47:25,463 - mcp.server.sse - DEBUG - Received JSON: b'{"jsonrpc":"2.0","method":"notifications/initialized"}'
2025-08-02 13:47:25,463 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 13:47:25,463 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c889d00>))
2025-08-02 13:47:25,463 - mcp.server.lowlevel.server - DEBUG - Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 13:47:26,419 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:47:26.419431+00:00\r\n\r\n'
2025-08-02 13:47:27,957 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:47:27,957 - mcp.server.sse - DEBUG - Parsed session ID: 2d7c0adc-fcb2-47bf-80f6-d47e45a9c113
2025-08-02 13:47:27,957 - mcp.server.sse - DEBUG - Received JSON: b'{"jsonrpc":"2.0","id":1,"method":"tools/list","params":{"_meta":{"progressToken":1}}}'
2025-08-02 13:47:27,961 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/list', params={'_meta': {'progressToken': 1}}, jsonrpc='2.0', id=1)
2025-08-02 13:47:27,961 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/list', params={'_meta': {'progressToken': 1}}, jsonrpc='2.0', id=1)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c889d90>))
2025-08-02 13:47:27,963 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10c80b890>
2025-08-02 13:47:27,963 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 13:47:27,963 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListToolsRequest
2025-08-02 13:47:27,964 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:47:27,965 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=1, result={'tools': [{'name': 'submit_basic_calculation_workflow', 'description': 'Submit a basic calculation workflow using Rowan v2 API.\n\nPerforms fundamental quantum chemistry calculations with configurable methods\nand computational tasks. Returns a workflow object for tracking progress.\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'type': 'string'}, {'additionalProperties': True, 'type': 'object'}, {}], 'description': 'The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object', 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'description': "The method to use for the calculation (e.g., 'uma_m_omol', 'gfn2-xtb', 'r2scan_3c')", 'title': 'Method', 'type': 'string'}, 'tasks': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'description': 'List of computational tasks to perform. Optional[List[str]], Defaults to None', 'title': 'Tasks'}, 'mode': {'default': 'auto', 'description': "The mode to run the calculation in ('auto', 'rapid', 'careful', 'meticulous')", 'title': 'Mode', 'type': 'string'}, 'engine': {'default': 'omol25', 'description': "The computational engine to use ('omol25', 'xtb', 'psi4')", 'title': 'Engine', 'type': 'string'}, 'name': {'default': 'Basic Calculation Workflow', 'description': 'The name of the workflow for identification', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'UUID of the folder to place the workflow in (optional)', 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'description': 'Maximum number of credits to use for the workflow (optional)', 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_conformer_search_workflow', 'description': 'Submit a conformer search workflow using Rowan v2 API.\n\nExplores the conformational space of a molecule to find low-energy structures.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    conf_gen_mode: default to "rapid"\n        Options: "rapid", "careful", "meticulous"\n    final_method: default: "aimnet2_wb97md3"\n        Try other options, if user specifies\n    solvent: Optional solvent for implicit solvation (e.g., "water", "ethanol")\n    transition_state: Whether searching for transition state conformers (default: False)\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic conformer search\n    result = submit_conformer_search_workflow(\n        initial_molecule="CCCC",\n        conf_gen_mode="rapid"\n    )\n    \n    # Careful search with solvent\n    result = submit_conformer_search_workflow(\n        initial_molecule="CC(C)CC(=O)O",\n        conf_gen_mode="careful",\n        solvent="water",\n        final_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'conf_gen_mode': {'default': 'rapid', 'title': 'Conf Gen Mode', 'type': 'string'}, 'final_method': {'default': 'aimnet2_wb97md3', 'title': 'Final Method', 'type': 'string'}, 'solvent': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Solvent'}, 'transition_state': {'default': False, 'title': 'Transition State', 'type': 'boolean'}, 'name': {'default': 'Conformer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_solubility_workflow', 'description': 'Submit a solubility prediction workflow using Rowan v2 API.\n\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\nusing machine learning models.\n\nArgs:\n    initial_smiles: SMILES string of the molecule\n    solvents: List of solvents as SMILES or common names (e.g., ["water", "ethanol"])\n        If None, uses default solvents\n    temperatures: List of temperatures in Kelvin\n        If None, uses default temperature range\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic solubility prediction\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)Nc1ccc(O)cc1",\n        solvents=["water", "ethanol"],\n        temperatures=[298.15, 310.15]\n    )\n    \n    # With SMILES solvents\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)O",\n        solvents=["O", "CCO", "CCCCCC"],\n        temperatures=[273.15, 298.15, 323.15]\n    )\n', 'inputSchema': {'properties': {'initial_smiles': {'title': 'Initial Smiles', 'type': 'string'}, 'solvents': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Solvents'}, 'temperatures': {'anyOf': [{'items': {'type': 'number'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Temperatures'}, 'name': {'default': 'Solubility Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_smiles'], 'type': 'object'}}, {'name': 'submit_pka_workflow', 'description': 'Submit a pKa prediction workflow using Rowan v2 API.\n\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\nusing quantum chemistry calculations.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\n    deprotonate_elements: List of elements to consider for deprotonation\n        (e.g., ["N", "O", "S"]). If None, uses defaults\n    protonate_elements: List of elements to consider for protonation\n        (e.g., ["N", "O"]). If None, uses defaults\n    mode: Calculation mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic pKa prediction\n    result = submit_pka_workflow(\n        initial_molecule="CC(=O)O",\n        pka_range=(2, 8)\n    )\n    \n    # Specific elements with meticulous mode\n    result = submit_pka_workflow(\n        initial_molecule="NC(C)C(=O)O",\n        pka_range=(1, 14),\n        deprotonate_elements=["N", "O"],\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'pka_range': {'default': [2, 12], 'maxItems': 2, 'minItems': 2, 'prefixItems': [{'type': 'number'}, {'type': 'number'}], 'title': 'Pka Range', 'type': 'array'}, 'deprotonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Deprotonate Elements'}, 'protonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Protonate Elements'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'pKa Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_redox_potential_workflow', 'description': 'Submit a redox potential calculation workflow using Rowan v2 API.\n\nCalculates reduction and/or oxidation potentials for a molecule using\nquantum chemistry methods.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    reduction: Whether to calculate reduction potential (default: False)\n    oxidization: Whether to calculate oxidation potential (default: True)\n    mode: Calculation mode (default: "rapid")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic oxidation potential\n    result = submit_redox_potential_workflow(\n        initial_molecule="CC1=CC=CC=C1",\n        oxidization=True\n    )\n    \n    # Both reduction and oxidation with careful mode\n    result = submit_redox_potential_workflow(\n        initial_molecule="c1ccccc1",\n        reduction=True,\n        oxidization=True,\n        mode="careful"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'reduction': {'default': False, 'title': 'Reduction', 'type': 'boolean'}, 'oxidization': {'default': True, 'title': 'Oxidization', 'type': 'boolean'}, 'mode': {'default': 'rapid', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Redox Potential Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_fukui_workflow', 'description': 'Submit a Fukui indices calculation workflow using Rowan v2 API.\n\nCalculates Fukui indices to predict molecular reactivity at different sites.\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    optimization_method: Method for geometry optimization (default: "gfn2_xtb")\n        Common options: "gfn2_xtb", "r2scan_3c", "aimnet2_wb97md3"\n    fukui_method: Method for Fukui calculation (default: "gfn1_xtb")\n        Common options: "gfn1_xtb", "gfn2_xtb"\n    solvent_settings: Optional solvent configuration dictionary\n        Example: {"solvent": "water", "model": "alpb"}\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic Fukui indices\n    result = submit_fukui_workflow(\n        initial_molecule="CC(=O)O"\n    )\n    \n    # With solvent and advanced methods\n    result = submit_fukui_workflow(\n        initial_molecule="c1ccccc1N",\n        optimization_method="r2scan_3c",\n        fukui_method="gfn2_xtb",\n        solvent_settings={"solvent": "water", "model": "alpb"}\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'optimization_method': {'default': 'gfn2_xtb', 'title': 'Optimization Method', 'type': 'string'}, 'fukui_method': {'default': 'gfn1_xtb', 'title': 'Fukui Method', 'type': 'string'}, 'solvent_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Solvent Settings'}, 'name': {'default': 'Fukui Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_tautomer_search_workflow', 'description': 'Submit a tautomer search workflow using Rowan v2 API.\n\nSearches for different tautomeric forms of a molecule and evaluates their\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    mode: Search mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic tautomer search\n    result = submit_tautomer_search_workflow(\n        initial_molecule="CC(=O)CC(=O)C"\n    )\n    \n    # Meticulous search for complex molecule\n    result = submit_tautomer_search_workflow(\n        initial_molecule="c1ccc2c(c1)ncc(=O)[nH]2",\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Tautomer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_descriptors_workflow', 'description': 'Submit a molecular descriptors calculation workflow using Rowan v2 API.\n\nCalculates a comprehensive set of molecular descriptors including:\n- Physical properties (MW, logP, TPSA, etc.)\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\n- Topological indices\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic descriptor calculation\n    result = submit_descriptors_workflow(\n        initial_molecule="CC(=O)Nc1ccc(O)cc1"\n    )\n    \n    # For complex molecule\n    result = submit_descriptors_workflow(\n        initial_molecule="CN1C=NC2=C1C(=O)N(C(=O)N2C)C",\n        name="Caffeine Descriptors"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'name': {'default': 'Descriptors Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_scan_workflow', 'description': 'Submit a potential energy surface scan workflow using Rowan v2 API.\n\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\nor dihedrals) to map the potential energy surface.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    scan_settings: Dictionary specifying scan parameters\n        Example: {\n            "type": "dihedral",  # or "bond", "angle"\n            "atoms": [0, 1, 2, 3],  # atom indices\n            "start": -180,\n            "stop": 180,\n            "step": 10\n        }\n    calculation_engine: Computational engine (default: "omol25")\n        Options: "omol25", "xtb", "psi4"\n    calculation_method: Method for calculations (default: "uma_m_omol")\n        Options depend on engine\n    wavefront_propagation: Use wavefront optimization (default: True)\n        Speeds up scans by using previous geometries as starting points\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Dihedral scan\n    result = submit_scan_workflow(\n        initial_molecule="CC(C)CC",\n        scan_settings={\n            "type": "dihedral",\n            "atoms": [0, 1, 2, 3],\n            "start": -180,\n            "stop": 180,\n            "step": 15\n        }\n    )\n    \n    # Bond scan with advanced method\n    result = submit_scan_workflow(\n        initial_molecule="CC",\n        scan_settings={\n            "type": "bond",\n            "atoms": [0, 1],\n            "start": 1.0,\n            "stop": 2.5,\n            "step": 0.1\n        },\n        calculation_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'scan_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Scan Settings'}, 'calculation_engine': {'default': 'omol25', 'title': 'Calculation Engine', 'type': 'string'}, 'calculation_method': {'default': 'uma_m_omol', 'title': 'Calculation Method', 'type': 'string'}, 'wavefront_propagation': {'default': True, 'title': 'Wavefront Propagation', 'type': 'boolean'}, 'name': {'default': 'Scan Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_irc_workflow', 'description': 'Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\n\nArgs:\n    initial_molecule: The initial molecule to perform the IRC calculation on.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    method: The computational method to use for the IRC calculation (default: "uma_m_omol")\n        See list of available methods for options\n    engine: The computational engine to use for the calculation (default: "omol25")\n        See list of available engines\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\n    step_size: The step size to use for the IRC calculation (default: 0.05)\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted IRC workflow\n    \nExample:\n    # Basic IRC calculation\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "[CH3].[CH3]"},\n        method="gfn2_xtb",\n        max_irc_steps=50\n    )\n    \n    # IRC with specific method and engine\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "CC(O)=CC"},\n        method="r2scan_3c",\n        engine="psi4",\n        step_size=0.03\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'title': 'Method', 'type': 'string'}, 'engine': {'default': 'omol25', 'title': 'Engine', 'type': 'string'}, 'preopt': {'default': True, 'title': 'Preopt', 'type': 'boolean'}, 'step_size': {'default': 0.05, 'title': 'Step Size', 'type': 'number'}, 'max_irc_steps': {'default': 30, 'title': 'Max Irc Steps', 'type': 'integer'}, 'name': {'default': 'IRC Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'type': 'object'}}, {'name': 'submit_protein_cofolding_workflow', 'description': 'Submits a protein cofolding workflow to the API.\n\nArgs:\n    initial_protein_sequences: The sequences of the proteins to be cofolded\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\n    use_msa_server: Whether to use the MSA server for the computation\n    use_potentials: Whether to use potentials for the computation\n    name: The name of the workflow\n    model: The model to use for the computation\n    folder_uuid: The UUID of the folder to store the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Protein dimer cofolding\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=[\n            "MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK",\n            "MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF"\n        ]\n    )\n    \n    # Protein-ligand complex\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=["MGSSHHHHHHSSGLVPRGSH"],\n        initial_smiles_list=["CC(=O)O", "CCO"],\n        ligand_binding_affinity_index=0,\n        use_msa_server=True\n    )\n', 'inputSchema': {'properties': {'initial_protein_sequences': {'items': {'type': 'string'}, 'title': 'Initial Protein Sequences', 'type': 'array'}, 'initial_smiles_list': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Initial Smiles List'}, 'ligand_binding_affinity_index': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Ligand Binding Affinity Index'}, 'use_msa_server': {'default': True, 'title': 'Use Msa Server', 'type': 'boolean'}, 'use_potentials': {'default': False, 'title': 'Use Potentials', 'type': 'boolean'}, 'name': {'default': 'Cofolding Workflow', 'title': 'Name', 'type': 'string'}, 'model': {'default': 'boltz_2', 'title': 'Model', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_protein_sequences'], 'type': 'object'}}, {'name': 'submit_docking_workflow', 'description': 'Submits a Docking workflow to the API.\n\nArgs:\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\n    pocket: The pocket to dock into\n    initial_molecule: The initial molecule to be docked.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    do_csearch: Whether to perform a conformational search on the ligand\n    do_optimization: Whether to perform an optimization on the ligand\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic docking with protein UUID\n    result = submit_docking_workflow(\n        protein="protein-uuid-123",\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CC(=O)Oc1ccccc1C(=O)O"}\n    )\n    \n    # Docking with optimization disabled\n    result = submit_docking_workflow(\n        protein=protein_obj,\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CCO"},\n        do_csearch=False,\n        do_optimization=False\n    )\n', 'inputSchema': {'properties': {'protein': {'anyOf': [{'type': 'string'}, {}], 'title': 'Protein'}, 'pocket': {'title': 'Pocket'}, 'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'do_csearch': {'default': True, 'title': 'Do Csearch', 'type': 'boolean'}, 'do_optimization': {'default': True, 'title': 'Do Optimization', 'type': 'boolean'}, 'name': {'default': 'Docking Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['protein', 'pocket'], 'type': 'object'}}, {'name': 'workflow_fetch_latest', 'description': 'Fetch the latest workflow data from the database.\n\nUpdates the workflow object with the most recent status and results.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to fetch\n    in_place: Whether to update the workflow object in place (default: False)\n    \nReturns:\n    Dictionary containing the updated workflow data including status and results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'in_place': {'default': False, 'title': 'In Place', 'type': 'boolean'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_wait_for_result', 'description': 'Wait for a workflow to complete and return the result.\n\nBlocks until the workflow completes, polling at specified intervals.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to wait for\n    poll_interval: Time in seconds between status checks (default: 5)\n    \nReturns:\n    Dictionary containing the completed workflow data including results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'poll_interval': {'default': 5, 'title': 'Poll Interval', 'type': 'integer'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_get_status', 'description': 'Get the current status of a workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with status information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_stop', 'description': 'Stop a running workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to stop\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete', 'description': 'Delete a workflow.\n\nThis permanently removes the workflow and its results from the database.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to delete\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'retrieve_workflow', 'description': 'Retrieve a workflow from the API.\n\nArgs:\n    uuid: The UUID of the workflow to retrieve\n    \nReturns:\n    Dictionary containing the complete workflow data\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'retrieve_calculation_molecules', 'description': 'Retrieve a list of molecules from a calculation.\n\nArgs:\n    uuid: The UUID of the calculation to retrieve molecules from\n    \nReturns:\n    List of dictionaries representing the molecules in the calculation\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'list_workflows', 'description': 'List workflows subject to the specified criteria.\n\nArgs:\n    parent_uuid: The UUID of the parent folder\n    name_contains: Substring to search for in workflow names\n    public: Filter workflows by their public status\n    starred: Filter workflows by their starred status\n    status: Filter workflows by their status\n    workflow_type: Filter workflows by their type\n    page: The page number to retrieve (default: 0)\n    size: The number of items per page (default: 10)\n    \nReturns:\n    List of workflow dictionaries that match the search criteria\n    \nRaises:\n    HTTPError: If the request to the API fails\n', 'inputSchema': {'properties': {'parent_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Parent Uuid'}, 'name_contains': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name Contains'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'status': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Status'}, 'workflow_type': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Type'}, 'page': {'default': 0, 'title': 'Page', 'type': 'integer'}, 'size': {'default': 10, 'title': 'Size', 'type': 'integer'}}, 'type': 'object'}}, {'name': 'workflow_update', 'description': 'Update workflow details.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to update\n    name: New name for the workflow (optional)\n    notes: New notes for the workflow (optional)\n    starred: Whether to star/unstar the workflow (optional)\n    public: Whether to make the workflow public/private (optional)\n    \nReturns:\n    Dictionary with updated workflow information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name'}, 'notes': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Notes'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_is_finished', 'description': 'Check if a workflow is finished.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to check\n    \nReturns:\n    Dictionary with workflow completion status\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete_data', 'description': 'Delete workflow data while keeping the workflow record.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}]})), metadata=None)
2025-08-02 13:47:27,968 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":1,"result":{"tools":[{"name":"submit_basic_calculation_workflow","description":"Submit a basic calculation workflow using Rowan v2 API.\\n\\nPerforms fundamental quantum chemistry calculations with configurable methods\\nand computational tasks. Returns a workflow object for tracking progress.\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"type":"string"},{"additionalProperties":true,"type":"object"},{}],"description":"The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object","title":"Initial Molecule"},"method":{"default":"uma_m_omol","description":"The method to use for the calculation (e.g., \'uma_m_omol\', \'gfn2-xtb\', \'r2scan_3c\')","title":"Method","type":"string"},"tasks":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"description":"List of computational tasks to perform. Optional[List[str]], Defaults to None","title":"Tasks"},"mode":{"default":"auto","description":"The mode to run the calculation in (\'auto\', \'rapid\', \'careful\', \'meticulous\')","title":"Mode","type":"string"},"engine":{"default":"omol25","description":"The computational engine to use (\'omol25\', \'xtb\', \'psi4\')","title":"Engine","type":"string"},"name":{"default":"Basic Calculation Workflow","description":"The name of the workflow for identification","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"UUID of the folder to place the workflow in (optional)","title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"description":"Maximum number of credits to use for the workflow (optional)","title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_conformer_search_workflow","description":"Submit a conformer search workflow using Rowan v2 API.\\n\\nExplores the conformational space of a molecule to find low-energy structures.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    conf_gen_mode: default to \\"rapid\\"\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    final_method: default: \\"aimnet2_wb97md3\\"\\n        Try other options, if user specifies\\n    solvent: Optional solvent for implicit solvation (e.g., \\"water\\", \\"ethanol\\")\\n    transition_state: Whether searching for transition state conformers (default: False)\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic conformer search\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CCCC\\",\\n        conf_gen_mode=\\"rapid\\"\\n    )\\n    \\n    # Careful search with solvent\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CC(C)CC(=O)O\\",\\n        conf_gen_mode=\\"careful\\",\\n        solvent=\\"water\\",\\n        final_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"conf_gen_mode":{"default":"rapid","title":"Conf Gen Mode","type":"string"},"final_method":{"default":"aimnet2_wb97md3","title":"Final Method","type":"string"},"solvent":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Solvent"},"transition_state":{"default":false,"title":"Transition State","type":"boolean"},"name":{"default":"Conformer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_solubility_workflow","description":"Submit a solubility prediction workflow using Rowan v2 API.\\n\\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\\nusing machine learning models.\\n\\nArgs:\\n    initial_smiles: SMILES string of the molecule\\n    solvents: List of solvents as SMILES or common names (e.g., [\\"water\\", \\"ethanol\\"])\\n        If None, uses default solvents\\n    temperatures: List of temperatures in Kelvin\\n        If None, uses default temperature range\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic solubility prediction\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)Nc1ccc(O)cc1\\",\\n        solvents=[\\"water\\", \\"ethanol\\"],\\n        temperatures=[298.15, 310.15]\\n    )\\n    \\n    # With SMILES solvents\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)O\\",\\n        solvents=[\\"O\\", \\"CCO\\", \\"CCCCCC\\"],\\n        temperatures=[273.15, 298.15, 323.15]\\n    )\\n","inputSchema":{"properties":{"initial_smiles":{"title":"Initial Smiles","type":"string"},"solvents":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Solvents"},"temperatures":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"default":null,"title":"Temperatures"},"name":{"default":"Solubility Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_smiles"],"type":"object"}},{"name":"submit_pka_workflow","description":"Submit a pKa prediction workflow using Rowan v2 API.\\n\\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\\nusing quantum chemistry calculations.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\\n    deprotonate_elements: List of elements to consider for deprotonation\\n        (e.g., [\\"N\\", \\"O\\", \\"S\\"]). If None, uses defaults\\n    protonate_elements: List of elements to consider for protonation\\n        (e.g., [\\"N\\", \\"O\\"]). If None, uses defaults\\n    mode: Calculation mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic pKa prediction\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"CC(=O)O\\",\\n        pka_range=(2, 8)\\n    )\\n    \\n    # Specific elements with meticulous mode\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"NC(C)C(=O)O\\",\\n        pka_range=(1, 14),\\n        deprotonate_elements=[\\"N\\", \\"O\\"],\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"pka_range":{"default":[2,12],"maxItems":2,"minItems":2,"prefixItems":[{"type":"number"},{"type":"number"}],"title":"Pka Range","type":"array"},"deprotonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Deprotonate Elements"},"protonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Protonate Elements"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"pKa Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_redox_potential_workflow","description":"Submit a redox potential calculation workflow using Rowan v2 API.\\n\\nCalculates reduction and/or oxidation potentials for a molecule using\\nquantum chemistry methods.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    reduction: Whether to calculate reduction potential (default: False)\\n    oxidization: Whether to calculate oxidation potential (default: True)\\n    mode: Calculation mode (default: \\"rapid\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic oxidation potential\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"CC1=CC=CC=C1\\",\\n        oxidization=True\\n    )\\n    \\n    # Both reduction and oxidation with careful mode\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"c1ccccc1\\",\\n        reduction=True,\\n        oxidization=True,\\n        mode=\\"careful\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"reduction":{"default":false,"title":"Reduction","type":"boolean"},"oxidization":{"default":true,"title":"Oxidization","type":"boolean"},"mode":{"default":"rapid","title":"Mode","type":"string"},"name":{"default":"Redox Potential Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_fukui_workflow","description":"Submit a Fukui indices calculation workflow using Rowan v2 API.\\n\\nCalculates Fukui indices to predict molecular reactivity at different sites.\\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    optimization_method: Method for geometry optimization (default: \\"gfn2_xtb\\")\\n        Common options: \\"gfn2_xtb\\", \\"r2scan_3c\\", \\"aimnet2_wb97md3\\"\\n    fukui_method: Method for Fukui calculation (default: \\"gfn1_xtb\\")\\n        Common options: \\"gfn1_xtb\\", \\"gfn2_xtb\\"\\n    solvent_settings: Optional solvent configuration dictionary\\n        Example: {\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic Fukui indices\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"CC(=O)O\\"\\n    )\\n    \\n    # With solvent and advanced methods\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"c1ccccc1N\\",\\n        optimization_method=\\"r2scan_3c\\",\\n        fukui_method=\\"gfn2_xtb\\",\\n        solvent_settings={\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"optimization_method":{"default":"gfn2_xtb","title":"Optimization Method","type":"string"},"fukui_method":{"default":"gfn1_xtb","title":"Fukui Method","type":"string"},"solvent_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Solvent Settings"},"name":{"default":"Fukui Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_tautomer_search_workflow","description":"Submit a tautomer search workflow using Rowan v2 API.\\n\\nSearches for different tautomeric forms of a molecule and evaluates their\\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    mode: Search mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic tautomer search\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"CC(=O)CC(=O)C\\"\\n    )\\n    \\n    # Meticulous search for complex molecule\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"c1ccc2c(c1)ncc(=O)[nH]2\\",\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"Tautomer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_descriptors_workflow","description":"Submit a molecular descriptors calculation workflow using Rowan v2 API.\\n\\nCalculates a comprehensive set of molecular descriptors including:\\n- Physical properties (MW, logP, TPSA, etc.)\\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\\n- Topological indices\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic descriptor calculation\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CC(=O)Nc1ccc(O)cc1\\"\\n    )\\n    \\n    # For complex molecule\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)C\\",\\n        name=\\"Caffeine Descriptors\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"name":{"default":"Descriptors Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_scan_workflow","description":"Submit a potential energy surface scan workflow using Rowan v2 API.\\n\\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\\nor dihedrals) to map the potential energy surface.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    scan_settings: Dictionary specifying scan parameters\\n        Example: {\\n            \\"type\\": \\"dihedral\\",  # or \\"bond\\", \\"angle\\"\\n            \\"atoms\\": [0, 1, 2, 3],  # atom indices\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 10\\n        }\\n    calculation_engine: Computational engine (default: \\"omol25\\")\\n        Options: \\"omol25\\", \\"xtb\\", \\"psi4\\"\\n    calculation_method: Method for calculations (default: \\"uma_m_omol\\")\\n        Options depend on engine\\n    wavefront_propagation: Use wavefront optimization (default: True)\\n        Speeds up scans by using previous geometries as starting points\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Dihedral scan\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC(C)CC\\",\\n        scan_settings={\\n            \\"type\\": \\"dihedral\\",\\n            \\"atoms\\": [0, 1, 2, 3],\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 15\\n        }\\n    )\\n    \\n    # Bond scan with advanced method\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC\\",\\n        scan_settings={\\n            \\"type\\": \\"bond\\",\\n            \\"atoms\\": [0, 1],\\n            \\"start\\": 1.0,\\n            \\"stop\\": 2.5,\\n            \\"step\\": 0.1\\n        },\\n        calculation_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"scan_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Scan Settings"},"calculation_engine":{"default":"omol25","title":"Calculation Engine","type":"string"},"calculation_method":{"default":"uma_m_omol","title":"Calculation Method","type":"string"},"wavefront_propagation":{"default":true,"title":"Wavefront Propagation","type":"boolean"},"name":{"default":"Scan Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_irc_workflow","description":"Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\\n\\nArgs:\\n    initial_molecule: The initial molecule to perform the IRC calculation on.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    method: The computational method to use for the IRC calculation (default: \\"uma_m_omol\\")\\n        See list of available methods for options\\n    engine: The computational engine to use for the calculation (default: \\"omol25\\")\\n        See list of available engines\\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\\n    step_size: The step size to use for the IRC calculation (default: 0.05)\\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted IRC workflow\\n    \\nExample:\\n    # Basic IRC calculation\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"[CH3].[CH3]\\"},\\n        method=\\"gfn2_xtb\\",\\n        max_irc_steps=50\\n    )\\n    \\n    # IRC with specific method and engine\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"CC(O)=CC\\"},\\n        method=\\"r2scan_3c\\",\\n        engine=\\"psi4\\",\\n        step_size=0.03\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"method":{"default":"uma_m_omol","title":"Method","type":"string"},"engine":{"default":"omol25","title":"Engine","type":"string"},"preopt":{"default":true,"title":"Preopt","type":"boolean"},"step_size":{"default":0.05,"title":"Step Size","type":"number"},"max_irc_steps":{"default":30,"title":"Max Irc Steps","type":"integer"},"name":{"default":"IRC Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"type":"object"}},{"name":"submit_protein_cofolding_workflow","description":"Submits a protein cofolding workflow to the API.\\n\\nArgs:\\n    initial_protein_sequences: The sequences of the proteins to be cofolded\\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\\n    use_msa_server: Whether to use the MSA server for the computation\\n    use_potentials: Whether to use potentials for the computation\\n    name: The name of the workflow\\n    model: The model to use for the computation\\n    folder_uuid: The UUID of the folder to store the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Protein dimer cofolding\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\n            \\"MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK\\",\\n            \\"MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF\\"\\n        ]\\n    )\\n    \\n    # Protein-ligand complex\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\"MGSSHHHHHHSSGLVPRGSH\\"],\\n        initial_smiles_list=[\\"CC(=O)O\\", \\"CCO\\"],\\n        ligand_binding_affinity_index=0,\\n        use_msa_server=True\\n    )\\n","inputSchema":{"properties":{"initial_protein_sequences":{"items":{"type":"string"},"title":"Initial Protein Sequences","type":"array"},"initial_smiles_list":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Initial Smiles List"},"ligand_binding_affinity_index":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Ligand Binding Affinity Index"},"use_msa_server":{"default":true,"title":"Use Msa Server","type":"boolean"},"use_potentials":{"default":false,"title":"Use Potentials","type":"boolean"},"name":{"default":"Cofolding Workflow","title":"Name","type":"string"},"model":{"default":"boltz_2","title":"Model","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_protein_sequences"],"type":"object"}},{"name":"submit_docking_workflow","description":"Submits a Docking workflow to the API.\\n\\nArgs:\\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\\n    pocket: The pocket to dock into\\n    initial_molecule: The initial molecule to be docked.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    do_csearch: Whether to perform a conformational search on the ligand\\n    do_optimization: Whether to perform an optimization on the ligand\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic docking with protein UUID\\n    result = submit_docking_workflow(\\n        protein=\\"protein-uuid-123\\",\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CC(=O)Oc1ccccc1C(=O)O\\"}\\n    )\\n    \\n    # Docking with optimization disabled\\n    result = submit_docking_workflow(\\n        protein=protein_obj,\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CCO\\"},\\n        do_csearch=False,\\n        do_optimization=False\\n    )\\n","inputSchema":{"properties":{"protein":{"anyOf":[{"type":"string"},{}],"title":"Protein"},"pocket":{"title":"Pocket"},"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"do_csearch":{"default":true,"title":"Do Csearch","type":"boolean"},"do_optimization":{"default":true,"title":"Do Optimization","type":"boolean"},"name":{"default":"Docking Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["protein","pocket"],"type":"object"}},{"name":"workflow_fetch_latest","description":"Fetch the latest workflow data from the database.\\n\\nUpdates the workflow object with the most recent status and results.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to fetch\\n    in_place: Whether to update the workflow object in place (default: False)\\n    \\nReturns:\\n    Dictionary containing the updated workflow data including status and results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"in_place":{"default":false,"title":"In Place","type":"boolean"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_wait_for_result","description":"Wait for a workflow to complete and return the result.\\n\\nBlocks until the workflow completes, polling at specified intervals.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to wait for\\n    poll_interval: Time in seconds between status checks (default: 5)\\n    \\nReturns:\\n    Dictionary containing the completed workflow data including results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"poll_interval":{"default":5,"title":"Poll Interval","type":"integer"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_get_status","description":"Get the current status of a workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with status information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_stop","description":"Stop a running workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to stop\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete","description":"Delete a workflow.\\n\\nThis permanently removes the workflow and its results from the database.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to delete\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"retrieve_workflow","description":"Retrieve a workflow from the API.\\n\\nArgs:\\n    uuid: The UUID of the workflow to retrieve\\n    \\nReturns:\\n    Dictionary containing the complete workflow data\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"retrieve_calculation_molecules","description":"Retrieve a list of molecules from a calculation.\\n\\nArgs:\\n    uuid: The UUID of the calculation to retrieve molecules from\\n    \\nReturns:\\n    List of dictionaries representing the molecules in the calculation\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"list_workflows","description":"List workflows subject to the specified criteria.\\n\\nArgs:\\n    parent_uuid: The UUID of the parent folder\\n    name_contains: Substring to search for in workflow names\\n    public: Filter workflows by their public status\\n    starred: Filter workflows by their starred status\\n    status: Filter workflows by their status\\n    workflow_type: Filter workflows by their type\\n    page: The page number to retrieve (default: 0)\\n    size: The number of items per page (default: 10)\\n    \\nReturns:\\n    List of workflow dictionaries that match the search criteria\\n    \\nRaises:\\n    HTTPError: If the request to the API fails\\n","inputSchema":{"properties":{"parent_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Parent Uuid"},"name_contains":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name Contains"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"status":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Status"},"workflow_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Workflow Type"},"page":{"default":0,"title":"Page","type":"integer"},"size":{"default":10,"title":"Size","type":"integer"}},"type":"object"}},{"name":"workflow_update","description":"Update workflow details.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to update\\n    name: New name for the workflow (optional)\\n    notes: New notes for the workflow (optional)\\n    starred: Whether to star/unstar the workflow (optional)\\n    public: Whether to make the workflow public/private (optional)\\n    \\nReturns:\\n    Dictionary with updated workflow information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name"},"notes":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Notes"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_is_finished","description":"Check if a workflow is finished.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to check\\n    \\nReturns:\\n    Dictionary with workflow completion status\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete_data","description":"Delete workflow data while keeping the workflow record.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}}]}}\r\n\r\n'
2025-08-02 13:47:29,524 - sse_starlette.sse - DEBUG - Got event: http.disconnect. Stop streaming.
2025-08-02 13:47:29,524 - root - DEBUG - Client session disconnected 2d7c0adc-fcb2-47bf-80f6-d47e45a9c113
2025-08-02 13:47:39,713 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:47:39.713729+00:00\r\n\r\n'
2025-08-02 13:47:41,420 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:47:41.420566+00:00\r\n\r\n'
2025-08-02 13:47:54,716 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:47:54.716468+00:00\r\n\r\n'
2025-08-02 13:47:56,424 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:47:56.424270+00:00\r\n\r\n'
2025-08-02 13:48:09,719 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:48:09.719146+00:00\r\n\r\n'
2025-08-02 13:48:11,427 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:48:11.427093+00:00\r\n\r\n'
2025-08-02 13:48:24,722 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:48:24.722821+00:00\r\n\r\n'
2025-08-02 13:48:26,430 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:48:26.430073+00:00\r\n\r\n'
2025-08-02 13:48:39,725 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:48:39.725019+00:00\r\n\r\n'
2025-08-02 13:48:41,436 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:48:41.436318+00:00\r\n\r\n'
2025-08-02 13:48:54,730 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:48:54.730292+00:00\r\n\r\n'
2025-08-02 13:48:56,442 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:48:56.442174+00:00\r\n\r\n'
2025-08-02 13:49:09,734 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:49:09.733823+00:00\r\n\r\n'
2025-08-02 13:49:11,444 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:49:11.444709+00:00\r\n\r\n'
2025-08-02 13:49:24,736 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:49:24.736752+00:00\r\n\r\n'
2025-08-02 13:49:26,449 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:49:26.449285+00:00\r\n\r\n'
2025-08-02 13:49:39,431 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 13:49:39,431 - mcp.server.sse - DEBUG - Created new session with ID: be66ed27-7514-4125-b934-c2b1e6363ef2
2025-08-02 13:49:39,432 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 13:49:39,432 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 13:49:39,434 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 13:49:39,435 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=be66ed2775144125b934c2b1e6363ef2
2025-08-02 13:49:39,435 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=be66ed2775144125b934c2b1e6363ef2\r\n\r\n'
2025-08-02 13:49:39,457 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:49:39,457 - mcp.server.sse - DEBUG - Parsed session ID: be66ed27-7514-4125-b934-c2b1e6363ef2
2025-08-02 13:49:39,457 - mcp.server.sse - DEBUG - Received JSON: b'{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"protocolVersion":"2025-06-18","capabilities":{"sampling":{},"elicitation":{},"roots":{"listChanged":true}},"clientInfo":{"name":"mcp-inspector","version":"0.16.2"}}}'
2025-08-02 13:49:39,457 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.2'}}, jsonrpc='2.0', id=0)
2025-08-02 13:49:39,457 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'sampling': {}, 'elicitation': {}, 'roots': {'listChanged': True}}, 'clientInfo': {'name': 'mcp-inspector', 'version': '0.16.2'}}, jsonrpc='2.0', id=0)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c889eb0>))
2025-08-02 13:49:39,458 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=0, result={'protocolVersion': '2025-03-26', 'capabilities': {'experimental': {}, 'prompts': {'listChanged': False}, 'resources': {'subscribe': False, 'listChanged': False}, 'tools': {'listChanged': False}}, 'serverInfo': {'name': 'Rowan MCP Server', 'version': '1.9.3'}})), metadata=None)
2025-08-02 13:49:39,458 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":0,"result":{"protocolVersion":"2025-03-26","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"Rowan MCP Server","version":"1.9.3"}}}\r\n\r\n'
2025-08-02 13:49:39,468 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:49:39,468 - mcp.server.sse - DEBUG - Parsed session ID: be66ed27-7514-4125-b934-c2b1e6363ef2
2025-08-02 13:49:39,468 - mcp.server.sse - DEBUG - Received JSON: b'{"jsonrpc":"2.0","method":"notifications/initialized"}'
2025-08-02 13:49:39,468 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 13:49:39,468 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c889f40>))
2025-08-02 13:49:39,468 - mcp.server.lowlevel.server - DEBUG - Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 13:49:39,740 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:49:39.740362+00:00\r\n\r\n'
2025-08-02 13:49:41,452 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:49:41.452113+00:00\r\n\r\n'
2025-08-02 13:49:41,841 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:49:41,842 - mcp.server.sse - DEBUG - Parsed session ID: be66ed27-7514-4125-b934-c2b1e6363ef2
2025-08-02 13:49:41,842 - mcp.server.sse - DEBUG - Received JSON: b'{"jsonrpc":"2.0","id":1,"method":"tools/list","params":{"_meta":{"progressToken":1}}}'
2025-08-02 13:49:41,842 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/list', params={'_meta': {'progressToken': 1}}, jsonrpc='2.0', id=1)
2025-08-02 13:49:41,842 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/list', params={'_meta': {'progressToken': 1}}, jsonrpc='2.0', id=1)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c889fd0>))
2025-08-02 13:49:41,843 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10c846140>
2025-08-02 13:49:41,844 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 13:49:41,844 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListToolsRequest
2025-08-02 13:49:41,844 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:49:41,845 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=1, result={'tools': [{'name': 'submit_basic_calculation_workflow', 'description': 'Submit a basic calculation workflow using Rowan v2 API.\n\nPerforms fundamental quantum chemistry calculations with configurable methods\nand computational tasks. Returns a workflow object for tracking progress.\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'type': 'string'}, {'additionalProperties': True, 'type': 'object'}, {}], 'description': 'The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object', 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'description': "The method to use for the calculation (e.g., 'uma_m_omol', 'gfn2-xtb', 'r2scan_3c')", 'title': 'Method', 'type': 'string'}, 'tasks': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'description': 'List of computational tasks to perform. Optional[List[str]], Defaults to None', 'title': 'Tasks'}, 'mode': {'default': 'auto', 'description': "The mode to run the calculation in ('auto', 'rapid', 'careful', 'meticulous')", 'title': 'Mode', 'type': 'string'}, 'engine': {'default': 'omol25', 'description': "The computational engine to use ('omol25', 'xtb', 'psi4')", 'title': 'Engine', 'type': 'string'}, 'name': {'default': 'Basic Calculation Workflow', 'description': 'The name of the workflow for identification', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'UUID of the folder to place the workflow in (optional)', 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'description': 'Maximum number of credits to use for the workflow (optional)', 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_conformer_search_workflow', 'description': 'Submit a conformer search workflow using Rowan v2 API.\n\nExplores the conformational space of a molecule to find low-energy structures.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    conf_gen_mode: default to "rapid"\n        Options: "rapid", "careful", "meticulous"\n    final_method: default: "aimnet2_wb97md3"\n        Try other options, if user specifies\n    solvent: Optional solvent for implicit solvation (e.g., "water", "ethanol")\n    transition_state: Whether searching for transition state conformers (default: False)\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic conformer search\n    result = submit_conformer_search_workflow(\n        initial_molecule="CCCC",\n        conf_gen_mode="rapid"\n    )\n    \n    # Careful search with solvent\n    result = submit_conformer_search_workflow(\n        initial_molecule="CC(C)CC(=O)O",\n        conf_gen_mode="careful",\n        solvent="water",\n        final_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'conf_gen_mode': {'default': 'rapid', 'title': 'Conf Gen Mode', 'type': 'string'}, 'final_method': {'default': 'aimnet2_wb97md3', 'title': 'Final Method', 'type': 'string'}, 'solvent': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Solvent'}, 'transition_state': {'default': False, 'title': 'Transition State', 'type': 'boolean'}, 'name': {'default': 'Conformer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_solubility_workflow', 'description': 'Submit a solubility prediction workflow using Rowan v2 API.\n\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\nusing machine learning models.\n\nArgs:\n    initial_smiles: SMILES string of the molecule\n    solvents: List of solvents as SMILES or common names (e.g., ["water", "ethanol"])\n        If None, uses default solvents\n    temperatures: List of temperatures in Kelvin\n        If None, uses default temperature range\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic solubility prediction\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)Nc1ccc(O)cc1",\n        solvents=["water", "ethanol"],\n        temperatures=[298.15, 310.15]\n    )\n    \n    # With SMILES solvents\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)O",\n        solvents=["O", "CCO", "CCCCCC"],\n        temperatures=[273.15, 298.15, 323.15]\n    )\n', 'inputSchema': {'properties': {'initial_smiles': {'title': 'Initial Smiles', 'type': 'string'}, 'solvents': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Solvents'}, 'temperatures': {'anyOf': [{'items': {'type': 'number'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Temperatures'}, 'name': {'default': 'Solubility Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_smiles'], 'type': 'object'}}, {'name': 'submit_pka_workflow', 'description': 'Submit a pKa prediction workflow using Rowan v2 API.\n\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\nusing quantum chemistry calculations.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\n    deprotonate_elements: List of elements to consider for deprotonation\n        (e.g., ["N", "O", "S"]). If None, uses defaults\n    protonate_elements: List of elements to consider for protonation\n        (e.g., ["N", "O"]). If None, uses defaults\n    mode: Calculation mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic pKa prediction\n    result = submit_pka_workflow(\n        initial_molecule="CC(=O)O",\n        pka_range=(2, 8)\n    )\n    \n    # Specific elements with meticulous mode\n    result = submit_pka_workflow(\n        initial_molecule="NC(C)C(=O)O",\n        pka_range=(1, 14),\n        deprotonate_elements=["N", "O"],\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'pka_range': {'default': [2, 12], 'maxItems': 2, 'minItems': 2, 'prefixItems': [{'type': 'number'}, {'type': 'number'}], 'title': 'Pka Range', 'type': 'array'}, 'deprotonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Deprotonate Elements'}, 'protonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Protonate Elements'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'pKa Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_redox_potential_workflow', 'description': 'Submit a redox potential calculation workflow using Rowan v2 API.\n\nCalculates reduction and/or oxidation potentials for a molecule using\nquantum chemistry methods.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    reduction: Whether to calculate reduction potential (default: False)\n    oxidization: Whether to calculate oxidation potential (default: True)\n    mode: Calculation mode (default: "rapid")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic oxidation potential\n    result = submit_redox_potential_workflow(\n        initial_molecule="CC1=CC=CC=C1",\n        oxidization=True\n    )\n    \n    # Both reduction and oxidation with careful mode\n    result = submit_redox_potential_workflow(\n        initial_molecule="c1ccccc1",\n        reduction=True,\n        oxidization=True,\n        mode="careful"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'reduction': {'default': False, 'title': 'Reduction', 'type': 'boolean'}, 'oxidization': {'default': True, 'title': 'Oxidization', 'type': 'boolean'}, 'mode': {'default': 'rapid', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Redox Potential Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_fukui_workflow', 'description': 'Submit a Fukui indices calculation workflow using Rowan v2 API.\n\nCalculates Fukui indices to predict molecular reactivity at different sites.\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    optimization_method: Method for geometry optimization (default: "gfn2_xtb")\n        Common options: "gfn2_xtb", "r2scan_3c", "aimnet2_wb97md3"\n    fukui_method: Method for Fukui calculation (default: "gfn1_xtb")\n        Common options: "gfn1_xtb", "gfn2_xtb"\n    solvent_settings: Optional solvent configuration dictionary\n        Example: {"solvent": "water", "model": "alpb"}\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic Fukui indices\n    result = submit_fukui_workflow(\n        initial_molecule="CC(=O)O"\n    )\n    \n    # With solvent and advanced methods\n    result = submit_fukui_workflow(\n        initial_molecule="c1ccccc1N",\n        optimization_method="r2scan_3c",\n        fukui_method="gfn2_xtb",\n        solvent_settings={"solvent": "water", "model": "alpb"}\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'optimization_method': {'default': 'gfn2_xtb', 'title': 'Optimization Method', 'type': 'string'}, 'fukui_method': {'default': 'gfn1_xtb', 'title': 'Fukui Method', 'type': 'string'}, 'solvent_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Solvent Settings'}, 'name': {'default': 'Fukui Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_tautomer_search_workflow', 'description': 'Submit a tautomer search workflow using Rowan v2 API.\n\nSearches for different tautomeric forms of a molecule and evaluates their\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    mode: Search mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic tautomer search\n    result = submit_tautomer_search_workflow(\n        initial_molecule="CC(=O)CC(=O)C"\n    )\n    \n    # Meticulous search for complex molecule\n    result = submit_tautomer_search_workflow(\n        initial_molecule="c1ccc2c(c1)ncc(=O)[nH]2",\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Tautomer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_descriptors_workflow', 'description': 'Submit a molecular descriptors calculation workflow using Rowan v2 API.\n\nCalculates a comprehensive set of molecular descriptors including:\n- Physical properties (MW, logP, TPSA, etc.)\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\n- Topological indices\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic descriptor calculation\n    result = submit_descriptors_workflow(\n        initial_molecule="CC(=O)Nc1ccc(O)cc1"\n    )\n    \n    # For complex molecule\n    result = submit_descriptors_workflow(\n        initial_molecule="CN1C=NC2=C1C(=O)N(C(=O)N2C)C",\n        name="Caffeine Descriptors"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'name': {'default': 'Descriptors Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_scan_workflow', 'description': 'Submit a potential energy surface scan workflow using Rowan v2 API.\n\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\nor dihedrals) to map the potential energy surface.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    scan_settings: Dictionary specifying scan parameters\n        Example: {\n            "type": "dihedral",  # or "bond", "angle"\n            "atoms": [0, 1, 2, 3],  # atom indices\n            "start": -180,\n            "stop": 180,\n            "step": 10\n        }\n    calculation_engine: Computational engine (default: "omol25")\n        Options: "omol25", "xtb", "psi4"\n    calculation_method: Method for calculations (default: "uma_m_omol")\n        Options depend on engine\n    wavefront_propagation: Use wavefront optimization (default: True)\n        Speeds up scans by using previous geometries as starting points\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Dihedral scan\n    result = submit_scan_workflow(\n        initial_molecule="CC(C)CC",\n        scan_settings={\n            "type": "dihedral",\n            "atoms": [0, 1, 2, 3],\n            "start": -180,\n            "stop": 180,\n            "step": 15\n        }\n    )\n    \n    # Bond scan with advanced method\n    result = submit_scan_workflow(\n        initial_molecule="CC",\n        scan_settings={\n            "type": "bond",\n            "atoms": [0, 1],\n            "start": 1.0,\n            "stop": 2.5,\n            "step": 0.1\n        },\n        calculation_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'scan_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Scan Settings'}, 'calculation_engine': {'default': 'omol25', 'title': 'Calculation Engine', 'type': 'string'}, 'calculation_method': {'default': 'uma_m_omol', 'title': 'Calculation Method', 'type': 'string'}, 'wavefront_propagation': {'default': True, 'title': 'Wavefront Propagation', 'type': 'boolean'}, 'name': {'default': 'Scan Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_irc_workflow', 'description': 'Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\n\nArgs:\n    initial_molecule: The initial molecule to perform the IRC calculation on.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    method: The computational method to use for the IRC calculation (default: "uma_m_omol")\n        See list of available methods for options\n    engine: The computational engine to use for the calculation (default: "omol25")\n        See list of available engines\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\n    step_size: The step size to use for the IRC calculation (default: 0.05)\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted IRC workflow\n    \nExample:\n    # Basic IRC calculation\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "[CH3].[CH3]"},\n        method="gfn2_xtb",\n        max_irc_steps=50\n    )\n    \n    # IRC with specific method and engine\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "CC(O)=CC"},\n        method="r2scan_3c",\n        engine="psi4",\n        step_size=0.03\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'title': 'Method', 'type': 'string'}, 'engine': {'default': 'omol25', 'title': 'Engine', 'type': 'string'}, 'preopt': {'default': True, 'title': 'Preopt', 'type': 'boolean'}, 'step_size': {'default': 0.05, 'title': 'Step Size', 'type': 'number'}, 'max_irc_steps': {'default': 30, 'title': 'Max Irc Steps', 'type': 'integer'}, 'name': {'default': 'IRC Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'type': 'object'}}, {'name': 'submit_protein_cofolding_workflow', 'description': 'Submits a protein cofolding workflow to the API.\n\nArgs:\n    initial_protein_sequences: The sequences of the proteins to be cofolded\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\n    use_msa_server: Whether to use the MSA server for the computation\n    use_potentials: Whether to use potentials for the computation\n    name: The name of the workflow\n    model: The model to use for the computation\n    folder_uuid: The UUID of the folder to store the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Protein dimer cofolding\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=[\n            "MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK",\n            "MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF"\n        ]\n    )\n    \n    # Protein-ligand complex\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=["MGSSHHHHHHSSGLVPRGSH"],\n        initial_smiles_list=["CC(=O)O", "CCO"],\n        ligand_binding_affinity_index=0,\n        use_msa_server=True\n    )\n', 'inputSchema': {'properties': {'initial_protein_sequences': {'items': {'type': 'string'}, 'title': 'Initial Protein Sequences', 'type': 'array'}, 'initial_smiles_list': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Initial Smiles List'}, 'ligand_binding_affinity_index': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Ligand Binding Affinity Index'}, 'use_msa_server': {'default': True, 'title': 'Use Msa Server', 'type': 'boolean'}, 'use_potentials': {'default': False, 'title': 'Use Potentials', 'type': 'boolean'}, 'name': {'default': 'Cofolding Workflow', 'title': 'Name', 'type': 'string'}, 'model': {'default': 'boltz_2', 'title': 'Model', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_protein_sequences'], 'type': 'object'}}, {'name': 'submit_docking_workflow', 'description': 'Submits a Docking workflow to the API.\n\nArgs:\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\n    pocket: The pocket to dock into\n    initial_molecule: The initial molecule to be docked.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    do_csearch: Whether to perform a conformational search on the ligand\n    do_optimization: Whether to perform an optimization on the ligand\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic docking with protein UUID\n    result = submit_docking_workflow(\n        protein="protein-uuid-123",\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CC(=O)Oc1ccccc1C(=O)O"}\n    )\n    \n    # Docking with optimization disabled\n    result = submit_docking_workflow(\n        protein=protein_obj,\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CCO"},\n        do_csearch=False,\n        do_optimization=False\n    )\n', 'inputSchema': {'properties': {'protein': {'anyOf': [{'type': 'string'}, {}], 'title': 'Protein'}, 'pocket': {'title': 'Pocket'}, 'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'do_csearch': {'default': True, 'title': 'Do Csearch', 'type': 'boolean'}, 'do_optimization': {'default': True, 'title': 'Do Optimization', 'type': 'boolean'}, 'name': {'default': 'Docking Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['protein', 'pocket'], 'type': 'object'}}, {'name': 'workflow_fetch_latest', 'description': 'Fetch the latest workflow data from the database.\n\nUpdates the workflow object with the most recent status and results.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to fetch\n    in_place: Whether to update the workflow object in place (default: False)\n    \nReturns:\n    Dictionary containing the updated workflow data including status and results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'in_place': {'default': False, 'title': 'In Place', 'type': 'boolean'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_wait_for_result', 'description': 'Wait for a workflow to complete and return the result.\n\nBlocks until the workflow completes, polling at specified intervals.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to wait for\n    poll_interval: Time in seconds between status checks (default: 5)\n    \nReturns:\n    Dictionary containing the completed workflow data including results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'poll_interval': {'default': 5, 'title': 'Poll Interval', 'type': 'integer'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_get_status', 'description': 'Get the current status of a workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with status information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_stop', 'description': 'Stop a running workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to stop\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete', 'description': 'Delete a workflow.\n\nThis permanently removes the workflow and its results from the database.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to delete\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'retrieve_workflow', 'description': 'Retrieve a workflow from the API.\n\nArgs:\n    uuid: The UUID of the workflow to retrieve\n    \nReturns:\n    Dictionary containing the complete workflow data\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'retrieve_calculation_molecules', 'description': 'Retrieve a list of molecules from a calculation.\n\nArgs:\n    uuid: The UUID of the calculation to retrieve molecules from\n    \nReturns:\n    List of dictionaries representing the molecules in the calculation\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'list_workflows', 'description': 'List workflows subject to the specified criteria.\n\nArgs:\n    parent_uuid: The UUID of the parent folder\n    name_contains: Substring to search for in workflow names\n    public: Filter workflows by their public status\n    starred: Filter workflows by their starred status\n    status: Filter workflows by their status\n    workflow_type: Filter workflows by their type\n    page: The page number to retrieve (default: 0)\n    size: The number of items per page (default: 10)\n    \nReturns:\n    List of workflow dictionaries that match the search criteria\n    \nRaises:\n    HTTPError: If the request to the API fails\n', 'inputSchema': {'properties': {'parent_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Parent Uuid'}, 'name_contains': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name Contains'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'status': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Status'}, 'workflow_type': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Type'}, 'page': {'default': 0, 'title': 'Page', 'type': 'integer'}, 'size': {'default': 10, 'title': 'Size', 'type': 'integer'}}, 'type': 'object'}}, {'name': 'workflow_update', 'description': 'Update workflow details.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to update\n    name: New name for the workflow (optional)\n    notes: New notes for the workflow (optional)\n    starred: Whether to star/unstar the workflow (optional)\n    public: Whether to make the workflow public/private (optional)\n    \nReturns:\n    Dictionary with updated workflow information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name'}, 'notes': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Notes'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_is_finished', 'description': 'Check if a workflow is finished.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to check\n    \nReturns:\n    Dictionary with workflow completion status\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete_data', 'description': 'Delete workflow data while keeping the workflow record.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}]})), metadata=None)
2025-08-02 13:49:41,850 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":1,"result":{"tools":[{"name":"submit_basic_calculation_workflow","description":"Submit a basic calculation workflow using Rowan v2 API.\\n\\nPerforms fundamental quantum chemistry calculations with configurable methods\\nand computational tasks. Returns a workflow object for tracking progress.\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"type":"string"},{"additionalProperties":true,"type":"object"},{}],"description":"The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object","title":"Initial Molecule"},"method":{"default":"uma_m_omol","description":"The method to use for the calculation (e.g., \'uma_m_omol\', \'gfn2-xtb\', \'r2scan_3c\')","title":"Method","type":"string"},"tasks":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"description":"List of computational tasks to perform. Optional[List[str]], Defaults to None","title":"Tasks"},"mode":{"default":"auto","description":"The mode to run the calculation in (\'auto\', \'rapid\', \'careful\', \'meticulous\')","title":"Mode","type":"string"},"engine":{"default":"omol25","description":"The computational engine to use (\'omol25\', \'xtb\', \'psi4\')","title":"Engine","type":"string"},"name":{"default":"Basic Calculation Workflow","description":"The name of the workflow for identification","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"UUID of the folder to place the workflow in (optional)","title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"description":"Maximum number of credits to use for the workflow (optional)","title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_conformer_search_workflow","description":"Submit a conformer search workflow using Rowan v2 API.\\n\\nExplores the conformational space of a molecule to find low-energy structures.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    conf_gen_mode: default to \\"rapid\\"\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    final_method: default: \\"aimnet2_wb97md3\\"\\n        Try other options, if user specifies\\n    solvent: Optional solvent for implicit solvation (e.g., \\"water\\", \\"ethanol\\")\\n    transition_state: Whether searching for transition state conformers (default: False)\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic conformer search\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CCCC\\",\\n        conf_gen_mode=\\"rapid\\"\\n    )\\n    \\n    # Careful search with solvent\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CC(C)CC(=O)O\\",\\n        conf_gen_mode=\\"careful\\",\\n        solvent=\\"water\\",\\n        final_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"conf_gen_mode":{"default":"rapid","title":"Conf Gen Mode","type":"string"},"final_method":{"default":"aimnet2_wb97md3","title":"Final Method","type":"string"},"solvent":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Solvent"},"transition_state":{"default":false,"title":"Transition State","type":"boolean"},"name":{"default":"Conformer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_solubility_workflow","description":"Submit a solubility prediction workflow using Rowan v2 API.\\n\\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\\nusing machine learning models.\\n\\nArgs:\\n    initial_smiles: SMILES string of the molecule\\n    solvents: List of solvents as SMILES or common names (e.g., [\\"water\\", \\"ethanol\\"])\\n        If None, uses default solvents\\n    temperatures: List of temperatures in Kelvin\\n        If None, uses default temperature range\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic solubility prediction\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)Nc1ccc(O)cc1\\",\\n        solvents=[\\"water\\", \\"ethanol\\"],\\n        temperatures=[298.15, 310.15]\\n    )\\n    \\n    # With SMILES solvents\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)O\\",\\n        solvents=[\\"O\\", \\"CCO\\", \\"CCCCCC\\"],\\n        temperatures=[273.15, 298.15, 323.15]\\n    )\\n","inputSchema":{"properties":{"initial_smiles":{"title":"Initial Smiles","type":"string"},"solvents":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Solvents"},"temperatures":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"default":null,"title":"Temperatures"},"name":{"default":"Solubility Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_smiles"],"type":"object"}},{"name":"submit_pka_workflow","description":"Submit a pKa prediction workflow using Rowan v2 API.\\n\\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\\nusing quantum chemistry calculations.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\\n    deprotonate_elements: List of elements to consider for deprotonation\\n        (e.g., [\\"N\\", \\"O\\", \\"S\\"]). If None, uses defaults\\n    protonate_elements: List of elements to consider for protonation\\n        (e.g., [\\"N\\", \\"O\\"]). If None, uses defaults\\n    mode: Calculation mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic pKa prediction\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"CC(=O)O\\",\\n        pka_range=(2, 8)\\n    )\\n    \\n    # Specific elements with meticulous mode\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"NC(C)C(=O)O\\",\\n        pka_range=(1, 14),\\n        deprotonate_elements=[\\"N\\", \\"O\\"],\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"pka_range":{"default":[2,12],"maxItems":2,"minItems":2,"prefixItems":[{"type":"number"},{"type":"number"}],"title":"Pka Range","type":"array"},"deprotonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Deprotonate Elements"},"protonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Protonate Elements"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"pKa Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_redox_potential_workflow","description":"Submit a redox potential calculation workflow using Rowan v2 API.\\n\\nCalculates reduction and/or oxidation potentials for a molecule using\\nquantum chemistry methods.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    reduction: Whether to calculate reduction potential (default: False)\\n    oxidization: Whether to calculate oxidation potential (default: True)\\n    mode: Calculation mode (default: \\"rapid\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic oxidation potential\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"CC1=CC=CC=C1\\",\\n        oxidization=True\\n    )\\n    \\n    # Both reduction and oxidation with careful mode\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"c1ccccc1\\",\\n        reduction=True,\\n        oxidization=True,\\n        mode=\\"careful\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"reduction":{"default":false,"title":"Reduction","type":"boolean"},"oxidization":{"default":true,"title":"Oxidization","type":"boolean"},"mode":{"default":"rapid","title":"Mode","type":"string"},"name":{"default":"Redox Potential Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_fukui_workflow","description":"Submit a Fukui indices calculation workflow using Rowan v2 API.\\n\\nCalculates Fukui indices to predict molecular reactivity at different sites.\\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    optimization_method: Method for geometry optimization (default: \\"gfn2_xtb\\")\\n        Common options: \\"gfn2_xtb\\", \\"r2scan_3c\\", \\"aimnet2_wb97md3\\"\\n    fukui_method: Method for Fukui calculation (default: \\"gfn1_xtb\\")\\n        Common options: \\"gfn1_xtb\\", \\"gfn2_xtb\\"\\n    solvent_settings: Optional solvent configuration dictionary\\n        Example: {\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic Fukui indices\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"CC(=O)O\\"\\n    )\\n    \\n    # With solvent and advanced methods\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"c1ccccc1N\\",\\n        optimization_method=\\"r2scan_3c\\",\\n        fukui_method=\\"gfn2_xtb\\",\\n        solvent_settings={\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"optimization_method":{"default":"gfn2_xtb","title":"Optimization Method","type":"string"},"fukui_method":{"default":"gfn1_xtb","title":"Fukui Method","type":"string"},"solvent_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Solvent Settings"},"name":{"default":"Fukui Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_tautomer_search_workflow","description":"Submit a tautomer search workflow using Rowan v2 API.\\n\\nSearches for different tautomeric forms of a molecule and evaluates their\\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    mode: Search mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic tautomer search\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"CC(=O)CC(=O)C\\"\\n    )\\n    \\n    # Meticulous search for complex molecule\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"c1ccc2c(c1)ncc(=O)[nH]2\\",\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"Tautomer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_descriptors_workflow","description":"Submit a molecular descriptors calculation workflow using Rowan v2 API.\\n\\nCalculates a comprehensive set of molecular descriptors including:\\n- Physical properties (MW, logP, TPSA, etc.)\\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\\n- Topological indices\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic descriptor calculation\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CC(=O)Nc1ccc(O)cc1\\"\\n    )\\n    \\n    # For complex molecule\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)C\\",\\n        name=\\"Caffeine Descriptors\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"name":{"default":"Descriptors Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_scan_workflow","description":"Submit a potential energy surface scan workflow using Rowan v2 API.\\n\\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\\nor dihedrals) to map the potential energy surface.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    scan_settings: Dictionary specifying scan parameters\\n        Example: {\\n            \\"type\\": \\"dihedral\\",  # or \\"bond\\", \\"angle\\"\\n            \\"atoms\\": [0, 1, 2, 3],  # atom indices\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 10\\n        }\\n    calculation_engine: Computational engine (default: \\"omol25\\")\\n        Options: \\"omol25\\", \\"xtb\\", \\"psi4\\"\\n    calculation_method: Method for calculations (default: \\"uma_m_omol\\")\\n        Options depend on engine\\n    wavefront_propagation: Use wavefront optimization (default: True)\\n        Speeds up scans by using previous geometries as starting points\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Dihedral scan\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC(C)CC\\",\\n        scan_settings={\\n            \\"type\\": \\"dihedral\\",\\n            \\"atoms\\": [0, 1, 2, 3],\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 15\\n        }\\n    )\\n    \\n    # Bond scan with advanced method\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC\\",\\n        scan_settings={\\n            \\"type\\": \\"bond\\",\\n            \\"atoms\\": [0, 1],\\n            \\"start\\": 1.0,\\n            \\"stop\\": 2.5,\\n            \\"step\\": 0.1\\n        },\\n        calculation_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"scan_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Scan Settings"},"calculation_engine":{"default":"omol25","title":"Calculation Engine","type":"string"},"calculation_method":{"default":"uma_m_omol","title":"Calculation Method","type":"string"},"wavefront_propagation":{"default":true,"title":"Wavefront Propagation","type":"boolean"},"name":{"default":"Scan Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_irc_workflow","description":"Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\\n\\nArgs:\\n    initial_molecule: The initial molecule to perform the IRC calculation on.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    method: The computational method to use for the IRC calculation (default: \\"uma_m_omol\\")\\n        See list of available methods for options\\n    engine: The computational engine to use for the calculation (default: \\"omol25\\")\\n        See list of available engines\\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\\n    step_size: The step size to use for the IRC calculation (default: 0.05)\\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted IRC workflow\\n    \\nExample:\\n    # Basic IRC calculation\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"[CH3].[CH3]\\"},\\n        method=\\"gfn2_xtb\\",\\n        max_irc_steps=50\\n    )\\n    \\n    # IRC with specific method and engine\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"CC(O)=CC\\"},\\n        method=\\"r2scan_3c\\",\\n        engine=\\"psi4\\",\\n        step_size=0.03\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"method":{"default":"uma_m_omol","title":"Method","type":"string"},"engine":{"default":"omol25","title":"Engine","type":"string"},"preopt":{"default":true,"title":"Preopt","type":"boolean"},"step_size":{"default":0.05,"title":"Step Size","type":"number"},"max_irc_steps":{"default":30,"title":"Max Irc Steps","type":"integer"},"name":{"default":"IRC Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"type":"object"}},{"name":"submit_protein_cofolding_workflow","description":"Submits a protein cofolding workflow to the API.\\n\\nArgs:\\n    initial_protein_sequences: The sequences of the proteins to be cofolded\\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\\n    use_msa_server: Whether to use the MSA server for the computation\\n    use_potentials: Whether to use potentials for the computation\\n    name: The name of the workflow\\n    model: The model to use for the computation\\n    folder_uuid: The UUID of the folder to store the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Protein dimer cofolding\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\n            \\"MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK\\",\\n            \\"MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF\\"\\n        ]\\n    )\\n    \\n    # Protein-ligand complex\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\"MGSSHHHHHHSSGLVPRGSH\\"],\\n        initial_smiles_list=[\\"CC(=O)O\\", \\"CCO\\"],\\n        ligand_binding_affinity_index=0,\\n        use_msa_server=True\\n    )\\n","inputSchema":{"properties":{"initial_protein_sequences":{"items":{"type":"string"},"title":"Initial Protein Sequences","type":"array"},"initial_smiles_list":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Initial Smiles List"},"ligand_binding_affinity_index":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Ligand Binding Affinity Index"},"use_msa_server":{"default":true,"title":"Use Msa Server","type":"boolean"},"use_potentials":{"default":false,"title":"Use Potentials","type":"boolean"},"name":{"default":"Cofolding Workflow","title":"Name","type":"string"},"model":{"default":"boltz_2","title":"Model","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_protein_sequences"],"type":"object"}},{"name":"submit_docking_workflow","description":"Submits a Docking workflow to the API.\\n\\nArgs:\\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\\n    pocket: The pocket to dock into\\n    initial_molecule: The initial molecule to be docked.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    do_csearch: Whether to perform a conformational search on the ligand\\n    do_optimization: Whether to perform an optimization on the ligand\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic docking with protein UUID\\n    result = submit_docking_workflow(\\n        protein=\\"protein-uuid-123\\",\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CC(=O)Oc1ccccc1C(=O)O\\"}\\n    )\\n    \\n    # Docking with optimization disabled\\n    result = submit_docking_workflow(\\n        protein=protein_obj,\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CCO\\"},\\n        do_csearch=False,\\n        do_optimization=False\\n    )\\n","inputSchema":{"properties":{"protein":{"anyOf":[{"type":"string"},{}],"title":"Protein"},"pocket":{"title":"Pocket"},"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"do_csearch":{"default":true,"title":"Do Csearch","type":"boolean"},"do_optimization":{"default":true,"title":"Do Optimization","type":"boolean"},"name":{"default":"Docking Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["protein","pocket"],"type":"object"}},{"name":"workflow_fetch_latest","description":"Fetch the latest workflow data from the database.\\n\\nUpdates the workflow object with the most recent status and results.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to fetch\\n    in_place: Whether to update the workflow object in place (default: False)\\n    \\nReturns:\\n    Dictionary containing the updated workflow data including status and results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"in_place":{"default":false,"title":"In Place","type":"boolean"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_wait_for_result","description":"Wait for a workflow to complete and return the result.\\n\\nBlocks until the workflow completes, polling at specified intervals.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to wait for\\n    poll_interval: Time in seconds between status checks (default: 5)\\n    \\nReturns:\\n    Dictionary containing the completed workflow data including results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"poll_interval":{"default":5,"title":"Poll Interval","type":"integer"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_get_status","description":"Get the current status of a workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with status information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_stop","description":"Stop a running workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to stop\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete","description":"Delete a workflow.\\n\\nThis permanently removes the workflow and its results from the database.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to delete\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"retrieve_workflow","description":"Retrieve a workflow from the API.\\n\\nArgs:\\n    uuid: The UUID of the workflow to retrieve\\n    \\nReturns:\\n    Dictionary containing the complete workflow data\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"retrieve_calculation_molecules","description":"Retrieve a list of molecules from a calculation.\\n\\nArgs:\\n    uuid: The UUID of the calculation to retrieve molecules from\\n    \\nReturns:\\n    List of dictionaries representing the molecules in the calculation\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"list_workflows","description":"List workflows subject to the specified criteria.\\n\\nArgs:\\n    parent_uuid: The UUID of the parent folder\\n    name_contains: Substring to search for in workflow names\\n    public: Filter workflows by their public status\\n    starred: Filter workflows by their starred status\\n    status: Filter workflows by their status\\n    workflow_type: Filter workflows by their type\\n    page: The page number to retrieve (default: 0)\\n    size: The number of items per page (default: 10)\\n    \\nReturns:\\n    List of workflow dictionaries that match the search criteria\\n    \\nRaises:\\n    HTTPError: If the request to the API fails\\n","inputSchema":{"properties":{"parent_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Parent Uuid"},"name_contains":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name Contains"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"status":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Status"},"workflow_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Workflow Type"},"page":{"default":0,"title":"Page","type":"integer"},"size":{"default":10,"title":"Size","type":"integer"}},"type":"object"}},{"name":"workflow_update","description":"Update workflow details.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to update\\n    name: New name for the workflow (optional)\\n    notes: New notes for the workflow (optional)\\n    starred: Whether to star/unstar the workflow (optional)\\n    public: Whether to make the workflow public/private (optional)\\n    \\nReturns:\\n    Dictionary with updated workflow information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name"},"notes":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Notes"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_is_finished","description":"Check if a workflow is finished.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to check\\n    \\nReturns:\\n    Dictionary with workflow completion status\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete_data","description":"Delete workflow data while keeping the workflow record.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}}]}}\r\n\r\n'
2025-08-02 13:49:54,436 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:49:54.435784+00:00\r\n\r\n'
2025-08-02 13:49:54,742 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:49:54.741568+00:00\r\n\r\n'
2025-08-02 13:49:56,454 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:49:56.453851+00:00\r\n\r\n'
2025-08-02 13:50:02,652 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:50:02,652 - mcp.server.sse - DEBUG - Parsed session ID: be66ed27-7514-4125-b934-c2b1e6363ef2
2025-08-02 13:50:02,652 - mcp.server.sse - DEBUG - Received JSON: b'{"jsonrpc":"2.0","id":2,"method":"tools/call","params":{"_meta":{"progressToken":2},"name":"submit_basic_calculation_workflow","arguments":{"method":"uma_m_omol","tasks":["optimize"],"mode":"auto","engine":"omol25","name":"Basic Calculation Workflow","folder_uuid":null,"max_credits":null}}}'
2025-08-02 13:50:02,653 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 2}, 'name': 'submit_basic_calculation_workflow', 'arguments': {'method': 'uma_m_omol', 'tasks': ['optimize'], 'mode': 'auto', 'engine': 'omol25', 'name': 'Basic Calculation Workflow', 'folder_uuid': None, 'max_credits': None}}, jsonrpc='2.0', id=2)
2025-08-02 13:50:02,653 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 2}, 'name': 'submit_basic_calculation_workflow', 'arguments': {'method': 'uma_m_omol', 'tasks': ['optimize'], 'mode': 'auto', 'engine': 'omol25', 'name': 'Basic Calculation Workflow', 'folder_uuid': None, 'max_credits': None}}, jsonrpc='2.0', id=2)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c889eb0>))
2025-08-02 13:50:02,654 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10c88f050>
2025-08-02 13:50:02,654 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 13:50:02,654 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type CallToolRequest
2025-08-02 13:50:02,654 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_basic_calculation_workflow': 1 validation error for call[submit_basic_calculation_workflow]
initial_molecule
  Missing required argument [type=missing_argument, input_value={'method': 'uma_m_omol', ...ne, 'max_credits': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
pydantic_core._pydantic_core.ValidationError: 1 validation error for call[submit_basic_calculation_workflow]
initial_molecule
  Missing required argument [type=missing_argument, input_value={'method': 'uma_m_omol', ...ne, 'max_credits': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
2025-08-02 13:50:02,723 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:50:02,723 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=2, result={'content': [{'type': 'text', 'text': "Error calling tool 'submit_basic_calculation_workflow': 1 validation error for call[submit_basic_calculation_workflow]\ninitial_molecule\n  Missing required argument [type=missing_argument, input_value={'method': 'uma_m_omol', ...ne, 'max_credits': None}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument"}], 'isError': True})), metadata=None)
2025-08-02 13:50:02,723 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":2,"result":{"content":[{"type":"text","text":"Error calling tool \'submit_basic_calculation_workflow\': 1 validation error for call[submit_basic_calculation_workflow]\\ninitial_molecule\\n  Missing required argument [type=missing_argument, input_value={\'method\': \'uma_m_omol\', ...ne, \'max_credits\': None}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument"}],"isError":true}}\r\n\r\n'
2025-08-02 13:50:09,438 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:50:09.438028+00:00\r\n\r\n'
2025-08-02 13:50:09,744 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:50:09.744214+00:00\r\n\r\n'
2025-08-02 13:50:11,456 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:50:11.456429+00:00\r\n\r\n'
2025-08-02 13:50:24,220 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:50:24,221 - mcp.server.sse - DEBUG - Parsed session ID: be66ed27-7514-4125-b934-c2b1e6363ef2
2025-08-02 13:50:24,221 - mcp.server.sse - DEBUG - Received JSON: b'{"jsonrpc":"2.0","id":3,"method":"tools/call","params":{"_meta":{"progressToken":3},"name":"submit_basic_calculation_workflow","arguments":{"method":"gfn2-xtb","tasks":["optimize"],"mode":"auto","engine":"omol25","name":"Basic Calculation Workflow","folder_uuid":null,"max_credits":null}}}'
2025-08-02 13:50:24,221 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 3}, 'name': 'submit_basic_calculation_workflow', 'arguments': {'method': 'gfn2-xtb', 'tasks': ['optimize'], 'mode': 'auto', 'engine': 'omol25', 'name': 'Basic Calculation Workflow', 'folder_uuid': None, 'max_credits': None}}, jsonrpc='2.0', id=3)
2025-08-02 13:50:24,221 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 3}, 'name': 'submit_basic_calculation_workflow', 'arguments': {'method': 'gfn2-xtb', 'tasks': ['optimize'], 'mode': 'auto', 'engine': 'omol25', 'name': 'Basic Calculation Workflow', 'folder_uuid': None, 'max_credits': None}}, jsonrpc='2.0', id=3)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c914290>))
2025-08-02 13:50:24,222 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10c88f450>
2025-08-02 13:50:24,223 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 13:50:24,223 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type CallToolRequest
2025-08-02 13:50:24,223 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_basic_calculation_workflow': 1 validation error for call[submit_basic_calculation_workflow]
initial_molecule
  Missing required argument [type=missing_argument, input_value={'method': 'gfn2-xtb', 't...ne, 'max_credits': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
pydantic_core._pydantic_core.ValidationError: 1 validation error for call[submit_basic_calculation_workflow]
initial_molecule
  Missing required argument [type=missing_argument, input_value={'method': 'gfn2-xtb', 't...ne, 'max_credits': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
2025-08-02 13:50:24,302 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:50:24,303 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=3, result={'content': [{'type': 'text', 'text': "Error calling tool 'submit_basic_calculation_workflow': 1 validation error for call[submit_basic_calculation_workflow]\ninitial_molecule\n  Missing required argument [type=missing_argument, input_value={'method': 'gfn2-xtb', 't...ne, 'max_credits': None}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument"}], 'isError': True})), metadata=None)
2025-08-02 13:50:24,303 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":3,"result":{"content":[{"type":"text","text":"Error calling tool \'submit_basic_calculation_workflow\': 1 validation error for call[submit_basic_calculation_workflow]\\ninitial_molecule\\n  Missing required argument [type=missing_argument, input_value={\'method\': \'gfn2-xtb\', \'t...ne, \'max_credits\': None}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument"}],"isError":true}}\r\n\r\n'
2025-08-02 13:50:24,439 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:50:24.439793+00:00\r\n\r\n'
2025-08-02 13:50:24,745 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:50:24.745553+00:00\r\n\r\n'
2025-08-02 13:50:26,459 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:50:26.459026+00:00\r\n\r\n'
2025-08-02 13:50:39,441 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:50:39.441463+00:00\r\n\r\n'
2025-08-02 13:50:39,749 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:50:39.749048+00:00\r\n\r\n'
2025-08-02 13:50:41,461 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:50:41.461762+00:00\r\n\r\n'
2025-08-02 13:50:54,445 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:50:54.445107+00:00\r\n\r\n'
2025-08-02 13:50:54,752 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:50:54.752646+00:00\r\n\r\n'
2025-08-02 13:50:56,463 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:50:56.463387+00:00\r\n\r\n'
2025-08-02 13:51:09,448 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:51:09.447770+00:00\r\n\r\n'
2025-08-02 13:51:09,755 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:51:09.755563+00:00\r\n\r\n'
2025-08-02 13:51:11,465 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:51:11.465159+00:00\r\n\r\n'
2025-08-02 13:51:16,903 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:51:16,904 - mcp.server.sse - DEBUG - Parsed session ID: be66ed27-7514-4125-b934-c2b1e6363ef2
2025-08-02 13:51:16,904 - mcp.server.sse - DEBUG - Received JSON: b'{"jsonrpc":"2.0","id":4,"method":"tools/call","params":{"_meta":{"progressToken":4},"name":"submit_basic_calculation_workflow","arguments":{"method":"\\"gfn2-xtb\\"","tasks":["optimize"],"mode":"auto","engine":"omol25","name":"Basic Calculation Workflow","folder_uuid":null,"max_credits":null}}}'
2025-08-02 13:51:16,905 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 4}, 'name': 'submit_basic_calculation_workflow', 'arguments': {'method': '"gfn2-xtb"', 'tasks': ['optimize'], 'mode': 'auto', 'engine': 'omol25', 'name': 'Basic Calculation Workflow', 'folder_uuid': None, 'max_credits': None}}, jsonrpc='2.0', id=4)
2025-08-02 13:51:16,905 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 4}, 'name': 'submit_basic_calculation_workflow', 'arguments': {'method': '"gfn2-xtb"', 'tasks': ['optimize'], 'mode': 'auto', 'engine': 'omol25', 'name': 'Basic Calculation Workflow', 'folder_uuid': None, 'max_credits': None}}, jsonrpc='2.0', id=4)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c914320>))
2025-08-02 13:51:16,907 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10c8c59a0>
2025-08-02 13:51:16,908 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 13:51:16,908 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type CallToolRequest
2025-08-02 13:51:16,908 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_basic_calculation_workflow': 1 validation error for call[submit_basic_calculation_workflow]
initial_molecule
  Missing required argument [type=missing_argument, input_value={'method': '"gfn2-xtb"', ...ne, 'max_credits': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
pydantic_core._pydantic_core.ValidationError: 1 validation error for call[submit_basic_calculation_workflow]
initial_molecule
  Missing required argument [type=missing_argument, input_value={'method': '"gfn2-xtb"', ...ne, 'max_credits': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
2025-08-02 13:51:16,946 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:51:16,946 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=4, result={'content': [{'type': 'text', 'text': 'Error calling tool \'submit_basic_calculation_workflow\': 1 validation error for call[submit_basic_calculation_workflow]\ninitial_molecule\n  Missing required argument [type=missing_argument, input_value={\'method\': \'"gfn2-xtb"\', ...ne, \'max_credits\': None}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument'}], 'isError': True})), metadata=None)
2025-08-02 13:51:16,947 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":4,"result":{"content":[{"type":"text","text":"Error calling tool \'submit_basic_calculation_workflow\': 1 validation error for call[submit_basic_calculation_workflow]\\ninitial_molecule\\n  Missing required argument [type=missing_argument, input_value={\'method\': \'\\"gfn2-xtb\\"\', ...ne, \'max_credits\': None}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument"}],"isError":true}}\r\n\r\n'
2025-08-02 13:51:24,453 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:51:24.452040+00:00\r\n\r\n'
2025-08-02 13:51:24,759 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:51:24.758820+00:00\r\n\r\n'
2025-08-02 13:51:26,467 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:51:26.466977+00:00\r\n\r\n'
2025-08-02 13:51:29,036 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:51:29,036 - mcp.server.sse - DEBUG - Parsed session ID: be66ed27-7514-4125-b934-c2b1e6363ef2
2025-08-02 13:51:29,036 - mcp.server.sse - DEBUG - Received JSON: b'{"jsonrpc":"2.0","id":5,"method":"tools/call","params":{"_meta":{"progressToken":5},"name":"submit_basic_calculation_workflow","arguments":{"method":"gfn2-xtb","tasks":["optimize"],"mode":"auto","engine":"omol25","name":"Basic Calculation Workflow","folder_uuid":null,"max_credits":null}}}'
2025-08-02 13:51:29,036 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 5}, 'name': 'submit_basic_calculation_workflow', 'arguments': {'method': 'gfn2-xtb', 'tasks': ['optimize'], 'mode': 'auto', 'engine': 'omol25', 'name': 'Basic Calculation Workflow', 'folder_uuid': None, 'max_credits': None}}, jsonrpc='2.0', id=5)
2025-08-02 13:51:29,036 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 5}, 'name': 'submit_basic_calculation_workflow', 'arguments': {'method': 'gfn2-xtb', 'tasks': ['optimize'], 'mode': 'auto', 'engine': 'omol25', 'name': 'Basic Calculation Workflow', 'folder_uuid': None, 'max_credits': None}}, jsonrpc='2.0', id=5)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c914290>))
2025-08-02 13:51:29,037 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10c8c4f50>
2025-08-02 13:51:29,037 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 13:51:29,037 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type CallToolRequest
2025-08-02 13:51:29,037 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_basic_calculation_workflow': 1 validation error for call[submit_basic_calculation_workflow]
initial_molecule
  Missing required argument [type=missing_argument, input_value={'method': 'gfn2-xtb', 't...ne, 'max_credits': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
pydantic_core._pydantic_core.ValidationError: 1 validation error for call[submit_basic_calculation_workflow]
initial_molecule
  Missing required argument [type=missing_argument, input_value={'method': 'gfn2-xtb', 't...ne, 'max_credits': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
2025-08-02 13:51:29,084 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:51:29,084 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=5, result={'content': [{'type': 'text', 'text': "Error calling tool 'submit_basic_calculation_workflow': 1 validation error for call[submit_basic_calculation_workflow]\ninitial_molecule\n  Missing required argument [type=missing_argument, input_value={'method': 'gfn2-xtb', 't...ne, 'max_credits': None}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument"}], 'isError': True})), metadata=None)
2025-08-02 13:51:29,084 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":5,"result":{"content":[{"type":"text","text":"Error calling tool \'submit_basic_calculation_workflow\': 1 validation error for call[submit_basic_calculation_workflow]\\ninitial_molecule\\n  Missing required argument [type=missing_argument, input_value={\'method\': \'gfn2-xtb\', \'t...ne, \'max_credits\': None}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument"}],"isError":true}}\r\n\r\n'
2025-08-02 13:51:39,455 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:51:39.455758+00:00\r\n\r\n'
2025-08-02 13:51:39,761 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:51:39.760822+00:00\r\n\r\n'
2025-08-02 13:51:41,470 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:51:41.470006+00:00\r\n\r\n'
2025-08-02 13:51:54,457 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:51:54.457715+00:00\r\n\r\n'
2025-08-02 13:51:54,764 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:51:54.764070+00:00\r\n\r\n'
2025-08-02 13:51:56,471 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:51:56.471645+00:00\r\n\r\n'
2025-08-02 13:52:09,460 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:52:09.459819+00:00\r\n\r\n'
2025-08-02 13:52:09,765 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:52:09.765402+00:00\r\n\r\n'
2025-08-02 13:52:11,473 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:52:11.473664+00:00\r\n\r\n'
2025-08-02 13:52:24,462 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:52:24.461963+00:00\r\n\r\n'
2025-08-02 13:52:24,767 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:52:24.767443+00:00\r\n\r\n'
2025-08-02 13:52:26,476 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:52:26.476078+00:00\r\n\r\n'
2025-08-02 13:52:31,006 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:52:31,006 - mcp.server.sse - DEBUG - Parsed session ID: be66ed27-7514-4125-b934-c2b1e6363ef2
2025-08-02 13:52:31,006 - mcp.server.sse - DEBUG - Received JSON: b'{"jsonrpc":"2.0","id":6,"method":"tools/call","params":{"_meta":{"progressToken":6},"name":"submit_basic_calculation_workflow","arguments":{"method":"gfn2-xtb","tasks":["optimize"],"mode":"auto","engine":"xtb","name":"Basic Calculation Workflow","folder_uuid":null,"max_credits":null}}}'
2025-08-02 13:52:31,006 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 6}, 'name': 'submit_basic_calculation_workflow', 'arguments': {'method': 'gfn2-xtb', 'tasks': ['optimize'], 'mode': 'auto', 'engine': 'xtb', 'name': 'Basic Calculation Workflow', 'folder_uuid': None, 'max_credits': None}}, jsonrpc='2.0', id=6)
2025-08-02 13:52:31,006 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 6}, 'name': 'submit_basic_calculation_workflow', 'arguments': {'method': 'gfn2-xtb', 'tasks': ['optimize'], 'mode': 'auto', 'engine': 'xtb', 'name': 'Basic Calculation Workflow', 'folder_uuid': None, 'max_credits': None}}, jsonrpc='2.0', id=6)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c914320>))
2025-08-02 13:52:31,007 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10c8cb070>
2025-08-02 13:52:31,008 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 13:52:31,008 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type CallToolRequest
2025-08-02 13:52:31,008 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_basic_calculation_workflow': 1 validation error for call[submit_basic_calculation_workflow]
initial_molecule
  Missing required argument [type=missing_argument, input_value={'method': 'gfn2-xtb', 't...ne, 'max_credits': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
pydantic_core._pydantic_core.ValidationError: 1 validation error for call[submit_basic_calculation_workflow]
initial_molecule
  Missing required argument [type=missing_argument, input_value={'method': 'gfn2-xtb', 't...ne, 'max_credits': None}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
2025-08-02 13:52:31,054 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:52:31,054 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=6, result={'content': [{'type': 'text', 'text': "Error calling tool 'submit_basic_calculation_workflow': 1 validation error for call[submit_basic_calculation_workflow]\ninitial_molecule\n  Missing required argument [type=missing_argument, input_value={'method': 'gfn2-xtb', 't...ne, 'max_credits': None}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument"}], 'isError': True})), metadata=None)
2025-08-02 13:52:31,054 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":6,"result":{"content":[{"type":"text","text":"Error calling tool \'submit_basic_calculation_workflow\': 1 validation error for call[submit_basic_calculation_workflow]\\ninitial_molecule\\n  Missing required argument [type=missing_argument, input_value={\'method\': \'gfn2-xtb\', \'t...ne, \'max_credits\': None}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument"}],"isError":true}}\r\n\r\n'
2025-08-02 13:52:39,464 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:52:39.464072+00:00\r\n\r\n'
2025-08-02 13:52:39,770 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:52:39.770036+00:00\r\n\r\n'
2025-08-02 13:52:41,479 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:52:41.478788+00:00\r\n\r\n'
2025-08-02 13:52:49,387 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:52:49,387 - mcp.server.sse - DEBUG - Parsed session ID: be66ed27-7514-4125-b934-c2b1e6363ef2
2025-08-02 13:52:49,387 - mcp.server.sse - DEBUG - Received JSON: b'{"jsonrpc":"2.0","id":7,"method":"tools/call","params":{"_meta":{"progressToken":7},"name":"submit_basic_calculation_workflow","arguments":{"initial_molecule":"CCCC","method":"gfn2-xtb","tasks":["optimize"],"mode":"auto","engine":"xtb","name":"Basic Calculation Workflow","folder_uuid":null,"max_credits":null}}}'
2025-08-02 13:52:49,388 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 7}, 'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'method': 'gfn2-xtb', 'tasks': ['optimize'], 'mode': 'auto', 'engine': 'xtb', 'name': 'Basic Calculation Workflow', 'folder_uuid': None, 'max_credits': None}}, jsonrpc='2.0', id=7)
2025-08-02 13:52:49,388 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 7}, 'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'method': 'gfn2-xtb', 'tasks': ['optimize'], 'mode': 'auto', 'engine': 'xtb', 'name': 'Basic Calculation Workflow', 'folder_uuid': None, 'max_credits': None}}, jsonrpc='2.0', id=7)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c914290>))
2025-08-02 13:52:49,389 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10c8c92b0>
2025-08-02 13:52:49,389 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 13:52:49,389 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type CallToolRequest
2025-08-02 13:52:49,391 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 13:52:49,391 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 13:52:49,391 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2-xtb (type: <class 'str'>)
2025-08-02 13:52:49,391 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: ['optimize'] (type: <class 'list'>)
2025-08-02 13:52:49,391 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: auto
2025-08-02 13:52:49,391 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 13:52:49,391 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Basic Calculation Workflow
2025-08-02 13:52:49,391 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: 'CCCC' (SMILES string)
2025-08-02 13:52:49,391 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 13:52:49,397 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully converted to StJamesMolecule
2025-08-02 13:52:49,398 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 13:52:49,410 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 13:52:49,504 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c9260d0>
2025-08-02 13:52:49,504 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10c889eb0> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 13:52:49,621 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c97b360>
2025-08-02 13:52:49,622 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 13:52:49,623 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 13:52:49,623 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 13:52:49,623 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 13:52:49,624 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 13:52:50,483 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 20:52:50 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2073'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 13:52:50,483 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 13:52:50,483 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 13:52:50,483 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 13:52:50,483 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 13:52:50,483 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 13:52:50,483 - httpcore.connection - DEBUG - close.started
2025-08-02 13:52:50,483 - httpcore.connection - DEBUG - close.complete
2025-08-02 13:52:50,484 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: e5f3c8a4-c32a-45e6-ac4e-16cfd0717ac7
2025-08-02 13:52:50,484 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:52:50,484 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=7, result={'content': [{'type': 'text', 'text': '{\n  "name": "Basic Calculation Workflow",\n  "uuid": "e5f3c8a4-c32a-45e6-ac4e-16cfd0717ac7",\n  "created_at": "2025-08-02T20:52:49.766590Z",\n  "updated_at": null,\n  "started_at": null,\n  "completed_at": null,\n  "object_status": 0,\n  "parent_uuid": "e5c3ce65-43df-4ab3-90e0-a56f42584cc0",\n  "notes": "",\n  "starred": false,\n  "public": false,\n  "object_type": "basic_calculation",\n  "object_data": {\n    "settings": {\n      "method": "GFN2_XTB",\n      "tasks": [\n        "optimize"\n      ],\n      "mode": "auto"\n    },\n    "engine": "xtb",\n    "initial_molecule": {\n      "charge": 0,\n      "multiplicity": 1,\n      "atoms": [\n        {\n          "atomic_number": 6,\n          "position": [\n            -1.86762893,\n            -0.13012499,\n            -0.2131859\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            -0.63032717,\n            -0.18027503,\n            0.668866\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            0.63032604,\n            0.18027639,\n            -0.114436\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            1.86762955,\n            0.13012222,\n            0.76761199\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -2.7578718,\n            -0.39146072,\n            0.36741114\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -2.01414814,\n            0.87274707,\n            -0.62686313\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.78518452,\n            -0.8366946,\n            -1.04523826\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -0.75856968,\n            0.51320342,\n            1.50816505\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -0.53090199,\n            -1.18661607,\n            1.09215469\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            0.75856929,\n            -0.51319817,\n            -0.95373764\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            0.53090159,\n            1.18661899,\n            -0.53772214\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            1.78518681,\n            0.83669225,\n            1.59966357\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            2.01414891,\n            -0.87275127,\n            1.18128539\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            2.75787005,\n            0.39146051,\n            0.18701245\n          ]\n        }\n      ],\n      "cell": null,\n      "energy": null,\n      "scf_iterations": null,\n      "scf_completed": null,\n      "elapsed": null,\n      "homo_lumo_gap": null,\n      "gradient": null,\n      "stress": null,\n      "velocities": null,\n      "mulliken_charges": null,\n      "mulliken_spin_densities": null,\n      "dipole": null,\n      "vibrational_modes": null,\n      "zero_point_energy": null,\n      "thermal_energy_corr": null,\n      "thermal_enthalpy_corr": null,\n      "thermal_free_energy_corr": null,\n      "smiles": "CCCC",\n      "calculation_index": null\n    }\n  },\n  "email_when_complete": false,\n  "max_credits": null,\n  "elapsed": 0.0,\n  "credits_charged": 0.0\n}'}], 'isError': False})), metadata=None)
2025-08-02 13:52:50,484 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":7,"result":{"content":[{"type":"text","text":"{\\n  \\"name\\": \\"Basic Calculation Workflow\\",\\n  \\"uuid\\": \\"e5f3c8a4-c32a-45e6-ac4e-16cfd0717ac7\\",\\n  \\"created_at\\": \\"2025-08-02T20:52:49.766590Z\\",\\n  \\"updated_at\\": null,\\n  \\"started_at\\": null,\\n  \\"completed_at\\": null,\\n  \\"object_status\\": 0,\\n  \\"parent_uuid\\": \\"e5c3ce65-43df-4ab3-90e0-a56f42584cc0\\",\\n  \\"notes\\": \\"\\",\\n  \\"starred\\": false,\\n  \\"public\\": false,\\n  \\"object_type\\": \\"basic_calculation\\",\\n  \\"object_data\\": {\\n    \\"settings\\": {\\n      \\"method\\": \\"GFN2_XTB\\",\\n      \\"tasks\\": [\\n        \\"optimize\\"\\n      ],\\n      \\"mode\\": \\"auto\\"\\n    },\\n    \\"engine\\": \\"xtb\\",\\n    \\"initial_molecule\\": {\\n      \\"charge\\": 0,\\n      \\"multiplicity\\": 1,\\n      \\"atoms\\": [\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -1.86762893,\\n            -0.13012499,\\n            -0.2131859\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -0.63032717,\\n            -0.18027503,\\n            0.668866\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            0.63032604,\\n            0.18027639,\\n            -0.114436\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            1.86762955,\\n            0.13012222,\\n            0.76761199\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -2.7578718,\\n            -0.39146072,\\n            0.36741114\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -2.01414814,\\n            0.87274707,\\n            -0.62686313\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.78518452,\\n            -0.8366946,\\n            -1.04523826\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -0.75856968,\\n            0.51320342,\\n            1.50816505\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -0.53090199,\\n            -1.18661607,\\n            1.09215469\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            0.75856929,\\n            -0.51319817,\\n            -0.95373764\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            0.53090159,\\n            1.18661899,\\n            -0.53772214\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            1.78518681,\\n            0.83669225,\\n            1.59966357\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            2.01414891,\\n            -0.87275127,\\n            1.18128539\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            2.75787005,\\n            0.39146051,\\n            0.18701245\\n          ]\\n        }\\n      ],\\n      \\"cell\\": null,\\n      \\"energy\\": null,\\n      \\"scf_iterations\\": null,\\n      \\"scf_completed\\": null,\\n      \\"elapsed\\": null,\\n      \\"homo_lumo_gap\\": null,\\n      \\"gradient\\": null,\\n      \\"stress\\": null,\\n      \\"velocities\\": null,\\n      \\"mulliken_charges\\": null,\\n      \\"mulliken_spin_densities\\": null,\\n      \\"dipole\\": null,\\n      \\"vibrational_modes\\": null,\\n      \\"zero_point_energy\\": null,\\n      \\"thermal_energy_corr\\": null,\\n      \\"thermal_enthalpy_corr\\": null,\\n      \\"thermal_free_energy_corr\\": null,\\n      \\"smiles\\": \\"CCCC\\",\\n      \\"calculation_index\\": null\\n    }\\n  },\\n  \\"email_when_complete\\": false,\\n  \\"max_credits\\": null,\\n  \\"elapsed\\": 0.0,\\n  \\"credits_charged\\": 0.0\\n}"}],"isError":false}}\r\n\r\n'
2025-08-02 13:52:54,466 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:52:54.466012+00:00\r\n\r\n'
2025-08-02 13:52:54,776 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:52:54.776625+00:00\r\n\r\n'
2025-08-02 13:52:56,481 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:52:56.481618+00:00\r\n\r\n'
2025-08-02 13:53:09,468 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:53:09.468205+00:00\r\n\r\n'
2025-08-02 13:53:09,779 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:53:09.779309+00:00\r\n\r\n'
2025-08-02 13:53:11,483 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:53:11.483750+00:00\r\n\r\n'
2025-08-02 13:53:24,471 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:53:24.471050+00:00\r\n\r\n'
2025-08-02 13:53:24,782 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:53:24.782596+00:00\r\n\r\n'
2025-08-02 13:53:25,307 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:53:25,308 - mcp.server.sse - DEBUG - Parsed session ID: be66ed27-7514-4125-b934-c2b1e6363ef2
2025-08-02 13:53:25,308 - mcp.server.sse - DEBUG - Received JSON: b'{"jsonrpc":"2.0","id":8,"method":"tools/call","params":{"_meta":{"progressToken":8},"name":"submit_basic_calculation_workflow","arguments":{"initial_molecule":"CCCC","method":"gfn2-xtb","tasks":["optimize"],"mode":"auto","engine":"xtb","name":"Basic Calculation Workflow","folder_uuid":null,"max_credits":null}}}'
2025-08-02 13:53:25,308 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 8}, 'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'method': 'gfn2-xtb', 'tasks': ['optimize'], 'mode': 'auto', 'engine': 'xtb', 'name': 'Basic Calculation Workflow', 'folder_uuid': None, 'max_credits': None}}, jsonrpc='2.0', id=8)
2025-08-02 13:53:25,308 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'_meta': {'progressToken': 8}, 'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'method': 'gfn2-xtb', 'tasks': ['optimize'], 'mode': 'auto', 'engine': 'xtb', 'name': 'Basic Calculation Workflow', 'folder_uuid': None, 'max_credits': None}}, jsonrpc='2.0', id=8)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c9144d0>))
2025-08-02 13:53:25,309 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10c8b2750>
2025-08-02 13:53:25,309 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 13:53:25,310 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type CallToolRequest
2025-08-02 13:53:25,311 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 13:53:25,311 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 13:53:25,311 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2-xtb (type: <class 'str'>)
2025-08-02 13:53:25,311 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: ['optimize'] (type: <class 'list'>)
2025-08-02 13:53:25,311 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: auto
2025-08-02 13:53:25,312 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 13:53:25,312 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Basic Calculation Workflow
2025-08-02 13:53:25,312 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: 'CCCC' (SMILES string)
2025-08-02 13:53:25,312 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 13:53:25,317 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully converted to StJamesMolecule
2025-08-02 13:53:25,317 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 13:53:25,329 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 13:53:25,449 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c97ac40>
2025-08-02 13:53:25,449 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10c9143b0> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 13:53:25,585 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c8c2210>
2025-08-02 13:53:25,586 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 13:53:25,586 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 13:53:25,586 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 13:53:25,586 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 13:53:25,586 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 13:53:26,125 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 20:53:26 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2074'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 13:53:26,126 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 13:53:26,126 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 13:53:26,126 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 13:53:26,126 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 13:53:26,126 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 13:53:26,126 - httpcore.connection - DEBUG - close.started
2025-08-02 13:53:26,126 - httpcore.connection - DEBUG - close.complete
2025-08-02 13:53:26,126 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: 0b510e9d-a580-4186-af26-a4bcd7ceaba9
2025-08-02 13:53:26,127 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:53:26,127 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=8, result={'content': [{'type': 'text', 'text': '{\n  "name": "Basic Calculation Workflow",\n  "uuid": "0b510e9d-a580-4186-af26-a4bcd7ceaba9",\n  "created_at": "2025-08-02T20:53:25.752042Z",\n  "updated_at": null,\n  "started_at": null,\n  "completed_at": null,\n  "object_status": 0,\n  "parent_uuid": "e5c3ce65-43df-4ab3-90e0-a56f42584cc0",\n  "notes": "",\n  "starred": false,\n  "public": false,\n  "object_type": "basic_calculation",\n  "object_data": {\n    "settings": {\n      "method": "GFN2_XTB",\n      "tasks": [\n        "optimize"\n      ],\n      "mode": "auto"\n    },\n    "engine": "xtb",\n    "initial_molecule": {\n      "charge": 0,\n      "multiplicity": 1,\n      "atoms": [\n        {\n          "atomic_number": 6,\n          "position": [\n            1.51043944,\n            0.61835589,\n            0.19660175\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            0.75241042,\n            -0.58009286,\n            -0.35321524\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            -0.7159172,\n            -0.28333627,\n            -0.65922199\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            -1.53836053,\n            0.042257,\n            0.57801761\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            1.13211288,\n            0.91591273,\n            1.17894237\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            2.57091914,\n            0.37164287,\n            0.31084329\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            1.4332494,\n            1.47597854,\n            -0.47911451\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            0.82494855,\n            -1.41335022,\n            0.35540883\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            1.24136741,\n            -0.90742678,\n            -1.27850856\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -0.78826313,\n            0.54537098,\n            -1.37318125\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.15390858,\n            -1.16184567,\n            -1.1478723\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.21215242,\n            0.97784015,\n            1.04163028\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -2.59323585,\n            0.15637037,\n            0.30829116\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.46360952,\n            -0.75767669,\n            1.32137855\n          ]\n        }\n      ],\n      "cell": null,\n      "energy": null,\n      "scf_iterations": null,\n      "scf_completed": null,\n      "elapsed": null,\n      "homo_lumo_gap": null,\n      "gradient": null,\n      "stress": null,\n      "velocities": null,\n      "mulliken_charges": null,\n      "mulliken_spin_densities": null,\n      "dipole": null,\n      "vibrational_modes": null,\n      "zero_point_energy": null,\n      "thermal_energy_corr": null,\n      "thermal_enthalpy_corr": null,\n      "thermal_free_energy_corr": null,\n      "smiles": "CCCC",\n      "calculation_index": null\n    }\n  },\n  "email_when_complete": false,\n  "max_credits": null,\n  "elapsed": 0.0,\n  "credits_charged": 0.0\n}'}], 'isError': False})), metadata=None)
2025-08-02 13:53:26,127 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":8,"result":{"content":[{"type":"text","text":"{\\n  \\"name\\": \\"Basic Calculation Workflow\\",\\n  \\"uuid\\": \\"0b510e9d-a580-4186-af26-a4bcd7ceaba9\\",\\n  \\"created_at\\": \\"2025-08-02T20:53:25.752042Z\\",\\n  \\"updated_at\\": null,\\n  \\"started_at\\": null,\\n  \\"completed_at\\": null,\\n  \\"object_status\\": 0,\\n  \\"parent_uuid\\": \\"e5c3ce65-43df-4ab3-90e0-a56f42584cc0\\",\\n  \\"notes\\": \\"\\",\\n  \\"starred\\": false,\\n  \\"public\\": false,\\n  \\"object_type\\": \\"basic_calculation\\",\\n  \\"object_data\\": {\\n    \\"settings\\": {\\n      \\"method\\": \\"GFN2_XTB\\",\\n      \\"tasks\\": [\\n        \\"optimize\\"\\n      ],\\n      \\"mode\\": \\"auto\\"\\n    },\\n    \\"engine\\": \\"xtb\\",\\n    \\"initial_molecule\\": {\\n      \\"charge\\": 0,\\n      \\"multiplicity\\": 1,\\n      \\"atoms\\": [\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            1.51043944,\\n            0.61835589,\\n            0.19660175\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            0.75241042,\\n            -0.58009286,\\n            -0.35321524\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -0.7159172,\\n            -0.28333627,\\n            -0.65922199\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -1.53836053,\\n            0.042257,\\n            0.57801761\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            1.13211288,\\n            0.91591273,\\n            1.17894237\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            2.57091914,\\n            0.37164287,\\n            0.31084329\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            1.4332494,\\n            1.47597854,\\n            -0.47911451\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            0.82494855,\\n            -1.41335022,\\n            0.35540883\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            1.24136741,\\n            -0.90742678,\\n            -1.27850856\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -0.78826313,\\n            0.54537098,\\n            -1.37318125\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.15390858,\\n            -1.16184567,\\n            -1.1478723\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.21215242,\\n            0.97784015,\\n            1.04163028\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -2.59323585,\\n            0.15637037,\\n            0.30829116\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.46360952,\\n            -0.75767669,\\n            1.32137855\\n          ]\\n        }\\n      ],\\n      \\"cell\\": null,\\n      \\"energy\\": null,\\n      \\"scf_iterations\\": null,\\n      \\"scf_completed\\": null,\\n      \\"elapsed\\": null,\\n      \\"homo_lumo_gap\\": null,\\n      \\"gradient\\": null,\\n      \\"stress\\": null,\\n      \\"velocities\\": null,\\n      \\"mulliken_charges\\": null,\\n      \\"mulliken_spin_densities\\": null,\\n      \\"dipole\\": null,\\n      \\"vibrational_modes\\": null,\\n      \\"zero_point_energy\\": null,\\n      \\"thermal_energy_corr\\": null,\\n      \\"thermal_enthalpy_corr\\": null,\\n      \\"thermal_free_energy_corr\\": null,\\n      \\"smiles\\": \\"CCCC\\",\\n      \\"calculation_index\\": null\\n    }\\n  },\\n  \\"email_when_complete\\": false,\\n  \\"max_credits\\": null,\\n  \\"elapsed\\": 0.0,\\n  \\"credits_charged\\": 0.0\\n}"}],"isError":false}}\r\n\r\n'
2025-08-02 13:53:26,486 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:53:26.485981+00:00\r\n\r\n'
2025-08-02 13:53:39,474 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:53:39.474391+00:00\r\n\r\n'
2025-08-02 13:53:39,785 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:53:39.785534+00:00\r\n\r\n'
2025-08-02 13:53:41,487 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:53:41.487675+00:00\r\n\r\n'
2025-08-02 13:53:54,477 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:53:54.477509+00:00\r\n\r\n'
2025-08-02 13:53:54,787 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:53:54.787305+00:00\r\n\r\n'
2025-08-02 13:53:56,490 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:53:56.490757+00:00\r\n\r\n'
2025-08-02 13:54:09,480 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:54:09.480322+00:00\r\n\r\n'
2025-08-02 13:54:09,790 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:54:09.790617+00:00\r\n\r\n'
2025-08-02 13:54:11,493 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:54:11.493498+00:00\r\n\r\n'
2025-08-02 13:54:24,481 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:54:24.481021+00:00\r\n\r\n'
2025-08-02 13:54:24,794 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:54:24.794114+00:00\r\n\r\n'
2025-08-02 13:54:26,497 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:54:26.496905+00:00\r\n\r\n'
2025-08-02 13:54:39,483 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:54:39.482772+00:00\r\n\r\n'
2025-08-02 13:54:39,795 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:54:39.794823+00:00\r\n\r\n'
2025-08-02 13:54:41,499 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:54:41.499160+00:00\r\n\r\n'
2025-08-02 13:54:54,485 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:54:54.485360+00:00\r\n\r\n'
2025-08-02 13:54:54,798 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:54:54.798062+00:00\r\n\r\n'
2025-08-02 13:54:56,501 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:54:56.500840+00:00\r\n\r\n'
2025-08-02 13:55:09,488 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:55:09.487915+00:00\r\n\r\n'
2025-08-02 13:55:09,800 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:55:09.800802+00:00\r\n\r\n'
2025-08-02 13:55:11,503 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:55:11.503281+00:00\r\n\r\n'
2025-08-02 13:55:24,489 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:55:24.489835+00:00\r\n\r\n'
2025-08-02 13:55:24,802 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:55:24.802325+00:00\r\n\r\n'
2025-08-02 13:55:26,505 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:55:26.505098+00:00\r\n\r\n'
2025-08-02 13:55:31,772 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:55:31,772 - mcp.server.sse - DEBUG - Parsed session ID: 9eb62d12-9922-4e00-918e-61d22c022c4b
2025-08-02 13:55:31,773 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/call","params":{"name":"submit_basic_calculation_workflow","arguments":{"initial_molecule":"CCCC","method":"gfn2-xtb","mode":"auto","engine":"xtb","name":"Basic Calculation Workflow"},"_meta":{"progressToken":5}},"jsonrpc":"2.0","id":5}'
2025-08-02 13:55:31,773 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'method': 'gfn2-xtb', 'mode': 'auto', 'engine': 'xtb', 'name': 'Basic Calculation Workflow'}, '_meta': {'progressToken': 5}}, jsonrpc='2.0', id=5)
2025-08-02 13:55:31,773 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'method': 'gfn2-xtb', 'mode': 'auto', 'engine': 'xtb', 'name': 'Basic Calculation Workflow'}, '_meta': {'progressToken': 5}}, jsonrpc='2.0', id=5)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10c914560>))
2025-08-02 13:55:31,774 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10c820b90>
2025-08-02 13:55:31,774 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 13:55:31,774 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type CallToolRequest
2025-08-02 13:55:31,774 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 13:55:31,774 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 13:55:31,774 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2-xtb (type: <class 'str'>)
2025-08-02 13:55:31,775 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: None (type: <class 'NoneType'>)
2025-08-02 13:55:31,775 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: auto
2025-08-02 13:55:31,775 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 13:55:31,775 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Basic Calculation Workflow
2025-08-02 13:55:31,775 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: 'CCCC' (SMILES string)
2025-08-02 13:55:31,775 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 13:55:31,779 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully converted to StJamesMolecule
2025-08-02 13:55:31,779 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 13:55:31,789 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 13:55:31,888 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c847460>
2025-08-02 13:55:31,888 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10c792840> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 13:55:32,005 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c847790>
2025-08-02 13:55:32,006 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 13:55:32,007 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 13:55:32,007 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 13:55:32,007 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 13:55:32,007 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 13:55:32,485 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 20:55:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2074'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 13:55:32,486 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 13:55:32,486 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 13:55:32,487 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 13:55:32,487 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 13:55:32,487 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 13:55:32,488 - httpcore.connection - DEBUG - close.started
2025-08-02 13:55:32,488 - httpcore.connection - DEBUG - close.complete
2025-08-02 13:55:32,488 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: e7cb6ccf-a027-4cca-bf45-4a6ce93b0a4f
2025-08-02 13:55:32,489 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:55:32,489 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=5, result={'content': [{'type': 'text', 'text': '{\n  "name": "Basic Calculation Workflow",\n  "uuid": "e7cb6ccf-a027-4cca-bf45-4a6ce93b0a4f",\n  "created_at": "2025-08-02T20:55:32.141148Z",\n  "updated_at": null,\n  "started_at": null,\n  "completed_at": null,\n  "object_status": 0,\n  "parent_uuid": "e5c3ce65-43df-4ab3-90e0-a56f42584cc0",\n  "notes": "",\n  "starred": false,\n  "public": false,\n  "object_type": "basic_calculation",\n  "object_data": {\n    "settings": {\n      "method": "GFN2_XTB",\n      "tasks": [\n        "optimize"\n      ],\n      "mode": "auto"\n    },\n    "engine": "xtb",\n    "initial_molecule": {\n      "charge": 0,\n      "multiplicity": 1,\n      "atoms": [\n        {\n          "atomic_number": 6,\n          "position": [\n            -1.92105031,\n            -0.11441042,\n            0.4101449\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            -0.46914867,\n            0.11903615,\n            0.79605906\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            0.46914831,\n            -0.11903176,\n            -0.38535031\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            1.92105049,\n            0.11440743,\n            0.00056613\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -2.07610298,\n            -1.14341519,\n            0.07035722\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -2.57482366,\n            0.06147482,\n            1.2701254\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -2.22717648,\n            0.5629509,\n            -0.39348215\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -0.20459043,\n            -0.5505302,\n            1.62278158\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -0.35481238,\n            1.14622636,\n            1.16155559\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            0.20459352,\n            0.55053799,\n            -1.21207091\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            0.35480868,\n            -1.14622035,\n            -0.75084987\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            2.07610868,\n            1.14341297,\n            0.34034991\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            2.22717054,\n            -0.56295287,\n            0.80419657\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            2.5748247,\n            -0.06148582,\n            -0.85941241\n          ]\n        }\n      ],\n      "cell": null,\n      "energy": null,\n      "scf_iterations": null,\n      "scf_completed": null,\n      "elapsed": null,\n      "homo_lumo_gap": null,\n      "gradient": null,\n      "stress": null,\n      "velocities": null,\n      "mulliken_charges": null,\n      "mulliken_spin_densities": null,\n      "dipole": null,\n      "vibrational_modes": null,\n      "zero_point_energy": null,\n      "thermal_energy_corr": null,\n      "thermal_enthalpy_corr": null,\n      "thermal_free_energy_corr": null,\n      "smiles": "CCCC",\n      "calculation_index": null\n    }\n  },\n  "email_when_complete": false,\n  "max_credits": null,\n  "elapsed": 0.0,\n  "credits_charged": 0.0\n}'}], 'isError': False})), metadata=None)
2025-08-02 13:55:32,490 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":5,"result":{"content":[{"type":"text","text":"{\\n  \\"name\\": \\"Basic Calculation Workflow\\",\\n  \\"uuid\\": \\"e7cb6ccf-a027-4cca-bf45-4a6ce93b0a4f\\",\\n  \\"created_at\\": \\"2025-08-02T20:55:32.141148Z\\",\\n  \\"updated_at\\": null,\\n  \\"started_at\\": null,\\n  \\"completed_at\\": null,\\n  \\"object_status\\": 0,\\n  \\"parent_uuid\\": \\"e5c3ce65-43df-4ab3-90e0-a56f42584cc0\\",\\n  \\"notes\\": \\"\\",\\n  \\"starred\\": false,\\n  \\"public\\": false,\\n  \\"object_type\\": \\"basic_calculation\\",\\n  \\"object_data\\": {\\n    \\"settings\\": {\\n      \\"method\\": \\"GFN2_XTB\\",\\n      \\"tasks\\": [\\n        \\"optimize\\"\\n      ],\\n      \\"mode\\": \\"auto\\"\\n    },\\n    \\"engine\\": \\"xtb\\",\\n    \\"initial_molecule\\": {\\n      \\"charge\\": 0,\\n      \\"multiplicity\\": 1,\\n      \\"atoms\\": [\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -1.92105031,\\n            -0.11441042,\\n            0.4101449\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -0.46914867,\\n            0.11903615,\\n            0.79605906\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            0.46914831,\\n            -0.11903176,\\n            -0.38535031\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            1.92105049,\\n            0.11440743,\\n            0.00056613\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -2.07610298,\\n            -1.14341519,\\n            0.07035722\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -2.57482366,\\n            0.06147482,\\n            1.2701254\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -2.22717648,\\n            0.5629509,\\n            -0.39348215\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -0.20459043,\\n            -0.5505302,\\n            1.62278158\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -0.35481238,\\n            1.14622636,\\n            1.16155559\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            0.20459352,\\n            0.55053799,\\n            -1.21207091\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            0.35480868,\\n            -1.14622035,\\n            -0.75084987\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            2.07610868,\\n            1.14341297,\\n            0.34034991\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            2.22717054,\\n            -0.56295287,\\n            0.80419657\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            2.5748247,\\n            -0.06148582,\\n            -0.85941241\\n          ]\\n        }\\n      ],\\n      \\"cell\\": null,\\n      \\"energy\\": null,\\n      \\"scf_iterations\\": null,\\n      \\"scf_completed\\": null,\\n      \\"elapsed\\": null,\\n      \\"homo_lumo_gap\\": null,\\n      \\"gradient\\": null,\\n      \\"stress\\": null,\\n      \\"velocities\\": null,\\n      \\"mulliken_charges\\": null,\\n      \\"mulliken_spin_densities\\": null,\\n      \\"dipole\\": null,\\n      \\"vibrational_modes\\": null,\\n      \\"zero_point_energy\\": null,\\n      \\"thermal_energy_corr\\": null,\\n      \\"thermal_enthalpy_corr\\": null,\\n      \\"thermal_free_energy_corr\\": null,\\n      \\"smiles\\": \\"CCCC\\",\\n      \\"calculation_index\\": null\\n    }\\n  },\\n  \\"email_when_complete\\": false,\\n  \\"max_credits\\": null,\\n  \\"elapsed\\": 0.0,\\n  \\"credits_charged\\": 0.0\\n}"}],"isError":false}}\r\n\r\n'
2025-08-02 13:55:39,491 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:55:39.491365+00:00\r\n\r\n'
2025-08-02 13:55:39,804 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:55:39.804282+00:00\r\n\r\n'
2025-08-02 13:55:41,510 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:55:41.510772+00:00\r\n\r\n'
2025-08-02 13:55:54,492 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:55:54.492675+00:00\r\n\r\n'
2025-08-02 13:55:54,806 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:55:54.806160+00:00\r\n\r\n'
2025-08-02 13:55:56,513 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:55:56.512820+00:00\r\n\r\n'
2025-08-02 13:56:09,495 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:56:09.495353+00:00\r\n\r\n'
2025-08-02 13:56:09,809 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:56:09.809029+00:00\r\n\r\n'
2025-08-02 13:56:11,516 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:56:11.515764+00:00\r\n\r\n'
2025-08-02 13:56:24,497 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:56:24.497388+00:00\r\n\r\n'
2025-08-02 13:56:24,810 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:56:24.810420+00:00\r\n\r\n'
2025-08-02 13:56:26,518 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:56:26.518352+00:00\r\n\r\n'
2025-08-02 13:56:39,501 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:56:39.501305+00:00\r\n\r\n'
2025-08-02 13:56:39,813 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:56:39.813124+00:00\r\n\r\n'
2025-08-02 13:56:41,521 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:56:41.521071+00:00\r\n\r\n'
2025-08-02 13:56:54,504 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:56:54.503835+00:00\r\n\r\n'
2025-08-02 13:56:54,816 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:56:54.816288+00:00\r\n\r\n'
2025-08-02 13:56:56,525 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:56:56.525398+00:00\r\n\r\n'
2025-08-02 13:57:09,506 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:57:09.506327+00:00\r\n\r\n'
2025-08-02 13:57:09,819 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:57:09.819508+00:00\r\n\r\n'
2025-08-02 13:57:11,528 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:57:11.528342+00:00\r\n\r\n'
2025-08-02 13:57:24,509 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:57:24.509641+00:00\r\n\r\n'
2025-08-02 13:57:24,823 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:57:24.823287+00:00\r\n\r\n'
2025-08-02 13:57:26,531 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:57:26.531394+00:00\r\n\r\n'
2025-08-02 13:57:35,694 - mcp.server.lowlevel.server - DEBUG - Initializing server 'Rowan MCP Server'
2025-08-02 13:57:35,695 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListToolsRequest
2025-08-02 13:57:35,695 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListResourcesRequest
2025-08-02 13:57:35,695 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListResourceTemplatesRequest
2025-08-02 13:57:35,695 - mcp.server.lowlevel.server - DEBUG - Registering handler for PromptListRequest
2025-08-02 13:57:35,695 - mcp.server.lowlevel.server - DEBUG - Registering handler for CallToolRequest
2025-08-02 13:57:35,695 - mcp.server.lowlevel.server - DEBUG - Registering handler for ReadResourceRequest
2025-08-02 13:57:35,695 - mcp.server.lowlevel.server - DEBUG - Registering handler for GetPromptRequest
2025-08-02 13:57:35,710 - asyncio - DEBUG - Using selector: KqueueSelector
2025-08-02 13:57:35,714 - mcp.server.sse - DEBUG - SseServerTransport initialized with endpoint: /messages/
2025-08-02 13:57:35,715 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-02 13:57:37,226 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 13:57:37,227 - mcp.server.sse - DEBUG - Created new session with ID: 5d3f767c-44fb-4f8d-955f-16c6286cffa3
2025-08-02 13:57:37,227 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 13:57:37,227 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 13:57:37,229 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 13:57:37,229 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=5d3f767c44fb4f8d955f16c6286cffa3
2025-08-02 13:57:37,230 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=5d3f767c44fb4f8d955f16c6286cffa3\r\n\r\n'
2025-08-02 13:57:37,231 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 13:57:37,231 - mcp.server.sse - DEBUG - Created new session with ID: ca93c336-b0e8-4c92-9b60-50115a72ef12
2025-08-02 13:57:37,231 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 13:57:37,231 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 13:57:37,233 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 13:57:37,234 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=ca93c336b0e84c929b6050115a72ef12
2025-08-02 13:57:37,234 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=ca93c336b0e84c929b6050115a72ef12\r\n\r\n'
2025-08-02 13:57:37,237 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 13:57:37,238 - mcp.server.sse - DEBUG - Created new session with ID: de7fcb53-49c7-4e5c-ad94-9d0b2fe064ed
2025-08-02 13:57:37,238 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 13:57:37,238 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 13:57:37,240 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 13:57:37,240 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=de7fcb5349c74e5cad949d0b2fe064ed
2025-08-02 13:57:37,240 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=de7fcb5349c74e5cad949d0b2fe064ed\r\n\r\n'
2025-08-02 13:57:37,243 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:57:37,243 - mcp.server.sse - DEBUG - Parsed session ID: de7fcb53-49c7-4e5c-ad94-9d0b2fe064ed
2025-08-02 13:57:37,243 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"initialize","params":{"protocolVersion":"2025-06-18","capabilities":{"tools":true,"prompts":true,"resources":false,"logging":false,"roots":{"listChanged":false}},"clientInfo":{"name":"cursor-vscode","version":"1.0.0"}},"jsonrpc":"2.0","id":1}'
2025-08-02 13:57:37,243 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'tools': True, 'prompts': True, 'resources': False, 'logging': False, 'roots': {'listChanged': False}}, 'clientInfo': {'name': 'cursor-vscode', 'version': '1.0.0'}}, jsonrpc='2.0', id=1)
2025-08-02 13:57:37,243 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'tools': True, 'prompts': True, 'resources': False, 'logging': False, 'roots': {'listChanged': False}}, 'clientInfo': {'name': 'cursor-vscode', 'version': '1.0.0'}}, jsonrpc='2.0', id=1)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a013690>))
2025-08-02 13:57:37,244 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=1, result={'protocolVersion': '2025-03-26', 'capabilities': {'experimental': {}, 'prompts': {'listChanged': False}, 'resources': {'subscribe': False, 'listChanged': False}, 'tools': {'listChanged': False}}, 'serverInfo': {'name': 'Rowan MCP Server', 'version': '1.9.3'}})), metadata=None)
2025-08-02 13:57:37,244 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":1,"result":{"protocolVersion":"2025-03-26","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"Rowan MCP Server","version":"1.9.3"}}}\r\n\r\n'
2025-08-02 13:57:37,246 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:57:37,246 - mcp.server.sse - DEBUG - Parsed session ID: de7fcb53-49c7-4e5c-ad94-9d0b2fe064ed
2025-08-02 13:57:37,246 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"notifications/initialized","jsonrpc":"2.0"}'
2025-08-02 13:57:37,246 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 13:57:37,246 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a024950>))
2025-08-02 13:57:37,246 - mcp.server.lowlevel.server - DEBUG - Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 13:57:37,249 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:57:37,249 - mcp.server.sse - DEBUG - Parsed session ID: de7fcb53-49c7-4e5c-ad94-9d0b2fe064ed
2025-08-02 13:57:37,249 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/list","jsonrpc":"2.0","id":2}'
2025-08-02 13:57:37,249 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=2)
2025-08-02 13:57:37,249 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=2)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a034730>))
2025-08-02 13:57:37,250 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10a048690>
2025-08-02 13:57:37,250 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 13:57:37,250 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListToolsRequest
2025-08-02 13:57:37,250 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:57:37,251 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=2, result={'tools': [{'name': 'submit_basic_calculation_workflow', 'description': 'Submit a basic calculation workflow using Rowan v2 API.\n\nPerforms fundamental quantum chemistry calculations with configurable methods\nand computational tasks. Returns a workflow object for tracking progress.\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'type': 'string'}, {'additionalProperties': True, 'type': 'object'}, {}], 'description': 'The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object', 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'description': "The method to use for the calculation (e.g., 'uma_m_omol', 'gfn2-xtb', 'r2scan_3c')", 'title': 'Method', 'type': 'string'}, 'tasks': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'description': "List of computational tasks to perform. Optional[List[str]] (e.g. ['optimize']), Defaults to None", 'title': 'Tasks'}, 'mode': {'default': 'auto', 'description': "The mode to run the calculation in ('auto', 'rapid', 'careful', 'meticulous')", 'title': 'Mode', 'type': 'string'}, 'engine': {'default': 'omol25', 'description': "The computational engine to use ('omol25', 'xtb', 'psi4')", 'title': 'Engine', 'type': 'string'}, 'name': {'default': 'Basic Calculation Workflow', 'description': 'The name of the workflow for identification', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'UUID of the folder to place the workflow in (optional)', 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'description': 'Maximum number of credits to use for the workflow (optional)', 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_conformer_search_workflow', 'description': 'Submit a conformer search workflow using Rowan v2 API.\n\nExplores the conformational space of a molecule to find low-energy structures.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    conf_gen_mode: default to "rapid"\n        Options: "rapid", "careful", "meticulous"\n    final_method: default: "aimnet2_wb97md3"\n        Try other options, if user specifies\n    solvent: Optional solvent for implicit solvation (e.g., "water", "ethanol")\n    transition_state: Whether searching for transition state conformers (default: False)\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic conformer search\n    result = submit_conformer_search_workflow(\n        initial_molecule="CCCC",\n        conf_gen_mode="rapid"\n    )\n    \n    # Careful search with solvent\n    result = submit_conformer_search_workflow(\n        initial_molecule="CC(C)CC(=O)O",\n        conf_gen_mode="careful",\n        solvent="water",\n        final_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'conf_gen_mode': {'default': 'rapid', 'title': 'Conf Gen Mode', 'type': 'string'}, 'final_method': {'default': 'aimnet2_wb97md3', 'title': 'Final Method', 'type': 'string'}, 'solvent': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Solvent'}, 'transition_state': {'default': False, 'title': 'Transition State', 'type': 'boolean'}, 'name': {'default': 'Conformer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_solubility_workflow', 'description': 'Submit a solubility prediction workflow using Rowan v2 API.\n\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\nusing machine learning models.\n\nArgs:\n    initial_smiles: SMILES string of the molecule\n    solvents: List of solvents as SMILES or common names (e.g., ["water", "ethanol"])\n        If None, uses default solvents\n    temperatures: List of temperatures in Kelvin\n        If None, uses default temperature range\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic solubility prediction\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)Nc1ccc(O)cc1",\n        solvents=["water", "ethanol"],\n        temperatures=[298.15, 310.15]\n    )\n    \n    # With SMILES solvents\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)O",\n        solvents=["O", "CCO", "CCCCCC"],\n        temperatures=[273.15, 298.15, 323.15]\n    )\n', 'inputSchema': {'properties': {'initial_smiles': {'title': 'Initial Smiles', 'type': 'string'}, 'solvents': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Solvents'}, 'temperatures': {'anyOf': [{'items': {'type': 'number'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Temperatures'}, 'name': {'default': 'Solubility Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_smiles'], 'type': 'object'}}, {'name': 'submit_pka_workflow', 'description': 'Submit a pKa prediction workflow using Rowan v2 API.\n\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\nusing quantum chemistry calculations.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\n    deprotonate_elements: List of elements to consider for deprotonation\n        (e.g., ["N", "O", "S"]). If None, uses defaults\n    protonate_elements: List of elements to consider for protonation\n        (e.g., ["N", "O"]). If None, uses defaults\n    mode: Calculation mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic pKa prediction\n    result = submit_pka_workflow(\n        initial_molecule="CC(=O)O",\n        pka_range=(2, 8)\n    )\n    \n    # Specific elements with meticulous mode\n    result = submit_pka_workflow(\n        initial_molecule="NC(C)C(=O)O",\n        pka_range=(1, 14),\n        deprotonate_elements=["N", "O"],\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'pka_range': {'default': [2, 12], 'maxItems': 2, 'minItems': 2, 'prefixItems': [{'type': 'number'}, {'type': 'number'}], 'title': 'Pka Range', 'type': 'array'}, 'deprotonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Deprotonate Elements'}, 'protonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Protonate Elements'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'pKa Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_redox_potential_workflow', 'description': 'Submit a redox potential calculation workflow using Rowan v2 API.\n\nCalculates reduction and/or oxidation potentials for a molecule using\nquantum chemistry methods.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    reduction: Whether to calculate reduction potential (default: False)\n    oxidization: Whether to calculate oxidation potential (default: True)\n    mode: Calculation mode (default: "rapid")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic oxidation potential\n    result = submit_redox_potential_workflow(\n        initial_molecule="CC1=CC=CC=C1",\n        oxidization=True\n    )\n    \n    # Both reduction and oxidation with careful mode\n    result = submit_redox_potential_workflow(\n        initial_molecule="c1ccccc1",\n        reduction=True,\n        oxidization=True,\n        mode="careful"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'reduction': {'default': False, 'title': 'Reduction', 'type': 'boolean'}, 'oxidization': {'default': True, 'title': 'Oxidization', 'type': 'boolean'}, 'mode': {'default': 'rapid', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Redox Potential Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_fukui_workflow', 'description': 'Submit a Fukui indices calculation workflow using Rowan v2 API.\n\nCalculates Fukui indices to predict molecular reactivity at different sites.\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    optimization_method: Method for geometry optimization (default: "gfn2_xtb")\n        Common options: "gfn2_xtb", "r2scan_3c", "aimnet2_wb97md3"\n    fukui_method: Method for Fukui calculation (default: "gfn1_xtb")\n        Common options: "gfn1_xtb", "gfn2_xtb"\n    solvent_settings: Optional solvent configuration dictionary\n        Example: {"solvent": "water", "model": "alpb"}\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic Fukui indices\n    result = submit_fukui_workflow(\n        initial_molecule="CC(=O)O"\n    )\n    \n    # With solvent and advanced methods\n    result = submit_fukui_workflow(\n        initial_molecule="c1ccccc1N",\n        optimization_method="r2scan_3c",\n        fukui_method="gfn2_xtb",\n        solvent_settings={"solvent": "water", "model": "alpb"}\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'optimization_method': {'default': 'gfn2_xtb', 'title': 'Optimization Method', 'type': 'string'}, 'fukui_method': {'default': 'gfn1_xtb', 'title': 'Fukui Method', 'type': 'string'}, 'solvent_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Solvent Settings'}, 'name': {'default': 'Fukui Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_tautomer_search_workflow', 'description': 'Submit a tautomer search workflow using Rowan v2 API.\n\nSearches for different tautomeric forms of a molecule and evaluates their\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    mode: Search mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic tautomer search\n    result = submit_tautomer_search_workflow(\n        initial_molecule="CC(=O)CC(=O)C"\n    )\n    \n    # Meticulous search for complex molecule\n    result = submit_tautomer_search_workflow(\n        initial_molecule="c1ccc2c(c1)ncc(=O)[nH]2",\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Tautomer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_descriptors_workflow', 'description': 'Submit a molecular descriptors calculation workflow using Rowan v2 API.\n\nCalculates a comprehensive set of molecular descriptors including:\n- Physical properties (MW, logP, TPSA, etc.)\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\n- Topological indices\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic descriptor calculation\n    result = submit_descriptors_workflow(\n        initial_molecule="CC(=O)Nc1ccc(O)cc1"\n    )\n    \n    # For complex molecule\n    result = submit_descriptors_workflow(\n        initial_molecule="CN1C=NC2=C1C(=O)N(C(=O)N2C)C",\n        name="Caffeine Descriptors"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'name': {'default': 'Descriptors Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_scan_workflow', 'description': 'Submit a potential energy surface scan workflow using Rowan v2 API.\n\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\nor dihedrals) to map the potential energy surface.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    scan_settings: Dictionary specifying scan parameters\n        Example: {\n            "type": "dihedral",  # or "bond", "angle"\n            "atoms": [0, 1, 2, 3],  # atom indices\n            "start": -180,\n            "stop": 180,\n            "step": 10\n        }\n    calculation_engine: Computational engine (default: "omol25")\n        Options: "omol25", "xtb", "psi4"\n    calculation_method: Method for calculations (default: "uma_m_omol")\n        Options depend on engine\n    wavefront_propagation: Use wavefront optimization (default: True)\n        Speeds up scans by using previous geometries as starting points\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Dihedral scan\n    result = submit_scan_workflow(\n        initial_molecule="CC(C)CC",\n        scan_settings={\n            "type": "dihedral",\n            "atoms": [0, 1, 2, 3],\n            "start": -180,\n            "stop": 180,\n            "step": 15\n        }\n    )\n    \n    # Bond scan with advanced method\n    result = submit_scan_workflow(\n        initial_molecule="CC",\n        scan_settings={\n            "type": "bond",\n            "atoms": [0, 1],\n            "start": 1.0,\n            "stop": 2.5,\n            "step": 0.1\n        },\n        calculation_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'scan_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Scan Settings'}, 'calculation_engine': {'default': 'omol25', 'title': 'Calculation Engine', 'type': 'string'}, 'calculation_method': {'default': 'uma_m_omol', 'title': 'Calculation Method', 'type': 'string'}, 'wavefront_propagation': {'default': True, 'title': 'Wavefront Propagation', 'type': 'boolean'}, 'name': {'default': 'Scan Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_irc_workflow', 'description': 'Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\n\nArgs:\n    initial_molecule: The initial molecule to perform the IRC calculation on.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    method: The computational method to use for the IRC calculation (default: "uma_m_omol")\n        See list of available methods for options\n    engine: The computational engine to use for the calculation (default: "omol25")\n        See list of available engines\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\n    step_size: The step size to use for the IRC calculation (default: 0.05)\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted IRC workflow\n    \nExample:\n    # Basic IRC calculation\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "[CH3].[CH3]"},\n        method="gfn2_xtb",\n        max_irc_steps=50\n    )\n    \n    # IRC with specific method and engine\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "CC(O)=CC"},\n        method="r2scan_3c",\n        engine="psi4",\n        step_size=0.03\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'title': 'Method', 'type': 'string'}, 'engine': {'default': 'omol25', 'title': 'Engine', 'type': 'string'}, 'preopt': {'default': True, 'title': 'Preopt', 'type': 'boolean'}, 'step_size': {'default': 0.05, 'title': 'Step Size', 'type': 'number'}, 'max_irc_steps': {'default': 30, 'title': 'Max Irc Steps', 'type': 'integer'}, 'name': {'default': 'IRC Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'type': 'object'}}, {'name': 'submit_protein_cofolding_workflow', 'description': 'Submits a protein cofolding workflow to the API.\n\nArgs:\n    initial_protein_sequences: The sequences of the proteins to be cofolded\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\n    use_msa_server: Whether to use the MSA server for the computation\n    use_potentials: Whether to use potentials for the computation\n    name: The name of the workflow\n    model: The model to use for the computation\n    folder_uuid: The UUID of the folder to store the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Protein dimer cofolding\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=[\n            "MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK",\n            "MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF"\n        ]\n    )\n    \n    # Protein-ligand complex\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=["MGSSHHHHHHSSGLVPRGSH"],\n        initial_smiles_list=["CC(=O)O", "CCO"],\n        ligand_binding_affinity_index=0,\n        use_msa_server=True\n    )\n', 'inputSchema': {'properties': {'initial_protein_sequences': {'items': {'type': 'string'}, 'title': 'Initial Protein Sequences', 'type': 'array'}, 'initial_smiles_list': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Initial Smiles List'}, 'ligand_binding_affinity_index': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Ligand Binding Affinity Index'}, 'use_msa_server': {'default': True, 'title': 'Use Msa Server', 'type': 'boolean'}, 'use_potentials': {'default': False, 'title': 'Use Potentials', 'type': 'boolean'}, 'name': {'default': 'Cofolding Workflow', 'title': 'Name', 'type': 'string'}, 'model': {'default': 'boltz_2', 'title': 'Model', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_protein_sequences'], 'type': 'object'}}, {'name': 'submit_docking_workflow', 'description': 'Submits a Docking workflow to the API.\n\nArgs:\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\n    pocket: The pocket to dock into\n    initial_molecule: The initial molecule to be docked.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    do_csearch: Whether to perform a conformational search on the ligand\n    do_optimization: Whether to perform an optimization on the ligand\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic docking with protein UUID\n    result = submit_docking_workflow(\n        protein="protein-uuid-123",\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CC(=O)Oc1ccccc1C(=O)O"}\n    )\n    \n    # Docking with optimization disabled\n    result = submit_docking_workflow(\n        protein=protein_obj,\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CCO"},\n        do_csearch=False,\n        do_optimization=False\n    )\n', 'inputSchema': {'properties': {'protein': {'anyOf': [{'type': 'string'}, {}], 'title': 'Protein'}, 'pocket': {'title': 'Pocket'}, 'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'do_csearch': {'default': True, 'title': 'Do Csearch', 'type': 'boolean'}, 'do_optimization': {'default': True, 'title': 'Do Optimization', 'type': 'boolean'}, 'name': {'default': 'Docking Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['protein', 'pocket'], 'type': 'object'}}, {'name': 'workflow_fetch_latest', 'description': 'Fetch the latest workflow data from the database.\n\nUpdates the workflow object with the most recent status and results.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to fetch\n    in_place: Whether to update the workflow object in place (default: False)\n    \nReturns:\n    Dictionary containing the updated workflow data including status and results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'in_place': {'default': False, 'title': 'In Place', 'type': 'boolean'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_wait_for_result', 'description': 'Wait for a workflow to complete and return the result.\n\nBlocks until the workflow completes, polling at specified intervals.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to wait for\n    poll_interval: Time in seconds between status checks (default: 5)\n    \nReturns:\n    Dictionary containing the completed workflow data including results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'poll_interval': {'default': 5, 'title': 'Poll Interval', 'type': 'integer'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_get_status', 'description': 'Get the current status of a workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with status information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_stop', 'description': 'Stop a running workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to stop\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete', 'description': 'Delete a workflow.\n\nThis permanently removes the workflow and its results from the database.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to delete\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'retrieve_workflow', 'description': 'Retrieve a workflow from the API.\n\nArgs:\n    uuid: The UUID of the workflow to retrieve\n    \nReturns:\n    Dictionary containing the complete workflow data\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'retrieve_calculation_molecules', 'description': 'Retrieve a list of molecules from a calculation.\n\nArgs:\n    uuid: The UUID of the calculation to retrieve molecules from\n    \nReturns:\n    List of dictionaries representing the molecules in the calculation\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'list_workflows', 'description': 'List workflows subject to the specified criteria.\n\nArgs:\n    parent_uuid: The UUID of the parent folder\n    name_contains: Substring to search for in workflow names\n    public: Filter workflows by their public status\n    starred: Filter workflows by their starred status\n    status: Filter workflows by their status\n    workflow_type: Filter workflows by their type\n    page: The page number to retrieve (default: 0)\n    size: The number of items per page (default: 10)\n    \nReturns:\n    List of workflow dictionaries that match the search criteria\n    \nRaises:\n    HTTPError: If the request to the API fails\n', 'inputSchema': {'properties': {'parent_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Parent Uuid'}, 'name_contains': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name Contains'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'status': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Status'}, 'workflow_type': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Type'}, 'page': {'default': 0, 'title': 'Page', 'type': 'integer'}, 'size': {'default': 10, 'title': 'Size', 'type': 'integer'}}, 'type': 'object'}}, {'name': 'workflow_update', 'description': 'Update workflow details.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to update\n    name: New name for the workflow (optional)\n    notes: New notes for the workflow (optional)\n    starred: Whether to star/unstar the workflow (optional)\n    public: Whether to make the workflow public/private (optional)\n    \nReturns:\n    Dictionary with updated workflow information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name'}, 'notes': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Notes'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_is_finished', 'description': 'Check if a workflow is finished.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to check\n    \nReturns:\n    Dictionary with workflow completion status\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete_data', 'description': 'Delete workflow data while keeping the workflow record.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}]})), metadata=None)
2025-08-02 13:57:37,252 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":2,"result":{"tools":[{"name":"submit_basic_calculation_workflow","description":"Submit a basic calculation workflow using Rowan v2 API.\\n\\nPerforms fundamental quantum chemistry calculations with configurable methods\\nand computational tasks. Returns a workflow object for tracking progress.\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"type":"string"},{"additionalProperties":true,"type":"object"},{}],"description":"The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object","title":"Initial Molecule"},"method":{"default":"uma_m_omol","description":"The method to use for the calculation (e.g., \'uma_m_omol\', \'gfn2-xtb\', \'r2scan_3c\')","title":"Method","type":"string"},"tasks":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"description":"List of computational tasks to perform. Optional[List[str]] (e.g. [\'optimize\']), Defaults to None","title":"Tasks"},"mode":{"default":"auto","description":"The mode to run the calculation in (\'auto\', \'rapid\', \'careful\', \'meticulous\')","title":"Mode","type":"string"},"engine":{"default":"omol25","description":"The computational engine to use (\'omol25\', \'xtb\', \'psi4\')","title":"Engine","type":"string"},"name":{"default":"Basic Calculation Workflow","description":"The name of the workflow for identification","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"UUID of the folder to place the workflow in (optional)","title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"description":"Maximum number of credits to use for the workflow (optional)","title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_conformer_search_workflow","description":"Submit a conformer search workflow using Rowan v2 API.\\n\\nExplores the conformational space of a molecule to find low-energy structures.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    conf_gen_mode: default to \\"rapid\\"\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    final_method: default: \\"aimnet2_wb97md3\\"\\n        Try other options, if user specifies\\n    solvent: Optional solvent for implicit solvation (e.g., \\"water\\", \\"ethanol\\")\\n    transition_state: Whether searching for transition state conformers (default: False)\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic conformer search\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CCCC\\",\\n        conf_gen_mode=\\"rapid\\"\\n    )\\n    \\n    # Careful search with solvent\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CC(C)CC(=O)O\\",\\n        conf_gen_mode=\\"careful\\",\\n        solvent=\\"water\\",\\n        final_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"conf_gen_mode":{"default":"rapid","title":"Conf Gen Mode","type":"string"},"final_method":{"default":"aimnet2_wb97md3","title":"Final Method","type":"string"},"solvent":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Solvent"},"transition_state":{"default":false,"title":"Transition State","type":"boolean"},"name":{"default":"Conformer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_solubility_workflow","description":"Submit a solubility prediction workflow using Rowan v2 API.\\n\\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\\nusing machine learning models.\\n\\nArgs:\\n    initial_smiles: SMILES string of the molecule\\n    solvents: List of solvents as SMILES or common names (e.g., [\\"water\\", \\"ethanol\\"])\\n        If None, uses default solvents\\n    temperatures: List of temperatures in Kelvin\\n        If None, uses default temperature range\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic solubility prediction\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)Nc1ccc(O)cc1\\",\\n        solvents=[\\"water\\", \\"ethanol\\"],\\n        temperatures=[298.15, 310.15]\\n    )\\n    \\n    # With SMILES solvents\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)O\\",\\n        solvents=[\\"O\\", \\"CCO\\", \\"CCCCCC\\"],\\n        temperatures=[273.15, 298.15, 323.15]\\n    )\\n","inputSchema":{"properties":{"initial_smiles":{"title":"Initial Smiles","type":"string"},"solvents":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Solvents"},"temperatures":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"default":null,"title":"Temperatures"},"name":{"default":"Solubility Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_smiles"],"type":"object"}},{"name":"submit_pka_workflow","description":"Submit a pKa prediction workflow using Rowan v2 API.\\n\\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\\nusing quantum chemistry calculations.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\\n    deprotonate_elements: List of elements to consider for deprotonation\\n        (e.g., [\\"N\\", \\"O\\", \\"S\\"]). If None, uses defaults\\n    protonate_elements: List of elements to consider for protonation\\n        (e.g., [\\"N\\", \\"O\\"]). If None, uses defaults\\n    mode: Calculation mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic pKa prediction\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"CC(=O)O\\",\\n        pka_range=(2, 8)\\n    )\\n    \\n    # Specific elements with meticulous mode\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"NC(C)C(=O)O\\",\\n        pka_range=(1, 14),\\n        deprotonate_elements=[\\"N\\", \\"O\\"],\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"pka_range":{"default":[2,12],"maxItems":2,"minItems":2,"prefixItems":[{"type":"number"},{"type":"number"}],"title":"Pka Range","type":"array"},"deprotonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Deprotonate Elements"},"protonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Protonate Elements"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"pKa Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_redox_potential_workflow","description":"Submit a redox potential calculation workflow using Rowan v2 API.\\n\\nCalculates reduction and/or oxidation potentials for a molecule using\\nquantum chemistry methods.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    reduction: Whether to calculate reduction potential (default: False)\\n    oxidization: Whether to calculate oxidation potential (default: True)\\n    mode: Calculation mode (default: \\"rapid\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic oxidation potential\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"CC1=CC=CC=C1\\",\\n        oxidization=True\\n    )\\n    \\n    # Both reduction and oxidation with careful mode\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"c1ccccc1\\",\\n        reduction=True,\\n        oxidization=True,\\n        mode=\\"careful\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"reduction":{"default":false,"title":"Reduction","type":"boolean"},"oxidization":{"default":true,"title":"Oxidization","type":"boolean"},"mode":{"default":"rapid","title":"Mode","type":"string"},"name":{"default":"Redox Potential Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_fukui_workflow","description":"Submit a Fukui indices calculation workflow using Rowan v2 API.\\n\\nCalculates Fukui indices to predict molecular reactivity at different sites.\\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    optimization_method: Method for geometry optimization (default: \\"gfn2_xtb\\")\\n        Common options: \\"gfn2_xtb\\", \\"r2scan_3c\\", \\"aimnet2_wb97md3\\"\\n    fukui_method: Method for Fukui calculation (default: \\"gfn1_xtb\\")\\n        Common options: \\"gfn1_xtb\\", \\"gfn2_xtb\\"\\n    solvent_settings: Optional solvent configuration dictionary\\n        Example: {\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic Fukui indices\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"CC(=O)O\\"\\n    )\\n    \\n    # With solvent and advanced methods\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"c1ccccc1N\\",\\n        optimization_method=\\"r2scan_3c\\",\\n        fukui_method=\\"gfn2_xtb\\",\\n        solvent_settings={\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"optimization_method":{"default":"gfn2_xtb","title":"Optimization Method","type":"string"},"fukui_method":{"default":"gfn1_xtb","title":"Fukui Method","type":"string"},"solvent_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Solvent Settings"},"name":{"default":"Fukui Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_tautomer_search_workflow","description":"Submit a tautomer search workflow using Rowan v2 API.\\n\\nSearches for different tautomeric forms of a molecule and evaluates their\\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    mode: Search mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic tautomer search\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"CC(=O)CC(=O)C\\"\\n    )\\n    \\n    # Meticulous search for complex molecule\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"c1ccc2c(c1)ncc(=O)[nH]2\\",\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"Tautomer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_descriptors_workflow","description":"Submit a molecular descriptors calculation workflow using Rowan v2 API.\\n\\nCalculates a comprehensive set of molecular descriptors including:\\n- Physical properties (MW, logP, TPSA, etc.)\\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\\n- Topological indices\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic descriptor calculation\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CC(=O)Nc1ccc(O)cc1\\"\\n    )\\n    \\n    # For complex molecule\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)C\\",\\n        name=\\"Caffeine Descriptors\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"name":{"default":"Descriptors Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_scan_workflow","description":"Submit a potential energy surface scan workflow using Rowan v2 API.\\n\\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\\nor dihedrals) to map the potential energy surface.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    scan_settings: Dictionary specifying scan parameters\\n        Example: {\\n            \\"type\\": \\"dihedral\\",  # or \\"bond\\", \\"angle\\"\\n            \\"atoms\\": [0, 1, 2, 3],  # atom indices\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 10\\n        }\\n    calculation_engine: Computational engine (default: \\"omol25\\")\\n        Options: \\"omol25\\", \\"xtb\\", \\"psi4\\"\\n    calculation_method: Method for calculations (default: \\"uma_m_omol\\")\\n        Options depend on engine\\n    wavefront_propagation: Use wavefront optimization (default: True)\\n        Speeds up scans by using previous geometries as starting points\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Dihedral scan\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC(C)CC\\",\\n        scan_settings={\\n            \\"type\\": \\"dihedral\\",\\n            \\"atoms\\": [0, 1, 2, 3],\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 15\\n        }\\n    )\\n    \\n    # Bond scan with advanced method\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC\\",\\n        scan_settings={\\n            \\"type\\": \\"bond\\",\\n            \\"atoms\\": [0, 1],\\n            \\"start\\": 1.0,\\n            \\"stop\\": 2.5,\\n            \\"step\\": 0.1\\n        },\\n        calculation_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"scan_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Scan Settings"},"calculation_engine":{"default":"omol25","title":"Calculation Engine","type":"string"},"calculation_method":{"default":"uma_m_omol","title":"Calculation Method","type":"string"},"wavefront_propagation":{"default":true,"title":"Wavefront Propagation","type":"boolean"},"name":{"default":"Scan Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_irc_workflow","description":"Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\\n\\nArgs:\\n    initial_molecule: The initial molecule to perform the IRC calculation on.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    method: The computational method to use for the IRC calculation (default: \\"uma_m_omol\\")\\n        See list of available methods for options\\n    engine: The computational engine to use for the calculation (default: \\"omol25\\")\\n        See list of available engines\\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\\n    step_size: The step size to use for the IRC calculation (default: 0.05)\\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted IRC workflow\\n    \\nExample:\\n    # Basic IRC calculation\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"[CH3].[CH3]\\"},\\n        method=\\"gfn2_xtb\\",\\n        max_irc_steps=50\\n    )\\n    \\n    # IRC with specific method and engine\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"CC(O)=CC\\"},\\n        method=\\"r2scan_3c\\",\\n        engine=\\"psi4\\",\\n        step_size=0.03\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"method":{"default":"uma_m_omol","title":"Method","type":"string"},"engine":{"default":"omol25","title":"Engine","type":"string"},"preopt":{"default":true,"title":"Preopt","type":"boolean"},"step_size":{"default":0.05,"title":"Step Size","type":"number"},"max_irc_steps":{"default":30,"title":"Max Irc Steps","type":"integer"},"name":{"default":"IRC Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"type":"object"}},{"name":"submit_protein_cofolding_workflow","description":"Submits a protein cofolding workflow to the API.\\n\\nArgs:\\n    initial_protein_sequences: The sequences of the proteins to be cofolded\\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\\n    use_msa_server: Whether to use the MSA server for the computation\\n    use_potentials: Whether to use potentials for the computation\\n    name: The name of the workflow\\n    model: The model to use for the computation\\n    folder_uuid: The UUID of the folder to store the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Protein dimer cofolding\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\n            \\"MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK\\",\\n            \\"MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF\\"\\n        ]\\n    )\\n    \\n    # Protein-ligand complex\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\"MGSSHHHHHHSSGLVPRGSH\\"],\\n        initial_smiles_list=[\\"CC(=O)O\\", \\"CCO\\"],\\n        ligand_binding_affinity_index=0,\\n        use_msa_server=True\\n    )\\n","inputSchema":{"properties":{"initial_protein_sequences":{"items":{"type":"string"},"title":"Initial Protein Sequences","type":"array"},"initial_smiles_list":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Initial Smiles List"},"ligand_binding_affinity_index":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Ligand Binding Affinity Index"},"use_msa_server":{"default":true,"title":"Use Msa Server","type":"boolean"},"use_potentials":{"default":false,"title":"Use Potentials","type":"boolean"},"name":{"default":"Cofolding Workflow","title":"Name","type":"string"},"model":{"default":"boltz_2","title":"Model","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_protein_sequences"],"type":"object"}},{"name":"submit_docking_workflow","description":"Submits a Docking workflow to the API.\\n\\nArgs:\\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\\n    pocket: The pocket to dock into\\n    initial_molecule: The initial molecule to be docked.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    do_csearch: Whether to perform a conformational search on the ligand\\n    do_optimization: Whether to perform an optimization on the ligand\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic docking with protein UUID\\n    result = submit_docking_workflow(\\n        protein=\\"protein-uuid-123\\",\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CC(=O)Oc1ccccc1C(=O)O\\"}\\n    )\\n    \\n    # Docking with optimization disabled\\n    result = submit_docking_workflow(\\n        protein=protein_obj,\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CCO\\"},\\n        do_csearch=False,\\n        do_optimization=False\\n    )\\n","inputSchema":{"properties":{"protein":{"anyOf":[{"type":"string"},{}],"title":"Protein"},"pocket":{"title":"Pocket"},"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"do_csearch":{"default":true,"title":"Do Csearch","type":"boolean"},"do_optimization":{"default":true,"title":"Do Optimization","type":"boolean"},"name":{"default":"Docking Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["protein","pocket"],"type":"object"}},{"name":"workflow_fetch_latest","description":"Fetch the latest workflow data from the database.\\n\\nUpdates the workflow object with the most recent status and results.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to fetch\\n    in_place: Whether to update the workflow object in place (default: False)\\n    \\nReturns:\\n    Dictionary containing the updated workflow data including status and results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"in_place":{"default":false,"title":"In Place","type":"boolean"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_wait_for_result","description":"Wait for a workflow to complete and return the result.\\n\\nBlocks until the workflow completes, polling at specified intervals.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to wait for\\n    poll_interval: Time in seconds between status checks (default: 5)\\n    \\nReturns:\\n    Dictionary containing the completed workflow data including results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"poll_interval":{"default":5,"title":"Poll Interval","type":"integer"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_get_status","description":"Get the current status of a workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with status information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_stop","description":"Stop a running workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to stop\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete","description":"Delete a workflow.\\n\\nThis permanently removes the workflow and its results from the database.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to delete\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"retrieve_workflow","description":"Retrieve a workflow from the API.\\n\\nArgs:\\n    uuid: The UUID of the workflow to retrieve\\n    \\nReturns:\\n    Dictionary containing the complete workflow data\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"retrieve_calculation_molecules","description":"Retrieve a list of molecules from a calculation.\\n\\nArgs:\\n    uuid: The UUID of the calculation to retrieve molecules from\\n    \\nReturns:\\n    List of dictionaries representing the molecules in the calculation\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"list_workflows","description":"List workflows subject to the specified criteria.\\n\\nArgs:\\n    parent_uuid: The UUID of the parent folder\\n    name_contains: Substring to search for in workflow names\\n    public: Filter workflows by their public status\\n    starred: Filter workflows by their starred status\\n    status: Filter workflows by their status\\n    workflow_type: Filter workflows by their type\\n    page: The page number to retrieve (default: 0)\\n    size: The number of items per page (default: 10)\\n    \\nReturns:\\n    List of workflow dictionaries that match the search criteria\\n    \\nRaises:\\n    HTTPError: If the request to the API fails\\n","inputSchema":{"properties":{"parent_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Parent Uuid"},"name_contains":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name Contains"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"status":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Status"},"workflow_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Workflow Type"},"page":{"default":0,"title":"Page","type":"integer"},"size":{"default":10,"title":"Size","type":"integer"}},"type":"object"}},{"name":"workflow_update","description":"Update workflow details.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to update\\n    name: New name for the workflow (optional)\\n    notes: New notes for the workflow (optional)\\n    starred: Whether to star/unstar the workflow (optional)\\n    public: Whether to make the workflow public/private (optional)\\n    \\nReturns:\\n    Dictionary with updated workflow information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name"},"notes":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Notes"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_is_finished","description":"Check if a workflow is finished.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to check\\n    \\nReturns:\\n    Dictionary with workflow completion status\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete_data","description":"Delete workflow data while keeping the workflow record.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}}]}}\r\n\r\n'
2025-08-02 13:57:37,257 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:57:37,258 - mcp.server.sse - DEBUG - Parsed session ID: de7fcb53-49c7-4e5c-ad94-9d0b2fe064ed
2025-08-02 13:57:37,258 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"prompts/list","jsonrpc":"2.0","id":3}'
2025-08-02 13:57:37,258 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=3)
2025-08-02 13:57:37,258 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=3)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x109f92ba0>))
2025-08-02 13:57:37,258 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x109fa79d0>
2025-08-02 13:57:37,258 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 13:57:37,259 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListPromptsRequest
2025-08-02 13:57:37,259 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:57:37,259 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=3, result={'prompts': []})), metadata=None)
2025-08-02 13:57:37,259 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":3,"result":{"prompts":[]}}\r\n\r\n'
2025-08-02 13:57:37,957 - sse_starlette.sse - DEBUG - Got event: http.disconnect. Stop streaming.
2025-08-02 13:57:37,958 - root - DEBUG - Client session disconnected de7fcb53-49c7-4e5c-ad94-9d0b2fe064ed
2025-08-02 13:57:38,704 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 13:57:38,704 - mcp.server.sse - DEBUG - Created new session with ID: 55686284-859c-4203-9d93-d3bdd3693f32
2025-08-02 13:57:38,704 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 13:57:38,704 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 13:57:38,706 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 13:57:38,707 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=55686284859c42039d93d3bdd3693f32
2025-08-02 13:57:38,708 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=55686284859c42039d93d3bdd3693f32\r\n\r\n'
2025-08-02 13:57:38,710 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:57:38,710 - mcp.server.sse - DEBUG - Parsed session ID: 55686284-859c-4203-9d93-d3bdd3693f32
2025-08-02 13:57:38,710 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"initialize","params":{"protocolVersion":"2025-06-18","capabilities":{"tools":true,"prompts":true,"resources":false,"logging":false,"roots":{"listChanged":false}},"clientInfo":{"name":"cursor-vscode","version":"1.0.0"}},"jsonrpc":"2.0","id":1}'
2025-08-02 13:57:38,711 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'tools': True, 'prompts': True, 'resources': False, 'logging': False, 'roots': {'listChanged': False}}, 'clientInfo': {'name': 'cursor-vscode', 'version': '1.0.0'}}, jsonrpc='2.0', id=1)
2025-08-02 13:57:38,711 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'tools': True, 'prompts': True, 'resources': False, 'logging': False, 'roots': {'listChanged': False}}, 'clientInfo': {'name': 'cursor-vscode', 'version': '1.0.0'}}, jsonrpc='2.0', id=1)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x109f92f90>))
2025-08-02 13:57:38,711 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=1, result={'protocolVersion': '2025-03-26', 'capabilities': {'experimental': {}, 'prompts': {'listChanged': False}, 'resources': {'subscribe': False, 'listChanged': False}, 'tools': {'listChanged': False}}, 'serverInfo': {'name': 'Rowan MCP Server', 'version': '1.9.3'}})), metadata=None)
2025-08-02 13:57:38,711 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":1,"result":{"protocolVersion":"2025-03-26","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"Rowan MCP Server","version":"1.9.3"}}}\r\n\r\n'
2025-08-02 13:57:38,714 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:57:38,714 - mcp.server.sse - DEBUG - Parsed session ID: 55686284-859c-4203-9d93-d3bdd3693f32
2025-08-02 13:57:38,714 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"notifications/initialized","jsonrpc":"2.0"}'
2025-08-02 13:57:38,715 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 13:57:38,715 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x109f930b0>))
2025-08-02 13:57:38,715 - mcp.server.lowlevel.server - DEBUG - Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 13:57:38,719 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:57:38,719 - mcp.server.sse - DEBUG - Parsed session ID: 55686284-859c-4203-9d93-d3bdd3693f32
2025-08-02 13:57:38,719 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/list","jsonrpc":"2.0","id":2}'
2025-08-02 13:57:38,719 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=2)
2025-08-02 13:57:38,719 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=2)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x109f931d0>))
2025-08-02 13:57:38,720 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10a007100>
2025-08-02 13:57:38,720 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 13:57:38,720 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListToolsRequest
2025-08-02 13:57:38,721 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:57:38,722 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=2, result={'tools': [{'name': 'submit_basic_calculation_workflow', 'description': 'Submit a basic calculation workflow using Rowan v2 API.\n\nPerforms fundamental quantum chemistry calculations with configurable methods\nand computational tasks. Returns a workflow object for tracking progress.\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'type': 'string'}, {'additionalProperties': True, 'type': 'object'}, {}], 'description': 'The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object', 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'description': "The method to use for the calculation (e.g., 'uma_m_omol', 'gfn2-xtb', 'r2scan_3c')", 'title': 'Method', 'type': 'string'}, 'tasks': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'description': "List of computational tasks to perform. Optional[List[str]] (e.g. ['optimize']), Defaults to None", 'title': 'Tasks'}, 'mode': {'default': 'auto', 'description': "The mode to run the calculation in ('auto', 'rapid', 'careful', 'meticulous')", 'title': 'Mode', 'type': 'string'}, 'engine': {'default': 'omol25', 'description': "The computational engine to use ('omol25', 'xtb', 'psi4')", 'title': 'Engine', 'type': 'string'}, 'name': {'default': 'Basic Calculation Workflow', 'description': 'The name of the workflow for identification', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'UUID of the folder to place the workflow in (optional)', 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'description': 'Maximum number of credits to use for the workflow (optional)', 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_conformer_search_workflow', 'description': 'Submit a conformer search workflow using Rowan v2 API.\n\nExplores the conformational space of a molecule to find low-energy structures.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    conf_gen_mode: default to "rapid"\n        Options: "rapid", "careful", "meticulous"\n    final_method: default: "aimnet2_wb97md3"\n        Try other options, if user specifies\n    solvent: Optional solvent for implicit solvation (e.g., "water", "ethanol")\n    transition_state: Whether searching for transition state conformers (default: False)\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic conformer search\n    result = submit_conformer_search_workflow(\n        initial_molecule="CCCC",\n        conf_gen_mode="rapid"\n    )\n    \n    # Careful search with solvent\n    result = submit_conformer_search_workflow(\n        initial_molecule="CC(C)CC(=O)O",\n        conf_gen_mode="careful",\n        solvent="water",\n        final_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'conf_gen_mode': {'default': 'rapid', 'title': 'Conf Gen Mode', 'type': 'string'}, 'final_method': {'default': 'aimnet2_wb97md3', 'title': 'Final Method', 'type': 'string'}, 'solvent': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Solvent'}, 'transition_state': {'default': False, 'title': 'Transition State', 'type': 'boolean'}, 'name': {'default': 'Conformer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_solubility_workflow', 'description': 'Submit a solubility prediction workflow using Rowan v2 API.\n\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\nusing machine learning models.\n\nArgs:\n    initial_smiles: SMILES string of the molecule\n    solvents: List of solvents as SMILES or common names (e.g., ["water", "ethanol"])\n        If None, uses default solvents\n    temperatures: List of temperatures in Kelvin\n        If None, uses default temperature range\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic solubility prediction\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)Nc1ccc(O)cc1",\n        solvents=["water", "ethanol"],\n        temperatures=[298.15, 310.15]\n    )\n    \n    # With SMILES solvents\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)O",\n        solvents=["O", "CCO", "CCCCCC"],\n        temperatures=[273.15, 298.15, 323.15]\n    )\n', 'inputSchema': {'properties': {'initial_smiles': {'title': 'Initial Smiles', 'type': 'string'}, 'solvents': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Solvents'}, 'temperatures': {'anyOf': [{'items': {'type': 'number'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Temperatures'}, 'name': {'default': 'Solubility Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_smiles'], 'type': 'object'}}, {'name': 'submit_pka_workflow', 'description': 'Submit a pKa prediction workflow using Rowan v2 API.\n\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\nusing quantum chemistry calculations.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\n    deprotonate_elements: List of elements to consider for deprotonation\n        (e.g., ["N", "O", "S"]). If None, uses defaults\n    protonate_elements: List of elements to consider for protonation\n        (e.g., ["N", "O"]). If None, uses defaults\n    mode: Calculation mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic pKa prediction\n    result = submit_pka_workflow(\n        initial_molecule="CC(=O)O",\n        pka_range=(2, 8)\n    )\n    \n    # Specific elements with meticulous mode\n    result = submit_pka_workflow(\n        initial_molecule="NC(C)C(=O)O",\n        pka_range=(1, 14),\n        deprotonate_elements=["N", "O"],\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'pka_range': {'default': [2, 12], 'maxItems': 2, 'minItems': 2, 'prefixItems': [{'type': 'number'}, {'type': 'number'}], 'title': 'Pka Range', 'type': 'array'}, 'deprotonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Deprotonate Elements'}, 'protonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Protonate Elements'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'pKa Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_redox_potential_workflow', 'description': 'Submit a redox potential calculation workflow using Rowan v2 API.\n\nCalculates reduction and/or oxidation potentials for a molecule using\nquantum chemistry methods.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    reduction: Whether to calculate reduction potential (default: False)\n    oxidization: Whether to calculate oxidation potential (default: True)\n    mode: Calculation mode (default: "rapid")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic oxidation potential\n    result = submit_redox_potential_workflow(\n        initial_molecule="CC1=CC=CC=C1",\n        oxidization=True\n    )\n    \n    # Both reduction and oxidation with careful mode\n    result = submit_redox_potential_workflow(\n        initial_molecule="c1ccccc1",\n        reduction=True,\n        oxidization=True,\n        mode="careful"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'reduction': {'default': False, 'title': 'Reduction', 'type': 'boolean'}, 'oxidization': {'default': True, 'title': 'Oxidization', 'type': 'boolean'}, 'mode': {'default': 'rapid', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Redox Potential Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_fukui_workflow', 'description': 'Submit a Fukui indices calculation workflow using Rowan v2 API.\n\nCalculates Fukui indices to predict molecular reactivity at different sites.\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    optimization_method: Method for geometry optimization (default: "gfn2_xtb")\n        Common options: "gfn2_xtb", "r2scan_3c", "aimnet2_wb97md3"\n    fukui_method: Method for Fukui calculation (default: "gfn1_xtb")\n        Common options: "gfn1_xtb", "gfn2_xtb"\n    solvent_settings: Optional solvent configuration dictionary\n        Example: {"solvent": "water", "model": "alpb"}\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic Fukui indices\n    result = submit_fukui_workflow(\n        initial_molecule="CC(=O)O"\n    )\n    \n    # With solvent and advanced methods\n    result = submit_fukui_workflow(\n        initial_molecule="c1ccccc1N",\n        optimization_method="r2scan_3c",\n        fukui_method="gfn2_xtb",\n        solvent_settings={"solvent": "water", "model": "alpb"}\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'optimization_method': {'default': 'gfn2_xtb', 'title': 'Optimization Method', 'type': 'string'}, 'fukui_method': {'default': 'gfn1_xtb', 'title': 'Fukui Method', 'type': 'string'}, 'solvent_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Solvent Settings'}, 'name': {'default': 'Fukui Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_tautomer_search_workflow', 'description': 'Submit a tautomer search workflow using Rowan v2 API.\n\nSearches for different tautomeric forms of a molecule and evaluates their\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    mode: Search mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic tautomer search\n    result = submit_tautomer_search_workflow(\n        initial_molecule="CC(=O)CC(=O)C"\n    )\n    \n    # Meticulous search for complex molecule\n    result = submit_tautomer_search_workflow(\n        initial_molecule="c1ccc2c(c1)ncc(=O)[nH]2",\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Tautomer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_descriptors_workflow', 'description': 'Submit a molecular descriptors calculation workflow using Rowan v2 API.\n\nCalculates a comprehensive set of molecular descriptors including:\n- Physical properties (MW, logP, TPSA, etc.)\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\n- Topological indices\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic descriptor calculation\n    result = submit_descriptors_workflow(\n        initial_molecule="CC(=O)Nc1ccc(O)cc1"\n    )\n    \n    # For complex molecule\n    result = submit_descriptors_workflow(\n        initial_molecule="CN1C=NC2=C1C(=O)N(C(=O)N2C)C",\n        name="Caffeine Descriptors"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'name': {'default': 'Descriptors Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_scan_workflow', 'description': 'Submit a potential energy surface scan workflow using Rowan v2 API.\n\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\nor dihedrals) to map the potential energy surface.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    scan_settings: Dictionary specifying scan parameters\n        Example: {\n            "type": "dihedral",  # or "bond", "angle"\n            "atoms": [0, 1, 2, 3],  # atom indices\n            "start": -180,\n            "stop": 180,\n            "step": 10\n        }\n    calculation_engine: Computational engine (default: "omol25")\n        Options: "omol25", "xtb", "psi4"\n    calculation_method: Method for calculations (default: "uma_m_omol")\n        Options depend on engine\n    wavefront_propagation: Use wavefront optimization (default: True)\n        Speeds up scans by using previous geometries as starting points\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Dihedral scan\n    result = submit_scan_workflow(\n        initial_molecule="CC(C)CC",\n        scan_settings={\n            "type": "dihedral",\n            "atoms": [0, 1, 2, 3],\n            "start": -180,\n            "stop": 180,\n            "step": 15\n        }\n    )\n    \n    # Bond scan with advanced method\n    result = submit_scan_workflow(\n        initial_molecule="CC",\n        scan_settings={\n            "type": "bond",\n            "atoms": [0, 1],\n            "start": 1.0,\n            "stop": 2.5,\n            "step": 0.1\n        },\n        calculation_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'scan_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Scan Settings'}, 'calculation_engine': {'default': 'omol25', 'title': 'Calculation Engine', 'type': 'string'}, 'calculation_method': {'default': 'uma_m_omol', 'title': 'Calculation Method', 'type': 'string'}, 'wavefront_propagation': {'default': True, 'title': 'Wavefront Propagation', 'type': 'boolean'}, 'name': {'default': 'Scan Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_irc_workflow', 'description': 'Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\n\nArgs:\n    initial_molecule: The initial molecule to perform the IRC calculation on.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    method: The computational method to use for the IRC calculation (default: "uma_m_omol")\n        See list of available methods for options\n    engine: The computational engine to use for the calculation (default: "omol25")\n        See list of available engines\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\n    step_size: The step size to use for the IRC calculation (default: 0.05)\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted IRC workflow\n    \nExample:\n    # Basic IRC calculation\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "[CH3].[CH3]"},\n        method="gfn2_xtb",\n        max_irc_steps=50\n    )\n    \n    # IRC with specific method and engine\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "CC(O)=CC"},\n        method="r2scan_3c",\n        engine="psi4",\n        step_size=0.03\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'title': 'Method', 'type': 'string'}, 'engine': {'default': 'omol25', 'title': 'Engine', 'type': 'string'}, 'preopt': {'default': True, 'title': 'Preopt', 'type': 'boolean'}, 'step_size': {'default': 0.05, 'title': 'Step Size', 'type': 'number'}, 'max_irc_steps': {'default': 30, 'title': 'Max Irc Steps', 'type': 'integer'}, 'name': {'default': 'IRC Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'type': 'object'}}, {'name': 'submit_protein_cofolding_workflow', 'description': 'Submits a protein cofolding workflow to the API.\n\nArgs:\n    initial_protein_sequences: The sequences of the proteins to be cofolded\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\n    use_msa_server: Whether to use the MSA server for the computation\n    use_potentials: Whether to use potentials for the computation\n    name: The name of the workflow\n    model: The model to use for the computation\n    folder_uuid: The UUID of the folder to store the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Protein dimer cofolding\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=[\n            "MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK",\n            "MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF"\n        ]\n    )\n    \n    # Protein-ligand complex\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=["MGSSHHHHHHSSGLVPRGSH"],\n        initial_smiles_list=["CC(=O)O", "CCO"],\n        ligand_binding_affinity_index=0,\n        use_msa_server=True\n    )\n', 'inputSchema': {'properties': {'initial_protein_sequences': {'items': {'type': 'string'}, 'title': 'Initial Protein Sequences', 'type': 'array'}, 'initial_smiles_list': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Initial Smiles List'}, 'ligand_binding_affinity_index': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Ligand Binding Affinity Index'}, 'use_msa_server': {'default': True, 'title': 'Use Msa Server', 'type': 'boolean'}, 'use_potentials': {'default': False, 'title': 'Use Potentials', 'type': 'boolean'}, 'name': {'default': 'Cofolding Workflow', 'title': 'Name', 'type': 'string'}, 'model': {'default': 'boltz_2', 'title': 'Model', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_protein_sequences'], 'type': 'object'}}, {'name': 'submit_docking_workflow', 'description': 'Submits a Docking workflow to the API.\n\nArgs:\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\n    pocket: The pocket to dock into\n    initial_molecule: The initial molecule to be docked.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    do_csearch: Whether to perform a conformational search on the ligand\n    do_optimization: Whether to perform an optimization on the ligand\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic docking with protein UUID\n    result = submit_docking_workflow(\n        protein="protein-uuid-123",\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CC(=O)Oc1ccccc1C(=O)O"}\n    )\n    \n    # Docking with optimization disabled\n    result = submit_docking_workflow(\n        protein=protein_obj,\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CCO"},\n        do_csearch=False,\n        do_optimization=False\n    )\n', 'inputSchema': {'properties': {'protein': {'anyOf': [{'type': 'string'}, {}], 'title': 'Protein'}, 'pocket': {'title': 'Pocket'}, 'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'do_csearch': {'default': True, 'title': 'Do Csearch', 'type': 'boolean'}, 'do_optimization': {'default': True, 'title': 'Do Optimization', 'type': 'boolean'}, 'name': {'default': 'Docking Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['protein', 'pocket'], 'type': 'object'}}, {'name': 'workflow_fetch_latest', 'description': 'Fetch the latest workflow data from the database.\n\nUpdates the workflow object with the most recent status and results.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to fetch\n    in_place: Whether to update the workflow object in place (default: False)\n    \nReturns:\n    Dictionary containing the updated workflow data including status and results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'in_place': {'default': False, 'title': 'In Place', 'type': 'boolean'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_wait_for_result', 'description': 'Wait for a workflow to complete and return the result.\n\nBlocks until the workflow completes, polling at specified intervals.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to wait for\n    poll_interval: Time in seconds between status checks (default: 5)\n    \nReturns:\n    Dictionary containing the completed workflow data including results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'poll_interval': {'default': 5, 'title': 'Poll Interval', 'type': 'integer'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_get_status', 'description': 'Get the current status of a workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with status information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_stop', 'description': 'Stop a running workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to stop\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete', 'description': 'Delete a workflow.\n\nThis permanently removes the workflow and its results from the database.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to delete\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'retrieve_workflow', 'description': 'Retrieve a workflow from the API.\n\nArgs:\n    uuid: The UUID of the workflow to retrieve\n    \nReturns:\n    Dictionary containing the complete workflow data\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'retrieve_calculation_molecules', 'description': 'Retrieve a list of molecules from a calculation.\n\nArgs:\n    uuid: The UUID of the calculation to retrieve molecules from\n    \nReturns:\n    List of dictionaries representing the molecules in the calculation\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'list_workflows', 'description': 'List workflows subject to the specified criteria.\n\nArgs:\n    parent_uuid: The UUID of the parent folder\n    name_contains: Substring to search for in workflow names\n    public: Filter workflows by their public status\n    starred: Filter workflows by their starred status\n    status: Filter workflows by their status\n    workflow_type: Filter workflows by their type\n    page: The page number to retrieve (default: 0)\n    size: The number of items per page (default: 10)\n    \nReturns:\n    List of workflow dictionaries that match the search criteria\n    \nRaises:\n    HTTPError: If the request to the API fails\n', 'inputSchema': {'properties': {'parent_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Parent Uuid'}, 'name_contains': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name Contains'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'status': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Status'}, 'workflow_type': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Type'}, 'page': {'default': 0, 'title': 'Page', 'type': 'integer'}, 'size': {'default': 10, 'title': 'Size', 'type': 'integer'}}, 'type': 'object'}}, {'name': 'workflow_update', 'description': 'Update workflow details.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to update\n    name: New name for the workflow (optional)\n    notes: New notes for the workflow (optional)\n    starred: Whether to star/unstar the workflow (optional)\n    public: Whether to make the workflow public/private (optional)\n    \nReturns:\n    Dictionary with updated workflow information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name'}, 'notes': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Notes'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_is_finished', 'description': 'Check if a workflow is finished.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to check\n    \nReturns:\n    Dictionary with workflow completion status\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete_data', 'description': 'Delete workflow data while keeping the workflow record.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}]})), metadata=None)
2025-08-02 13:57:38,725 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":2,"result":{"tools":[{"name":"submit_basic_calculation_workflow","description":"Submit a basic calculation workflow using Rowan v2 API.\\n\\nPerforms fundamental quantum chemistry calculations with configurable methods\\nand computational tasks. Returns a workflow object for tracking progress.\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"type":"string"},{"additionalProperties":true,"type":"object"},{}],"description":"The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object","title":"Initial Molecule"},"method":{"default":"uma_m_omol","description":"The method to use for the calculation (e.g., \'uma_m_omol\', \'gfn2-xtb\', \'r2scan_3c\')","title":"Method","type":"string"},"tasks":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"description":"List of computational tasks to perform. Optional[List[str]] (e.g. [\'optimize\']), Defaults to None","title":"Tasks"},"mode":{"default":"auto","description":"The mode to run the calculation in (\'auto\', \'rapid\', \'careful\', \'meticulous\')","title":"Mode","type":"string"},"engine":{"default":"omol25","description":"The computational engine to use (\'omol25\', \'xtb\', \'psi4\')","title":"Engine","type":"string"},"name":{"default":"Basic Calculation Workflow","description":"The name of the workflow for identification","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"UUID of the folder to place the workflow in (optional)","title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"description":"Maximum number of credits to use for the workflow (optional)","title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_conformer_search_workflow","description":"Submit a conformer search workflow using Rowan v2 API.\\n\\nExplores the conformational space of a molecule to find low-energy structures.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    conf_gen_mode: default to \\"rapid\\"\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    final_method: default: \\"aimnet2_wb97md3\\"\\n        Try other options, if user specifies\\n    solvent: Optional solvent for implicit solvation (e.g., \\"water\\", \\"ethanol\\")\\n    transition_state: Whether searching for transition state conformers (default: False)\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic conformer search\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CCCC\\",\\n        conf_gen_mode=\\"rapid\\"\\n    )\\n    \\n    # Careful search with solvent\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CC(C)CC(=O)O\\",\\n        conf_gen_mode=\\"careful\\",\\n        solvent=\\"water\\",\\n        final_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"conf_gen_mode":{"default":"rapid","title":"Conf Gen Mode","type":"string"},"final_method":{"default":"aimnet2_wb97md3","title":"Final Method","type":"string"},"solvent":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Solvent"},"transition_state":{"default":false,"title":"Transition State","type":"boolean"},"name":{"default":"Conformer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_solubility_workflow","description":"Submit a solubility prediction workflow using Rowan v2 API.\\n\\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\\nusing machine learning models.\\n\\nArgs:\\n    initial_smiles: SMILES string of the molecule\\n    solvents: List of solvents as SMILES or common names (e.g., [\\"water\\", \\"ethanol\\"])\\n        If None, uses default solvents\\n    temperatures: List of temperatures in Kelvin\\n        If None, uses default temperature range\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic solubility prediction\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)Nc1ccc(O)cc1\\",\\n        solvents=[\\"water\\", \\"ethanol\\"],\\n        temperatures=[298.15, 310.15]\\n    )\\n    \\n    # With SMILES solvents\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)O\\",\\n        solvents=[\\"O\\", \\"CCO\\", \\"CCCCCC\\"],\\n        temperatures=[273.15, 298.15, 323.15]\\n    )\\n","inputSchema":{"properties":{"initial_smiles":{"title":"Initial Smiles","type":"string"},"solvents":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Solvents"},"temperatures":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"default":null,"title":"Temperatures"},"name":{"default":"Solubility Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_smiles"],"type":"object"}},{"name":"submit_pka_workflow","description":"Submit a pKa prediction workflow using Rowan v2 API.\\n\\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\\nusing quantum chemistry calculations.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\\n    deprotonate_elements: List of elements to consider for deprotonation\\n        (e.g., [\\"N\\", \\"O\\", \\"S\\"]). If None, uses defaults\\n    protonate_elements: List of elements to consider for protonation\\n        (e.g., [\\"N\\", \\"O\\"]). If None, uses defaults\\n    mode: Calculation mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic pKa prediction\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"CC(=O)O\\",\\n        pka_range=(2, 8)\\n    )\\n    \\n    # Specific elements with meticulous mode\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"NC(C)C(=O)O\\",\\n        pka_range=(1, 14),\\n        deprotonate_elements=[\\"N\\", \\"O\\"],\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"pka_range":{"default":[2,12],"maxItems":2,"minItems":2,"prefixItems":[{"type":"number"},{"type":"number"}],"title":"Pka Range","type":"array"},"deprotonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Deprotonate Elements"},"protonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Protonate Elements"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"pKa Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_redox_potential_workflow","description":"Submit a redox potential calculation workflow using Rowan v2 API.\\n\\nCalculates reduction and/or oxidation potentials for a molecule using\\nquantum chemistry methods.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    reduction: Whether to calculate reduction potential (default: False)\\n    oxidization: Whether to calculate oxidation potential (default: True)\\n    mode: Calculation mode (default: \\"rapid\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic oxidation potential\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"CC1=CC=CC=C1\\",\\n        oxidization=True\\n    )\\n    \\n    # Both reduction and oxidation with careful mode\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"c1ccccc1\\",\\n        reduction=True,\\n        oxidization=True,\\n        mode=\\"careful\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"reduction":{"default":false,"title":"Reduction","type":"boolean"},"oxidization":{"default":true,"title":"Oxidization","type":"boolean"},"mode":{"default":"rapid","title":"Mode","type":"string"},"name":{"default":"Redox Potential Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_fukui_workflow","description":"Submit a Fukui indices calculation workflow using Rowan v2 API.\\n\\nCalculates Fukui indices to predict molecular reactivity at different sites.\\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    optimization_method: Method for geometry optimization (default: \\"gfn2_xtb\\")\\n        Common options: \\"gfn2_xtb\\", \\"r2scan_3c\\", \\"aimnet2_wb97md3\\"\\n    fukui_method: Method for Fukui calculation (default: \\"gfn1_xtb\\")\\n        Common options: \\"gfn1_xtb\\", \\"gfn2_xtb\\"\\n    solvent_settings: Optional solvent configuration dictionary\\n        Example: {\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic Fukui indices\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"CC(=O)O\\"\\n    )\\n    \\n    # With solvent and advanced methods\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"c1ccccc1N\\",\\n        optimization_method=\\"r2scan_3c\\",\\n        fukui_method=\\"gfn2_xtb\\",\\n        solvent_settings={\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"optimization_method":{"default":"gfn2_xtb","title":"Optimization Method","type":"string"},"fukui_method":{"default":"gfn1_xtb","title":"Fukui Method","type":"string"},"solvent_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Solvent Settings"},"name":{"default":"Fukui Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_tautomer_search_workflow","description":"Submit a tautomer search workflow using Rowan v2 API.\\n\\nSearches for different tautomeric forms of a molecule and evaluates their\\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    mode: Search mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic tautomer search\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"CC(=O)CC(=O)C\\"\\n    )\\n    \\n    # Meticulous search for complex molecule\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"c1ccc2c(c1)ncc(=O)[nH]2\\",\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"Tautomer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_descriptors_workflow","description":"Submit a molecular descriptors calculation workflow using Rowan v2 API.\\n\\nCalculates a comprehensive set of molecular descriptors including:\\n- Physical properties (MW, logP, TPSA, etc.)\\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\\n- Topological indices\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic descriptor calculation\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CC(=O)Nc1ccc(O)cc1\\"\\n    )\\n    \\n    # For complex molecule\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)C\\",\\n        name=\\"Caffeine Descriptors\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"name":{"default":"Descriptors Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_scan_workflow","description":"Submit a potential energy surface scan workflow using Rowan v2 API.\\n\\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\\nor dihedrals) to map the potential energy surface.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    scan_settings: Dictionary specifying scan parameters\\n        Example: {\\n            \\"type\\": \\"dihedral\\",  # or \\"bond\\", \\"angle\\"\\n            \\"atoms\\": [0, 1, 2, 3],  # atom indices\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 10\\n        }\\n    calculation_engine: Computational engine (default: \\"omol25\\")\\n        Options: \\"omol25\\", \\"xtb\\", \\"psi4\\"\\n    calculation_method: Method for calculations (default: \\"uma_m_omol\\")\\n        Options depend on engine\\n    wavefront_propagation: Use wavefront optimization (default: True)\\n        Speeds up scans by using previous geometries as starting points\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Dihedral scan\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC(C)CC\\",\\n        scan_settings={\\n            \\"type\\": \\"dihedral\\",\\n            \\"atoms\\": [0, 1, 2, 3],\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 15\\n        }\\n    )\\n    \\n    # Bond scan with advanced method\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC\\",\\n        scan_settings={\\n            \\"type\\": \\"bond\\",\\n            \\"atoms\\": [0, 1],\\n            \\"start\\": 1.0,\\n            \\"stop\\": 2.5,\\n            \\"step\\": 0.1\\n        },\\n        calculation_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"scan_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Scan Settings"},"calculation_engine":{"default":"omol25","title":"Calculation Engine","type":"string"},"calculation_method":{"default":"uma_m_omol","title":"Calculation Method","type":"string"},"wavefront_propagation":{"default":true,"title":"Wavefront Propagation","type":"boolean"},"name":{"default":"Scan Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_irc_workflow","description":"Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\\n\\nArgs:\\n    initial_molecule: The initial molecule to perform the IRC calculation on.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    method: The computational method to use for the IRC calculation (default: \\"uma_m_omol\\")\\n        See list of available methods for options\\n    engine: The computational engine to use for the calculation (default: \\"omol25\\")\\n        See list of available engines\\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\\n    step_size: The step size to use for the IRC calculation (default: 0.05)\\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted IRC workflow\\n    \\nExample:\\n    # Basic IRC calculation\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"[CH3].[CH3]\\"},\\n        method=\\"gfn2_xtb\\",\\n        max_irc_steps=50\\n    )\\n    \\n    # IRC with specific method and engine\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"CC(O)=CC\\"},\\n        method=\\"r2scan_3c\\",\\n        engine=\\"psi4\\",\\n        step_size=0.03\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"method":{"default":"uma_m_omol","title":"Method","type":"string"},"engine":{"default":"omol25","title":"Engine","type":"string"},"preopt":{"default":true,"title":"Preopt","type":"boolean"},"step_size":{"default":0.05,"title":"Step Size","type":"number"},"max_irc_steps":{"default":30,"title":"Max Irc Steps","type":"integer"},"name":{"default":"IRC Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"type":"object"}},{"name":"submit_protein_cofolding_workflow","description":"Submits a protein cofolding workflow to the API.\\n\\nArgs:\\n    initial_protein_sequences: The sequences of the proteins to be cofolded\\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\\n    use_msa_server: Whether to use the MSA server for the computation\\n    use_potentials: Whether to use potentials for the computation\\n    name: The name of the workflow\\n    model: The model to use for the computation\\n    folder_uuid: The UUID of the folder to store the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Protein dimer cofolding\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\n            \\"MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK\\",\\n            \\"MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF\\"\\n        ]\\n    )\\n    \\n    # Protein-ligand complex\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\"MGSSHHHHHHSSGLVPRGSH\\"],\\n        initial_smiles_list=[\\"CC(=O)O\\", \\"CCO\\"],\\n        ligand_binding_affinity_index=0,\\n        use_msa_server=True\\n    )\\n","inputSchema":{"properties":{"initial_protein_sequences":{"items":{"type":"string"},"title":"Initial Protein Sequences","type":"array"},"initial_smiles_list":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Initial Smiles List"},"ligand_binding_affinity_index":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Ligand Binding Affinity Index"},"use_msa_server":{"default":true,"title":"Use Msa Server","type":"boolean"},"use_potentials":{"default":false,"title":"Use Potentials","type":"boolean"},"name":{"default":"Cofolding Workflow","title":"Name","type":"string"},"model":{"default":"boltz_2","title":"Model","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_protein_sequences"],"type":"object"}},{"name":"submit_docking_workflow","description":"Submits a Docking workflow to the API.\\n\\nArgs:\\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\\n    pocket: The pocket to dock into\\n    initial_molecule: The initial molecule to be docked.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    do_csearch: Whether to perform a conformational search on the ligand\\n    do_optimization: Whether to perform an optimization on the ligand\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic docking with protein UUID\\n    result = submit_docking_workflow(\\n        protein=\\"protein-uuid-123\\",\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CC(=O)Oc1ccccc1C(=O)O\\"}\\n    )\\n    \\n    # Docking with optimization disabled\\n    result = submit_docking_workflow(\\n        protein=protein_obj,\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CCO\\"},\\n        do_csearch=False,\\n        do_optimization=False\\n    )\\n","inputSchema":{"properties":{"protein":{"anyOf":[{"type":"string"},{}],"title":"Protein"},"pocket":{"title":"Pocket"},"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"do_csearch":{"default":true,"title":"Do Csearch","type":"boolean"},"do_optimization":{"default":true,"title":"Do Optimization","type":"boolean"},"name":{"default":"Docking Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["protein","pocket"],"type":"object"}},{"name":"workflow_fetch_latest","description":"Fetch the latest workflow data from the database.\\n\\nUpdates the workflow object with the most recent status and results.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to fetch\\n    in_place: Whether to update the workflow object in place (default: False)\\n    \\nReturns:\\n    Dictionary containing the updated workflow data including status and results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"in_place":{"default":false,"title":"In Place","type":"boolean"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_wait_for_result","description":"Wait for a workflow to complete and return the result.\\n\\nBlocks until the workflow completes, polling at specified intervals.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to wait for\\n    poll_interval: Time in seconds between status checks (default: 5)\\n    \\nReturns:\\n    Dictionary containing the completed workflow data including results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"poll_interval":{"default":5,"title":"Poll Interval","type":"integer"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_get_status","description":"Get the current status of a workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with status information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_stop","description":"Stop a running workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to stop\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete","description":"Delete a workflow.\\n\\nThis permanently removes the workflow and its results from the database.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to delete\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"retrieve_workflow","description":"Retrieve a workflow from the API.\\n\\nArgs:\\n    uuid: The UUID of the workflow to retrieve\\n    \\nReturns:\\n    Dictionary containing the complete workflow data\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"retrieve_calculation_molecules","description":"Retrieve a list of molecules from a calculation.\\n\\nArgs:\\n    uuid: The UUID of the calculation to retrieve molecules from\\n    \\nReturns:\\n    List of dictionaries representing the molecules in the calculation\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"list_workflows","description":"List workflows subject to the specified criteria.\\n\\nArgs:\\n    parent_uuid: The UUID of the parent folder\\n    name_contains: Substring to search for in workflow names\\n    public: Filter workflows by their public status\\n    starred: Filter workflows by their starred status\\n    status: Filter workflows by their status\\n    workflow_type: Filter workflows by their type\\n    page: The page number to retrieve (default: 0)\\n    size: The number of items per page (default: 10)\\n    \\nReturns:\\n    List of workflow dictionaries that match the search criteria\\n    \\nRaises:\\n    HTTPError: If the request to the API fails\\n","inputSchema":{"properties":{"parent_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Parent Uuid"},"name_contains":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name Contains"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"status":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Status"},"workflow_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Workflow Type"},"page":{"default":0,"title":"Page","type":"integer"},"size":{"default":10,"title":"Size","type":"integer"}},"type":"object"}},{"name":"workflow_update","description":"Update workflow details.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to update\\n    name: New name for the workflow (optional)\\n    notes: New notes for the workflow (optional)\\n    starred: Whether to star/unstar the workflow (optional)\\n    public: Whether to make the workflow public/private (optional)\\n    \\nReturns:\\n    Dictionary with updated workflow information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name"},"notes":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Notes"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_is_finished","description":"Check if a workflow is finished.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to check\\n    \\nReturns:\\n    Dictionary with workflow completion status\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete_data","description":"Delete workflow data while keeping the workflow record.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}}]}}\r\n\r\n'
2025-08-02 13:57:38,730 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:57:38,730 - mcp.server.sse - DEBUG - Parsed session ID: 55686284-859c-4203-9d93-d3bdd3693f32
2025-08-02 13:57:38,730 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"prompts/list","jsonrpc":"2.0","id":3}'
2025-08-02 13:57:38,730 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=3)
2025-08-02 13:57:38,730 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=3)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x109f93140>))
2025-08-02 13:57:38,731 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10a058b90>
2025-08-02 13:57:38,731 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 13:57:38,731 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListPromptsRequest
2025-08-02 13:57:38,731 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:57:38,731 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=3, result={'prompts': []})), metadata=None)
2025-08-02 13:57:38,731 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":3,"result":{"prompts":[]}}\r\n\r\n'
2025-08-02 13:57:52,230 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:57:52.230712+00:00\r\n\r\n'
2025-08-02 13:57:52,233 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:57:52.233713+00:00\r\n\r\n'
2025-08-02 13:57:53,707 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:57:53.707635+00:00\r\n\r\n'
2025-08-02 13:58:07,234 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:58:07.234216+00:00\r\n\r\n'
2025-08-02 13:58:07,235 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:58:07.235192+00:00\r\n\r\n'
2025-08-02 13:58:08,710 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:58:08.710367+00:00\r\n\r\n'
2025-08-02 13:58:22,237 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:58:22.236819+00:00\r\n\r\n'
2025-08-02 13:58:22,238 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:58:22.238015+00:00\r\n\r\n'
2025-08-02 13:58:23,714 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:58:23.713833+00:00\r\n\r\n'
2025-08-02 13:58:37,239 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:58:37.238981+00:00\r\n\r\n'
2025-08-02 13:58:37,240 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:58:37.240363+00:00\r\n\r\n'
2025-08-02 13:58:38,716 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:58:38.716552+00:00\r\n\r\n'
2025-08-02 13:58:38,778 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:58:38,778 - mcp.server.sse - DEBUG - Parsed session ID: 55686284-859c-4203-9d93-d3bdd3693f32
2025-08-02 13:58:38,778 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/call","params":{"name":"submit_basic_calculation_workflow","arguments":{"initial_molecule":"{\\n  \\"cell\\": null,\\n  \\"atoms\\": [\\n    {\\n      \\"position\\": [-1.57731622, 0.46259034, 0.02288227],\\n      \\"atomic_number\\": 6\\n    },\\n    {\\n      \\"position\\": [-0.55246934, -0.31349805, -0.78986664],\\n      \\"atomic_number\\": 6\\n    },\\n    {\\n      \\"position\\": [0.65178196, -0.77563238, 0.03104792],\\n      \\"atomic_number\\": 6\\n    },\\n    {\\n      \\"position\\": [1.5013315, 0.37070813, 0.55769072],\\n      \\"atomic_number\\": 6\\n    },\\n    {\\n      \\"position\\": [-1.17009891, 1.41344062, 0.37886292],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [-1.91277475, -0.11690438, 0.88874548],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [-2.45332233, 0.68757176, -0.59399069],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [-0.21575239, 0.30052639, -1.63326648],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [-1.04230601, -1.19688302, -1.21658189],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [0.31558706, -1.39539838, 0.87044712],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [1.28031633, -1.41330121, -0.60197473],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [2.39258685, -0.02154188, 1.05803044],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [0.95227634, 0.97534316, 1.28543953],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [1.83015992, 1.0229789, -0.25746596],\\n      \\"atomic_number\\": 1\\n    }\\n  ],\\n  \\"charge\\": 0,\\n  \\"dipole\\": null,\\n  \\"energy\\": null,\\n  \\"smiles\\": \\"CCCC\\",\\n  \\"stress\\": null,\\n  \\"elapsed\\": null,\\n  \\"gradient\\": null,\\n  \\"velocities\\": null,\\n  \\"multiplicity\\": 1,\\n  \\"homo_lumo_gap\\": null,\\n  \\"scf_completed\\": null,\\n  \\"scf_iterations\\": null,\\n  \\"mulliken_charges\\": null,\\n  \\"calculation_index\\": null,\\n  \\"vibrational_modes\\": null,\\n  \\"zero_point_energy\\": null,\\n  \\"thermal_energy_corr\\": null,\\n  \\"thermal_enthalpy_corr\\": null,\\n  \\"mulliken_spin_densities\\": null,\\n  \\"thermal_free_energy_corr\\": null\\n}","engine":"xtb","method":"gfn2_xtb","mode":"rapid","name":"Basic Calculation Workflow - Butane"},"_meta":{"progressToken":4}},"jsonrpc":"2.0","id":4}'
2025-08-02 13:58:38,779 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': '{\n  "cell": null,\n  "atoms": [\n    {\n      "position": [-1.57731622, 0.46259034, 0.02288227],\n      "atomic_number": 6\n    },\n    {\n      "position": [-0.55246934, -0.31349805, -0.78986664],\n      "atomic_number": 6\n    },\n    {\n      "position": [0.65178196, -0.77563238, 0.03104792],\n      "atomic_number": 6\n    },\n    {\n      "position": [1.5013315, 0.37070813, 0.55769072],\n      "atomic_number": 6\n    },\n    {\n      "position": [-1.17009891, 1.41344062, 0.37886292],\n      "atomic_number": 1\n    },\n    {\n      "position": [-1.91277475, -0.11690438, 0.88874548],\n      "atomic_number": 1\n    },\n    {\n      "position": [-2.45332233, 0.68757176, -0.59399069],\n      "atomic_number": 1\n    },\n    {\n      "position": [-0.21575239, 0.30052639, -1.63326648],\n      "atomic_number": 1\n    },\n    {\n      "position": [-1.04230601, -1.19688302, -1.21658189],\n      "atomic_number": 1\n    },\n    {\n      "position": [0.31558706, -1.39539838, 0.87044712],\n      "atomic_number": 1\n    },\n    {\n      "position": [1.28031633, -1.41330121, -0.60197473],\n      "atomic_number": 1\n    },\n    {\n      "position": [2.39258685, -0.02154188, 1.05803044],\n      "atomic_number": 1\n    },\n    {\n      "position": [0.95227634, 0.97534316, 1.28543953],\n      "atomic_number": 1\n    },\n    {\n      "position": [1.83015992, 1.0229789, -0.25746596],\n      "atomic_number": 1\n    }\n  ],\n  "charge": 0,\n  "dipole": null,\n  "energy": null,\n  "smiles": "CCCC",\n  "stress": null,\n  "elapsed": null,\n  "gradient": null,\n  "velocities": null,\n  "multiplicity": 1,\n  "homo_lumo_gap": null,\n  "scf_completed": null,\n  "scf_iterations": null,\n  "mulliken_charges": null,\n  "calculation_index": null,\n  "vibrational_modes": null,\n  "zero_point_energy": null,\n  "thermal_energy_corr": null,\n  "thermal_enthalpy_corr": null,\n  "mulliken_spin_densities": null,\n  "thermal_free_energy_corr": null\n}', 'engine': 'xtb', 'method': 'gfn2_xtb', 'mode': 'rapid', 'name': 'Basic Calculation Workflow - Butane'}, '_meta': {'progressToken': 4}}, jsonrpc='2.0', id=4)
2025-08-02 13:58:38,779 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': '{\n  "cell": null,\n  "atoms": [\n    {\n      "position": [-1.57731622, 0.46259034, 0.02288227],\n      "atomic_number": 6\n    },\n    {\n      "position": [-0.55246934, -0.31349805, -0.78986664],\n      "atomic_number": 6\n    },\n    {\n      "position": [0.65178196, -0.77563238, 0.03104792],\n      "atomic_number": 6\n    },\n    {\n      "position": [1.5013315, 0.37070813, 0.55769072],\n      "atomic_number": 6\n    },\n    {\n      "position": [-1.17009891, 1.41344062, 0.37886292],\n      "atomic_number": 1\n    },\n    {\n      "position": [-1.91277475, -0.11690438, 0.88874548],\n      "atomic_number": 1\n    },\n    {\n      "position": [-2.45332233, 0.68757176, -0.59399069],\n      "atomic_number": 1\n    },\n    {\n      "position": [-0.21575239, 0.30052639, -1.63326648],\n      "atomic_number": 1\n    },\n    {\n      "position": [-1.04230601, -1.19688302, -1.21658189],\n      "atomic_number": 1\n    },\n    {\n      "position": [0.31558706, -1.39539838, 0.87044712],\n      "atomic_number": 1\n    },\n    {\n      "position": [1.28031633, -1.41330121, -0.60197473],\n      "atomic_number": 1\n    },\n    {\n      "position": [2.39258685, -0.02154188, 1.05803044],\n      "atomic_number": 1\n    },\n    {\n      "position": [0.95227634, 0.97534316, 1.28543953],\n      "atomic_number": 1\n    },\n    {\n      "position": [1.83015992, 1.0229789, -0.25746596],\n      "atomic_number": 1\n    }\n  ],\n  "charge": 0,\n  "dipole": null,\n  "energy": null,\n  "smiles": "CCCC",\n  "stress": null,\n  "elapsed": null,\n  "gradient": null,\n  "velocities": null,\n  "multiplicity": 1,\n  "homo_lumo_gap": null,\n  "scf_completed": null,\n  "scf_iterations": null,\n  "mulliken_charges": null,\n  "calculation_index": null,\n  "vibrational_modes": null,\n  "zero_point_energy": null,\n  "thermal_energy_corr": null,\n  "thermal_enthalpy_corr": null,\n  "mulliken_spin_densities": null,\n  "thermal_free_energy_corr": null\n}', 'engine': 'xtb', 'method': 'gfn2_xtb', 'mode': 'rapid', 'name': 'Basic Calculation Workflow - Butane'}, '_meta': {'progressToken': 4}}, jsonrpc='2.0', id=4)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x109f92de0>))
2025-08-02 13:58:38,780 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x109f82ad0>
2025-08-02 13:58:38,780 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 13:58:38,780 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type CallToolRequest
2025-08-02 13:58:38,782 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 13:58:38,782 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 13:58:38,782 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2_xtb (type: <class 'str'>)
2025-08-02 13:58:38,782 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: None (type: <class 'NoneType'>)
2025-08-02 13:58:38,782 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: rapid
2025-08-02 13:58:38,782 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 13:58:38,782 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Basic Calculation Workflow - Butane
2025-08-02 13:58:38,782 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: '{
  "cell": null,
  "atoms": [
    {
      "position": [-1.57731622, 0.46259034, 0.02288227],
      "atomic_number": 6
    },
    {
      "position": [-0.55246934, -0.31349805, -0.78986664],
      "atomic_number": 6
    },
    {
      "position": [0.65178196, -0.77563238, 0.03104792],
      "atomic_number": 6
    },
    {
      "position": [1.5013315, 0.37070813, 0.55769072],
      "atomic_number": 6
    },
    {
      "position": [-1.17009891, 1.41344062, 0.37886292],
      "atomic_number": 1
    },
    {
      "position": [-1.91277475, -0.11690438, 0.88874548],
      "atomic_number": 1
    },
    {
      "position": [-2.45332233, 0.68757176, -0.59399069],
      "atomic_number": 1
    },
    {
      "position": [-0.21575239, 0.30052639, -1.63326648],
      "atomic_number": 1
    },
    {
      "position": [-1.04230601, -1.19688302, -1.21658189],
      "atomic_number": 1
    },
    {
      "position": [0.31558706, -1.39539838, 0.87044712],
      "atomic_number": 1
    },
    {
      "position": [1.28031633, -1.41330121, -0.60197473],
      "atomic_number": 1
    },
    {
      "position": [2.39258685, -0.02154188, 1.05803044],
      "atomic_number": 1
    },
    {
      "position": [0.95227634, 0.97534316, 1.28543953],
      "atomic_number": 1
    },
    {
      "position": [1.83015992, 1.0229789, -0.25746596],
      "atomic_number": 1
    }
  ],
  "charge": 0,
  "dipole": null,
  "energy": null,
  "smiles": "CCCC",
  "stress": null,
  "elapsed": null,
  "gradient": null,
  "velocities": null,
  "multiplicity": 1,
  "homo_lumo_gap": null,
  "scf_completed": null,
  "scf_iterations": null,
  "mulliken_charges": null,
  "calculation_index": null,
  "vibrational_modes": null,
  "zero_point_energy": null,
  "thermal_energy_corr": null,
  "thermal_enthalpy_corr": null,
  "mulliken_spin_densities": null,
  "thermal_free_energy_corr": null
}' (SMILES string)
2025-08-02 13:58:38,782 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 13:58:38,783 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Could not convert to StJamesMolecule: , passing string directly
2025-08-02 13:58:38,783 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 13:58:38,815 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 13:58:38,913 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a0cd160>
2025-08-02 13:58:38,913 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10a081be0> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 13:58:39,038 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a09c910>
2025-08-02 13:58:39,039 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 13:58:39,039 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 13:58:39,039 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 13:58:39,040 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 13:58:39,040 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 13:58:39,461 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 500, b'Internal Server Error', [(b'Date', b'Sat, 02 Aug 2025 20:58:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'57'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 13:58:39,462 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-02 13:58:39,462 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 13:58:39,462 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 13:58:39,462 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 13:58:39,462 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 13:58:39,463 - httpcore.connection - DEBUG - close.started
2025-08-02 13:58:39,463 - httpcore.connection - DEBUG - close.complete
2025-08-02 13:58:39,463 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - ERROR - ERROR in submit_basic_calculation_workflow: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-02 13:58:39,463 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - ERROR - Error type: HTTPStatusError
2025-08-02 13:58:39,467 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - ERROR - Traceback:
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_basic_calculation_workflow.py", line 136, in submit_basic_calculation_workflow
    result = rowan.submit_basic_calculation_workflow(
        initial_molecule=initial_molecule,
    ...<6 lines>...
        max_credits=max_credits
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 410, in submit_basic_calculation_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500

2025-08-02 13:58:39,467 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_basic_calculation_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_basic_calculation_workflow.py", line 136, in submit_basic_calculation_workflow
    result = rowan.submit_basic_calculation_workflow(
        initial_molecule=initial_molecule,
    ...<6 lines>...
        max_credits=max_credits
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 410, in submit_basic_calculation_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-02 13:58:39,580 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:58:39,581 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=4, result={'content': [{'type': 'text', 'text': "Error calling tool 'submit_basic_calculation_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500"}], 'isError': True})), metadata=None)
2025-08-02 13:58:39,581 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":4,"result":{"content":[{"type":"text","text":"Error calling tool \'submit_basic_calculation_workflow\': Server error \'500 Internal Server Error\' for url \'https://api.rowansci.com/workflow\'\\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500"}],"isError":true}}\r\n\r\n'
2025-08-02 13:58:52,241 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:58:52.240956+00:00\r\n\r\n'
2025-08-02 13:58:52,241 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:58:52.241275+00:00\r\n\r\n'
2025-08-02 13:58:53,718 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:58:53.718477+00:00\r\n\r\n'
2025-08-02 13:59:07,242 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:59:07.242662+00:00\r\n\r\n'
2025-08-02 13:59:07,243 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:59:07.243791+00:00\r\n\r\n'
2025-08-02 13:59:08,720 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:59:08.719990+00:00\r\n\r\n'
2025-08-02 13:59:12,245 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 13:59:12,245 - mcp.server.sse - DEBUG - Parsed session ID: 55686284-859c-4203-9d93-d3bdd3693f32
2025-08-02 13:59:12,245 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/call","params":{"name":"submit_basic_calculation_workflow","arguments":{"initial_molecule":"CCCC","engine":"xtb","method":"gfn2_xtb","mode":"auto","name":"Basic Calculation Workflow from data.json"},"_meta":{"progressToken":5}},"jsonrpc":"2.0","id":5}'
2025-08-02 13:59:12,246 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'engine': 'xtb', 'method': 'gfn2_xtb', 'mode': 'auto', 'name': 'Basic Calculation Workflow from data.json'}, '_meta': {'progressToken': 5}}, jsonrpc='2.0', id=5)
2025-08-02 13:59:12,246 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'engine': 'xtb', 'method': 'gfn2_xtb', 'mode': 'auto', 'name': 'Basic Calculation Workflow from data.json'}, '_meta': {'progressToken': 5}}, jsonrpc='2.0', id=5)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a1055b0>))
2025-08-02 13:59:12,246 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x109f83ce0>
2025-08-02 13:59:12,246 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 13:59:12,247 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type CallToolRequest
2025-08-02 13:59:12,247 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 13:59:12,247 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 13:59:12,247 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2_xtb (type: <class 'str'>)
2025-08-02 13:59:12,247 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: None (type: <class 'NoneType'>)
2025-08-02 13:59:12,247 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: auto
2025-08-02 13:59:12,247 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 13:59:12,247 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Basic Calculation Workflow from data.json
2025-08-02 13:59:12,247 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: 'CCCC' (SMILES string)
2025-08-02 13:59:12,247 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 13:59:12,274 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully converted to StJamesMolecule
2025-08-02 13:59:12,274 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 13:59:12,281 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 13:59:12,390 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a09ee90>
2025-08-02 13:59:12,391 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x109f931d0> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 13:59:12,512 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a007490>
2025-08-02 13:59:12,512 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 13:59:12,512 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 13:59:12,512 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 13:59:12,512 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 13:59:12,512 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 13:59:13,092 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 20:59:13 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2093'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 13:59:13,092 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 13:59:13,092 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 13:59:13,092 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 13:59:13,092 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 13:59:13,092 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 13:59:13,092 - httpcore.connection - DEBUG - close.started
2025-08-02 13:59:13,093 - httpcore.connection - DEBUG - close.complete
2025-08-02 13:59:13,094 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: 5382d684-0e7f-4994-b613-6198c96bb592
2025-08-02 13:59:13,094 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 13:59:13,094 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=5, result={'content': [{'type': 'text', 'text': '{\n  "name": "Basic Calculation Workflow from data.json",\n  "uuid": "5382d684-0e7f-4994-b613-6198c96bb592",\n  "created_at": "2025-08-02T20:59:12.675017Z",\n  "updated_at": null,\n  "started_at": null,\n  "completed_at": null,\n  "object_status": 0,\n  "parent_uuid": "e5c3ce65-43df-4ab3-90e0-a56f42584cc0",\n  "notes": "",\n  "starred": false,\n  "public": false,\n  "object_type": "basic_calculation",\n  "object_data": {\n    "settings": {\n      "method": "GFN2_XTB",\n      "tasks": [\n        "optimize"\n      ],\n      "mode": "auto"\n    },\n    "engine": "xtb",\n    "initial_molecule": {\n      "charge": 0,\n      "multiplicity": 1,\n      "atoms": [\n        {\n          "atomic_number": 6,\n          "position": [\n            -1.57731622,\n            0.46259034,\n            0.02288227\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            -0.55246934,\n            -0.31349805,\n            -0.78986664\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            0.65178196,\n            -0.77563238,\n            0.03104792\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            1.5013315,\n            0.37070813,\n            0.55769072\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.17009891,\n            1.41344062,\n            0.37886292\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.91277475,\n            -0.11690438,\n            0.88874548\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -2.45332233,\n            0.68757176,\n            -0.59399069\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -0.21575239,\n            0.30052639,\n            -1.63326648\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.04230601,\n            -1.19688302,\n            -1.21658189\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            0.31558706,\n            -1.39539838,\n            0.87044712\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            1.28031633,\n            -1.41330121,\n            -0.60197473\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            2.39258685,\n            -0.02154188,\n            1.05803044\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            0.95227634,\n            0.97534316,\n            1.28543953\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            1.83015992,\n            1.0229789,\n            -0.25746596\n          ]\n        }\n      ],\n      "cell": null,\n      "energy": null,\n      "scf_iterations": null,\n      "scf_completed": null,\n      "elapsed": null,\n      "homo_lumo_gap": null,\n      "gradient": null,\n      "stress": null,\n      "velocities": null,\n      "mulliken_charges": null,\n      "mulliken_spin_densities": null,\n      "dipole": null,\n      "vibrational_modes": null,\n      "zero_point_energy": null,\n      "thermal_energy_corr": null,\n      "thermal_enthalpy_corr": null,\n      "thermal_free_energy_corr": null,\n      "smiles": "CCCC",\n      "calculation_index": null\n    }\n  },\n  "email_when_complete": false,\n  "max_credits": null,\n  "elapsed": 0.0,\n  "credits_charged": 0.0\n}'}], 'isError': False})), metadata=None)
2025-08-02 13:59:13,094 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":5,"result":{"content":[{"type":"text","text":"{\\n  \\"name\\": \\"Basic Calculation Workflow from data.json\\",\\n  \\"uuid\\": \\"5382d684-0e7f-4994-b613-6198c96bb592\\",\\n  \\"created_at\\": \\"2025-08-02T20:59:12.675017Z\\",\\n  \\"updated_at\\": null,\\n  \\"started_at\\": null,\\n  \\"completed_at\\": null,\\n  \\"object_status\\": 0,\\n  \\"parent_uuid\\": \\"e5c3ce65-43df-4ab3-90e0-a56f42584cc0\\",\\n  \\"notes\\": \\"\\",\\n  \\"starred\\": false,\\n  \\"public\\": false,\\n  \\"object_type\\": \\"basic_calculation\\",\\n  \\"object_data\\": {\\n    \\"settings\\": {\\n      \\"method\\": \\"GFN2_XTB\\",\\n      \\"tasks\\": [\\n        \\"optimize\\"\\n      ],\\n      \\"mode\\": \\"auto\\"\\n    },\\n    \\"engine\\": \\"xtb\\",\\n    \\"initial_molecule\\": {\\n      \\"charge\\": 0,\\n      \\"multiplicity\\": 1,\\n      \\"atoms\\": [\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -1.57731622,\\n            0.46259034,\\n            0.02288227\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -0.55246934,\\n            -0.31349805,\\n            -0.78986664\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            0.65178196,\\n            -0.77563238,\\n            0.03104792\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            1.5013315,\\n            0.37070813,\\n            0.55769072\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.17009891,\\n            1.41344062,\\n            0.37886292\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.91277475,\\n            -0.11690438,\\n            0.88874548\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -2.45332233,\\n            0.68757176,\\n            -0.59399069\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -0.21575239,\\n            0.30052639,\\n            -1.63326648\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.04230601,\\n            -1.19688302,\\n            -1.21658189\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            0.31558706,\\n            -1.39539838,\\n            0.87044712\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            1.28031633,\\n            -1.41330121,\\n            -0.60197473\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            2.39258685,\\n            -0.02154188,\\n            1.05803044\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            0.95227634,\\n            0.97534316,\\n            1.28543953\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            1.83015992,\\n            1.0229789,\\n            -0.25746596\\n          ]\\n        }\\n      ],\\n      \\"cell\\": null,\\n      \\"energy\\": null,\\n      \\"scf_iterations\\": null,\\n      \\"scf_completed\\": null,\\n      \\"elapsed\\": null,\\n      \\"homo_lumo_gap\\": null,\\n      \\"gradient\\": null,\\n      \\"stress\\": null,\\n      \\"velocities\\": null,\\n      \\"mulliken_charges\\": null,\\n      \\"mulliken_spin_densities\\": null,\\n      \\"dipole\\": null,\\n      \\"vibrational_modes\\": null,\\n      \\"zero_point_energy\\": null,\\n      \\"thermal_energy_corr\\": null,\\n      \\"thermal_enthalpy_corr\\": null,\\n      \\"thermal_free_energy_corr\\": null,\\n      \\"smiles\\": \\"CCCC\\",\\n      \\"calculation_index\\": null\\n    }\\n  },\\n  \\"email_when_complete\\": false,\\n  \\"max_credits\\": null,\\n  \\"elapsed\\": 0.0,\\n  \\"credits_charged\\": 0.0\\n}"}],"isError":false}}\r\n\r\n'
2025-08-02 13:59:22,245 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:59:22.245231+00:00\r\n\r\n'
2025-08-02 13:59:22,245 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:59:22.245868+00:00\r\n\r\n'
2025-08-02 13:59:23,726 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:59:23.726383+00:00\r\n\r\n'
2025-08-02 13:59:37,251 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:59:37.251273+00:00\r\n\r\n'
2025-08-02 13:59:37,252 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:59:37.252825+00:00\r\n\r\n'
2025-08-02 13:59:38,732 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:59:38.732050+00:00\r\n\r\n'
2025-08-02 13:59:52,254 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:59:52.254572+00:00\r\n\r\n'
2025-08-02 13:59:52,255 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:59:52.255007+00:00\r\n\r\n'
2025-08-02 13:59:53,734 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 20:59:53.734876+00:00\r\n\r\n'
2025-08-02 14:00:07,258 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:00:07.258451+00:00\r\n\r\n'
2025-08-02 14:00:07,260 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:00:07.260050+00:00\r\n\r\n'
2025-08-02 14:00:08,736 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:00:08.736533+00:00\r\n\r\n'
2025-08-02 14:00:22,261 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:00:22.261113+00:00\r\n\r\n'
2025-08-02 14:00:22,263 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:00:22.263694+00:00\r\n\r\n'
2025-08-02 14:00:23,738 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:00:23.738282+00:00\r\n\r\n'
2025-08-02 14:00:37,270 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:00:37.270473+00:00\r\n\r\n'
2025-08-02 14:00:37,271 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:00:37.271782+00:00\r\n\r\n'
2025-08-02 14:00:38,740 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:00:38.740025+00:00\r\n\r\n'
2025-08-02 14:00:52,272 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:00:52.272539+00:00\r\n\r\n'
2025-08-02 14:00:52,273 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:00:52.273616+00:00\r\n\r\n'
2025-08-02 14:00:53,744 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:00:53.743986+00:00\r\n\r\n'
2025-08-02 14:01:07,275 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:01:07.275235+00:00\r\n\r\n'
2025-08-02 14:01:07,275 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:01:07.275569+00:00\r\n\r\n'
2025-08-02 14:01:08,746 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:01:08.746712+00:00\r\n\r\n'
2025-08-02 14:01:22,277 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:01:22.277076+00:00\r\n\r\n'
2025-08-02 14:01:22,278 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:01:22.278187+00:00\r\n\r\n'
2025-08-02 14:01:23,748 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:01:23.748552+00:00\r\n\r\n'
2025-08-02 14:01:37,280 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:01:37.280262+00:00\r\n\r\n'
2025-08-02 14:01:37,283 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:01:37.283214+00:00\r\n\r\n'
2025-08-02 14:01:38,750 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:01:38.750534+00:00\r\n\r\n'
2025-08-02 14:01:52,284 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:01:52.284389+00:00\r\n\r\n'
2025-08-02 14:01:52,286 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:01:52.286112+00:00\r\n\r\n'
2025-08-02 14:01:53,753 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:01:53.753323+00:00\r\n\r\n'
2025-08-02 14:02:03,941 - sse_starlette.sse - DEBUG - Got event: http.disconnect. Stop streaming.
2025-08-02 14:02:03,948 - root - DEBUG - Client session disconnected 55686284-859c-4203-9d93-d3bdd3693f32
2025-08-02 14:02:07,287 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:02:07.287649+00:00\r\n\r\n'
2025-08-02 14:02:07,287 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:02:07.287880+00:00\r\n\r\n'
2025-08-02 14:02:08,326 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 14:02:08,326 - mcp.server.sse - DEBUG - Created new session with ID: 37b07b7d-1d3f-456c-ab05-64fa6e6fba6d
2025-08-02 14:02:08,326 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 14:02:08,326 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 14:02:08,328 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 14:02:08,328 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=37b07b7d1d3f456cab0564fa6e6fba6d
2025-08-02 14:02:08,328 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=37b07b7d1d3f456cab0564fa6e6fba6d\r\n\r\n'
2025-08-02 14:02:08,332 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:02:08,332 - mcp.server.sse - DEBUG - Parsed session ID: 37b07b7d-1d3f-456c-ab05-64fa6e6fba6d
2025-08-02 14:02:08,332 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"initialize","params":{"protocolVersion":"2025-06-18","capabilities":{"tools":true,"prompts":true,"resources":false,"logging":false,"roots":{"listChanged":false}},"clientInfo":{"name":"cursor-vscode","version":"1.0.0"}},"jsonrpc":"2.0","id":1}'
2025-08-02 14:02:08,332 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'tools': True, 'prompts': True, 'resources': False, 'logging': False, 'roots': {'listChanged': False}}, 'clientInfo': {'name': 'cursor-vscode', 'version': '1.0.0'}}, jsonrpc='2.0', id=1)
2025-08-02 14:02:08,332 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'tools': True, 'prompts': True, 'resources': False, 'logging': False, 'roots': {'listChanged': False}}, 'clientInfo': {'name': 'cursor-vscode', 'version': '1.0.0'}}, jsonrpc='2.0', id=1)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a105ac0>))
2025-08-02 14:02:08,332 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=1, result={'protocolVersion': '2025-03-26', 'capabilities': {'experimental': {}, 'prompts': {'listChanged': False}, 'resources': {'subscribe': False, 'listChanged': False}, 'tools': {'listChanged': False}}, 'serverInfo': {'name': 'Rowan MCP Server', 'version': '1.9.3'}})), metadata=None)
2025-08-02 14:02:08,333 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":1,"result":{"protocolVersion":"2025-03-26","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"Rowan MCP Server","version":"1.9.3"}}}\r\n\r\n'
2025-08-02 14:02:08,336 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:02:08,336 - mcp.server.sse - DEBUG - Parsed session ID: 37b07b7d-1d3f-456c-ab05-64fa6e6fba6d
2025-08-02 14:02:08,336 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"notifications/initialized","jsonrpc":"2.0"}'
2025-08-02 14:02:08,336 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 14:02:08,337 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a105d00>))
2025-08-02 14:02:08,337 - mcp.server.lowlevel.server - DEBUG - Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 14:02:08,340 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:02:08,340 - mcp.server.sse - DEBUG - Parsed session ID: 37b07b7d-1d3f-456c-ab05-64fa6e6fba6d
2025-08-02 14:02:08,340 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/list","jsonrpc":"2.0","id":2}'
2025-08-02 14:02:08,340 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=2)
2025-08-02 14:02:08,340 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=2)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a105eb0>))
2025-08-02 14:02:08,341 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:02:08,341 - mcp.server.sse - DEBUG - Parsed session ID: 37b07b7d-1d3f-456c-ab05-64fa6e6fba6d
2025-08-02 14:02:08,341 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/list","jsonrpc":"2.0","id":3}'
2025-08-02 14:02:08,341 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=3)
2025-08-02 14:02:08,341 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=3)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a105d00>))
2025-08-02 14:02:08,341 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10a0a6f50>
2025-08-02 14:02:08,342 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 14:02:08,342 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListToolsRequest
2025-08-02 14:02:08,342 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:02:08,342 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10a0285f0>
2025-08-02 14:02:08,343 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=2, result={'tools': [{'name': 'submit_basic_calculation_workflow', 'description': 'Submit a basic calculation workflow using Rowan v2 API.\n\nPerforms fundamental quantum chemistry calculations with configurable methods\nand computational tasks. Returns a workflow object for tracking progress.\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'type': 'string'}, {'additionalProperties': True, 'type': 'object'}, {}], 'description': 'The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object', 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'description': "The method to use for the calculation (e.g., 'uma_m_omol', 'gfn2-xtb', 'r2scan_3c')", 'title': 'Method', 'type': 'string'}, 'tasks': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'description': "List of computational tasks to perform. Optional[List[str]] (e.g. ['optimize']), Defaults to None", 'title': 'Tasks'}, 'mode': {'default': 'auto', 'description': "The mode to run the calculation in ('auto', 'rapid', 'careful', 'meticulous')", 'title': 'Mode', 'type': 'string'}, 'engine': {'default': 'omol25', 'description': "The computational engine to use ('omol25', 'xtb', 'psi4')", 'title': 'Engine', 'type': 'string'}, 'name': {'default': 'Basic Calculation Workflow', 'description': 'The name of the workflow for identification', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'UUID of the folder to place the workflow in (optional)', 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'description': 'Maximum number of credits to use for the workflow (optional)', 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_conformer_search_workflow', 'description': 'Submit a conformer search workflow using Rowan v2 API.\n\nExplores the conformational space of a molecule to find low-energy structures.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    conf_gen_mode: default to "rapid"\n        Options: "rapid", "careful", "meticulous"\n    final_method: default: "aimnet2_wb97md3"\n        Try other options, if user specifies\n    solvent: Optional solvent for implicit solvation (e.g., "water", "ethanol")\n    transition_state: Whether searching for transition state conformers (default: False)\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic conformer search\n    result = submit_conformer_search_workflow(\n        initial_molecule="CCCC",\n        conf_gen_mode="rapid"\n    )\n    \n    # Careful search with solvent\n    result = submit_conformer_search_workflow(\n        initial_molecule="CC(C)CC(=O)O",\n        conf_gen_mode="careful",\n        solvent="water",\n        final_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'conf_gen_mode': {'default': 'rapid', 'title': 'Conf Gen Mode', 'type': 'string'}, 'final_method': {'default': 'aimnet2_wb97md3', 'title': 'Final Method', 'type': 'string'}, 'solvent': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Solvent'}, 'transition_state': {'default': False, 'title': 'Transition State', 'type': 'boolean'}, 'name': {'default': 'Conformer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_solubility_workflow', 'description': 'Submit a solubility prediction workflow using Rowan v2 API.\n\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\nusing machine learning models.\n\nArgs:\n    initial_smiles: SMILES string of the molecule\n    solvents: List of solvents as SMILES or common names (e.g., ["water", "ethanol"])\n        If None, uses default solvents\n    temperatures: List of temperatures in Kelvin\n        If None, uses default temperature range\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic solubility prediction\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)Nc1ccc(O)cc1",\n        solvents=["water", "ethanol"],\n        temperatures=[298.15, 310.15]\n    )\n    \n    # With SMILES solvents\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)O",\n        solvents=["O", "CCO", "CCCCCC"],\n        temperatures=[273.15, 298.15, 323.15]\n    )\n', 'inputSchema': {'properties': {'initial_smiles': {'title': 'Initial Smiles', 'type': 'string'}, 'solvents': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Solvents'}, 'temperatures': {'anyOf': [{'items': {'type': 'number'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Temperatures'}, 'name': {'default': 'Solubility Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_smiles'], 'type': 'object'}}, {'name': 'submit_pka_workflow', 'description': 'Submit a pKa prediction workflow using Rowan v2 API.\n\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\nusing quantum chemistry calculations.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\n    deprotonate_elements: List of elements to consider for deprotonation\n        (e.g., ["N", "O", "S"]). If None, uses defaults\n    protonate_elements: List of elements to consider for protonation\n        (e.g., ["N", "O"]). If None, uses defaults\n    mode: Calculation mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic pKa prediction\n    result = submit_pka_workflow(\n        initial_molecule="CC(=O)O",\n        pka_range=(2, 8)\n    )\n    \n    # Specific elements with meticulous mode\n    result = submit_pka_workflow(\n        initial_molecule="NC(C)C(=O)O",\n        pka_range=(1, 14),\n        deprotonate_elements=["N", "O"],\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'pka_range': {'default': [2, 12], 'maxItems': 2, 'minItems': 2, 'prefixItems': [{'type': 'number'}, {'type': 'number'}], 'title': 'Pka Range', 'type': 'array'}, 'deprotonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Deprotonate Elements'}, 'protonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Protonate Elements'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'pKa Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_redox_potential_workflow', 'description': 'Submit a redox potential calculation workflow using Rowan v2 API.\n\nCalculates reduction and/or oxidation potentials for a molecule using\nquantum chemistry methods.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    reduction: Whether to calculate reduction potential (default: False)\n    oxidization: Whether to calculate oxidation potential (default: True)\n    mode: Calculation mode (default: "rapid")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic oxidation potential\n    result = submit_redox_potential_workflow(\n        initial_molecule="CC1=CC=CC=C1",\n        oxidization=True\n    )\n    \n    # Both reduction and oxidation with careful mode\n    result = submit_redox_potential_workflow(\n        initial_molecule="c1ccccc1",\n        reduction=True,\n        oxidization=True,\n        mode="careful"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'reduction': {'default': False, 'title': 'Reduction', 'type': 'boolean'}, 'oxidization': {'default': True, 'title': 'Oxidization', 'type': 'boolean'}, 'mode': {'default': 'rapid', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Redox Potential Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_fukui_workflow', 'description': 'Submit a Fukui indices calculation workflow using Rowan v2 API.\n\nCalculates Fukui indices to predict molecular reactivity at different sites.\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    optimization_method: Method for geometry optimization (default: "gfn2_xtb")\n        Common options: "gfn2_xtb", "r2scan_3c", "aimnet2_wb97md3"\n    fukui_method: Method for Fukui calculation (default: "gfn1_xtb")\n        Common options: "gfn1_xtb", "gfn2_xtb"\n    solvent_settings: Optional solvent configuration dictionary\n        Example: {"solvent": "water", "model": "alpb"}\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic Fukui indices\n    result = submit_fukui_workflow(\n        initial_molecule="CC(=O)O"\n    )\n    \n    # With solvent and advanced methods\n    result = submit_fukui_workflow(\n        initial_molecule="c1ccccc1N",\n        optimization_method="r2scan_3c",\n        fukui_method="gfn2_xtb",\n        solvent_settings={"solvent": "water", "model": "alpb"}\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'optimization_method': {'default': 'gfn2_xtb', 'title': 'Optimization Method', 'type': 'string'}, 'fukui_method': {'default': 'gfn1_xtb', 'title': 'Fukui Method', 'type': 'string'}, 'solvent_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Solvent Settings'}, 'name': {'default': 'Fukui Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_tautomer_search_workflow', 'description': 'Submit a tautomer search workflow using Rowan v2 API.\n\nSearches for different tautomeric forms of a molecule and evaluates their\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    mode: Search mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic tautomer search\n    result = submit_tautomer_search_workflow(\n        initial_molecule="CC(=O)CC(=O)C"\n    )\n    \n    # Meticulous search for complex molecule\n    result = submit_tautomer_search_workflow(\n        initial_molecule="c1ccc2c(c1)ncc(=O)[nH]2",\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Tautomer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_descriptors_workflow', 'description': 'Submit a molecular descriptors calculation workflow using Rowan v2 API.\n\nCalculates a comprehensive set of molecular descriptors including:\n- Physical properties (MW, logP, TPSA, etc.)\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\n- Topological indices\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic descriptor calculation\n    result = submit_descriptors_workflow(\n        initial_molecule="CC(=O)Nc1ccc(O)cc1"\n    )\n    \n    # For complex molecule\n    result = submit_descriptors_workflow(\n        initial_molecule="CN1C=NC2=C1C(=O)N(C(=O)N2C)C",\n        name="Caffeine Descriptors"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'name': {'default': 'Descriptors Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_scan_workflow', 'description': 'Submit a potential energy surface scan workflow using Rowan v2 API.\n\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\nor dihedrals) to map the potential energy surface.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    scan_settings: Dictionary specifying scan parameters\n        Example: {\n            "type": "dihedral",  # or "bond", "angle"\n            "atoms": [0, 1, 2, 3],  # atom indices\n            "start": -180,\n            "stop": 180,\n            "step": 10\n        }\n    calculation_engine: Computational engine (default: "omol25")\n        Options: "omol25", "xtb", "psi4"\n    calculation_method: Method for calculations (default: "uma_m_omol")\n        Options depend on engine\n    wavefront_propagation: Use wavefront optimization (default: True)\n        Speeds up scans by using previous geometries as starting points\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Dihedral scan\n    result = submit_scan_workflow(\n        initial_molecule="CC(C)CC",\n        scan_settings={\n            "type": "dihedral",\n            "atoms": [0, 1, 2, 3],\n            "start": -180,\n            "stop": 180,\n            "step": 15\n        }\n    )\n    \n    # Bond scan with advanced method\n    result = submit_scan_workflow(\n        initial_molecule="CC",\n        scan_settings={\n            "type": "bond",\n            "atoms": [0, 1],\n            "start": 1.0,\n            "stop": 2.5,\n            "step": 0.1\n        },\n        calculation_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'scan_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Scan Settings'}, 'calculation_engine': {'default': 'omol25', 'title': 'Calculation Engine', 'type': 'string'}, 'calculation_method': {'default': 'uma_m_omol', 'title': 'Calculation Method', 'type': 'string'}, 'wavefront_propagation': {'default': True, 'title': 'Wavefront Propagation', 'type': 'boolean'}, 'name': {'default': 'Scan Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_irc_workflow', 'description': 'Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\n\nArgs:\n    initial_molecule: The initial molecule to perform the IRC calculation on.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    method: The computational method to use for the IRC calculation (default: "uma_m_omol")\n        See list of available methods for options\n    engine: The computational engine to use for the calculation (default: "omol25")\n        See list of available engines\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\n    step_size: The step size to use for the IRC calculation (default: 0.05)\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted IRC workflow\n    \nExample:\n    # Basic IRC calculation\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "[CH3].[CH3]"},\n        method="gfn2_xtb",\n        max_irc_steps=50\n    )\n    \n    # IRC with specific method and engine\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "CC(O)=CC"},\n        method="r2scan_3c",\n        engine="psi4",\n        step_size=0.03\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'title': 'Method', 'type': 'string'}, 'engine': {'default': 'omol25', 'title': 'Engine', 'type': 'string'}, 'preopt': {'default': True, 'title': 'Preopt', 'type': 'boolean'}, 'step_size': {'default': 0.05, 'title': 'Step Size', 'type': 'number'}, 'max_irc_steps': {'default': 30, 'title': 'Max Irc Steps', 'type': 'integer'}, 'name': {'default': 'IRC Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'type': 'object'}}, {'name': 'submit_protein_cofolding_workflow', 'description': 'Submits a protein cofolding workflow to the API.\n\nArgs:\n    initial_protein_sequences: The sequences of the proteins to be cofolded\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\n    use_msa_server: Whether to use the MSA server for the computation\n    use_potentials: Whether to use potentials for the computation\n    name: The name of the workflow\n    model: The model to use for the computation\n    folder_uuid: The UUID of the folder to store the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Protein dimer cofolding\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=[\n            "MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK",\n            "MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF"\n        ]\n    )\n    \n    # Protein-ligand complex\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=["MGSSHHHHHHSSGLVPRGSH"],\n        initial_smiles_list=["CC(=O)O", "CCO"],\n        ligand_binding_affinity_index=0,\n        use_msa_server=True\n    )\n', 'inputSchema': {'properties': {'initial_protein_sequences': {'items': {'type': 'string'}, 'title': 'Initial Protein Sequences', 'type': 'array'}, 'initial_smiles_list': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Initial Smiles List'}, 'ligand_binding_affinity_index': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Ligand Binding Affinity Index'}, 'use_msa_server': {'default': True, 'title': 'Use Msa Server', 'type': 'boolean'}, 'use_potentials': {'default': False, 'title': 'Use Potentials', 'type': 'boolean'}, 'name': {'default': 'Cofolding Workflow', 'title': 'Name', 'type': 'string'}, 'model': {'default': 'boltz_2', 'title': 'Model', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_protein_sequences'], 'type': 'object'}}, {'name': 'submit_docking_workflow', 'description': 'Submits a Docking workflow to the API.\n\nArgs:\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\n    pocket: The pocket to dock into\n    initial_molecule: The initial molecule to be docked.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    do_csearch: Whether to perform a conformational search on the ligand\n    do_optimization: Whether to perform an optimization on the ligand\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic docking with protein UUID\n    result = submit_docking_workflow(\n        protein="protein-uuid-123",\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CC(=O)Oc1ccccc1C(=O)O"}\n    )\n    \n    # Docking with optimization disabled\n    result = submit_docking_workflow(\n        protein=protein_obj,\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CCO"},\n        do_csearch=False,\n        do_optimization=False\n    )\n', 'inputSchema': {'properties': {'protein': {'anyOf': [{'type': 'string'}, {}], 'title': 'Protein'}, 'pocket': {'title': 'Pocket'}, 'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'do_csearch': {'default': True, 'title': 'Do Csearch', 'type': 'boolean'}, 'do_optimization': {'default': True, 'title': 'Do Optimization', 'type': 'boolean'}, 'name': {'default': 'Docking Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['protein', 'pocket'], 'type': 'object'}}, {'name': 'workflow_fetch_latest', 'description': 'Fetch the latest workflow data from the database.\n\nUpdates the workflow object with the most recent status and results.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to fetch\n    in_place: Whether to update the workflow object in place (default: False)\n    \nReturns:\n    Dictionary containing the updated workflow data including status and results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'in_place': {'default': False, 'title': 'In Place', 'type': 'boolean'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_wait_for_result', 'description': 'Wait for a workflow to complete and return the result.\n\nBlocks until the workflow completes, polling at specified intervals.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to wait for\n    poll_interval: Time in seconds between status checks (default: 5)\n    \nReturns:\n    Dictionary containing the completed workflow data including results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'poll_interval': {'default': 5, 'title': 'Poll Interval', 'type': 'integer'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_get_status', 'description': 'Get the current status of a workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with status information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_stop', 'description': 'Stop a running workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to stop\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete', 'description': 'Delete a workflow.\n\nThis permanently removes the workflow and its results from the database.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to delete\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'retrieve_workflow', 'description': 'Retrieve a workflow from the API.\n\nArgs:\n    uuid: The UUID of the workflow to retrieve\n    \nReturns:\n    Dictionary containing the complete workflow data\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'retrieve_calculation_molecules', 'description': 'Retrieve a list of molecules from a calculation.\n\nArgs:\n    uuid: The UUID of the calculation to retrieve molecules from\n    \nReturns:\n    List of dictionaries representing the molecules in the calculation\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'list_workflows', 'description': 'List workflows subject to the specified criteria.\n\nArgs:\n    parent_uuid: The UUID of the parent folder\n    name_contains: Substring to search for in workflow names\n    public: Filter workflows by their public status\n    starred: Filter workflows by their starred status\n    status: Filter workflows by their status\n    workflow_type: Filter workflows by their type\n    page: The page number to retrieve (default: 0)\n    size: The number of items per page (default: 10)\n    \nReturns:\n    List of workflow dictionaries that match the search criteria\n    \nRaises:\n    HTTPError: If the request to the API fails\n', 'inputSchema': {'properties': {'parent_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Parent Uuid'}, 'name_contains': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name Contains'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'status': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Status'}, 'workflow_type': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Type'}, 'page': {'default': 0, 'title': 'Page', 'type': 'integer'}, 'size': {'default': 10, 'title': 'Size', 'type': 'integer'}}, 'type': 'object'}}, {'name': 'workflow_update', 'description': 'Update workflow details.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to update\n    name: New name for the workflow (optional)\n    notes: New notes for the workflow (optional)\n    starred: Whether to star/unstar the workflow (optional)\n    public: Whether to make the workflow public/private (optional)\n    \nReturns:\n    Dictionary with updated workflow information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name'}, 'notes': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Notes'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_is_finished', 'description': 'Check if a workflow is finished.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to check\n    \nReturns:\n    Dictionary with workflow completion status\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete_data', 'description': 'Delete workflow data while keeping the workflow record.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}]})), metadata=None)
2025-08-02 14:02:08,344 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 14:02:08,344 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListToolsRequest
2025-08-02 14:02:08,345 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":2,"result":{"tools":[{"name":"submit_basic_calculation_workflow","description":"Submit a basic calculation workflow using Rowan v2 API.\\n\\nPerforms fundamental quantum chemistry calculations with configurable methods\\nand computational tasks. Returns a workflow object for tracking progress.\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"type":"string"},{"additionalProperties":true,"type":"object"},{}],"description":"The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object","title":"Initial Molecule"},"method":{"default":"uma_m_omol","description":"The method to use for the calculation (e.g., \'uma_m_omol\', \'gfn2-xtb\', \'r2scan_3c\')","title":"Method","type":"string"},"tasks":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"description":"List of computational tasks to perform. Optional[List[str]] (e.g. [\'optimize\']), Defaults to None","title":"Tasks"},"mode":{"default":"auto","description":"The mode to run the calculation in (\'auto\', \'rapid\', \'careful\', \'meticulous\')","title":"Mode","type":"string"},"engine":{"default":"omol25","description":"The computational engine to use (\'omol25\', \'xtb\', \'psi4\')","title":"Engine","type":"string"},"name":{"default":"Basic Calculation Workflow","description":"The name of the workflow for identification","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"UUID of the folder to place the workflow in (optional)","title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"description":"Maximum number of credits to use for the workflow (optional)","title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_conformer_search_workflow","description":"Submit a conformer search workflow using Rowan v2 API.\\n\\nExplores the conformational space of a molecule to find low-energy structures.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    conf_gen_mode: default to \\"rapid\\"\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    final_method: default: \\"aimnet2_wb97md3\\"\\n        Try other options, if user specifies\\n    solvent: Optional solvent for implicit solvation (e.g., \\"water\\", \\"ethanol\\")\\n    transition_state: Whether searching for transition state conformers (default: False)\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic conformer search\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CCCC\\",\\n        conf_gen_mode=\\"rapid\\"\\n    )\\n    \\n    # Careful search with solvent\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CC(C)CC(=O)O\\",\\n        conf_gen_mode=\\"careful\\",\\n        solvent=\\"water\\",\\n        final_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"conf_gen_mode":{"default":"rapid","title":"Conf Gen Mode","type":"string"},"final_method":{"default":"aimnet2_wb97md3","title":"Final Method","type":"string"},"solvent":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Solvent"},"transition_state":{"default":false,"title":"Transition State","type":"boolean"},"name":{"default":"Conformer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_solubility_workflow","description":"Submit a solubility prediction workflow using Rowan v2 API.\\n\\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\\nusing machine learning models.\\n\\nArgs:\\n    initial_smiles: SMILES string of the molecule\\n    solvents: List of solvents as SMILES or common names (e.g., [\\"water\\", \\"ethanol\\"])\\n        If None, uses default solvents\\n    temperatures: List of temperatures in Kelvin\\n        If None, uses default temperature range\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic solubility prediction\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)Nc1ccc(O)cc1\\",\\n        solvents=[\\"water\\", \\"ethanol\\"],\\n        temperatures=[298.15, 310.15]\\n    )\\n    \\n    # With SMILES solvents\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)O\\",\\n        solvents=[\\"O\\", \\"CCO\\", \\"CCCCCC\\"],\\n        temperatures=[273.15, 298.15, 323.15]\\n    )\\n","inputSchema":{"properties":{"initial_smiles":{"title":"Initial Smiles","type":"string"},"solvents":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Solvents"},"temperatures":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"default":null,"title":"Temperatures"},"name":{"default":"Solubility Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_smiles"],"type":"object"}},{"name":"submit_pka_workflow","description":"Submit a pKa prediction workflow using Rowan v2 API.\\n\\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\\nusing quantum chemistry calculations.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\\n    deprotonate_elements: List of elements to consider for deprotonation\\n        (e.g., [\\"N\\", \\"O\\", \\"S\\"]). If None, uses defaults\\n    protonate_elements: List of elements to consider for protonation\\n        (e.g., [\\"N\\", \\"O\\"]). If None, uses defaults\\n    mode: Calculation mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic pKa prediction\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"CC(=O)O\\",\\n        pka_range=(2, 8)\\n    )\\n    \\n    # Specific elements with meticulous mode\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"NC(C)C(=O)O\\",\\n        pka_range=(1, 14),\\n        deprotonate_elements=[\\"N\\", \\"O\\"],\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"pka_range":{"default":[2,12],"maxItems":2,"minItems":2,"prefixItems":[{"type":"number"},{"type":"number"}],"title":"Pka Range","type":"array"},"deprotonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Deprotonate Elements"},"protonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Protonate Elements"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"pKa Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_redox_potential_workflow","description":"Submit a redox potential calculation workflow using Rowan v2 API.\\n\\nCalculates reduction and/or oxidation potentials for a molecule using\\nquantum chemistry methods.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    reduction: Whether to calculate reduction potential (default: False)\\n    oxidization: Whether to calculate oxidation potential (default: True)\\n    mode: Calculation mode (default: \\"rapid\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic oxidation potential\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"CC1=CC=CC=C1\\",\\n        oxidization=True\\n    )\\n    \\n    # Both reduction and oxidation with careful mode\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"c1ccccc1\\",\\n        reduction=True,\\n        oxidization=True,\\n        mode=\\"careful\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"reduction":{"default":false,"title":"Reduction","type":"boolean"},"oxidization":{"default":true,"title":"Oxidization","type":"boolean"},"mode":{"default":"rapid","title":"Mode","type":"string"},"name":{"default":"Redox Potential Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_fukui_workflow","description":"Submit a Fukui indices calculation workflow using Rowan v2 API.\\n\\nCalculates Fukui indices to predict molecular reactivity at different sites.\\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    optimization_method: Method for geometry optimization (default: \\"gfn2_xtb\\")\\n        Common options: \\"gfn2_xtb\\", \\"r2scan_3c\\", \\"aimnet2_wb97md3\\"\\n    fukui_method: Method for Fukui calculation (default: \\"gfn1_xtb\\")\\n        Common options: \\"gfn1_xtb\\", \\"gfn2_xtb\\"\\n    solvent_settings: Optional solvent configuration dictionary\\n        Example: {\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic Fukui indices\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"CC(=O)O\\"\\n    )\\n    \\n    # With solvent and advanced methods\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"c1ccccc1N\\",\\n        optimization_method=\\"r2scan_3c\\",\\n        fukui_method=\\"gfn2_xtb\\",\\n        solvent_settings={\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"optimization_method":{"default":"gfn2_xtb","title":"Optimization Method","type":"string"},"fukui_method":{"default":"gfn1_xtb","title":"Fukui Method","type":"string"},"solvent_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Solvent Settings"},"name":{"default":"Fukui Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_tautomer_search_workflow","description":"Submit a tautomer search workflow using Rowan v2 API.\\n\\nSearches for different tautomeric forms of a molecule and evaluates their\\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    mode: Search mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic tautomer search\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"CC(=O)CC(=O)C\\"\\n    )\\n    \\n    # Meticulous search for complex molecule\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"c1ccc2c(c1)ncc(=O)[nH]2\\",\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"Tautomer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_descriptors_workflow","description":"Submit a molecular descriptors calculation workflow using Rowan v2 API.\\n\\nCalculates a comprehensive set of molecular descriptors including:\\n- Physical properties (MW, logP, TPSA, etc.)\\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\\n- Topological indices\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic descriptor calculation\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CC(=O)Nc1ccc(O)cc1\\"\\n    )\\n    \\n    # For complex molecule\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)C\\",\\n        name=\\"Caffeine Descriptors\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"name":{"default":"Descriptors Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_scan_workflow","description":"Submit a potential energy surface scan workflow using Rowan v2 API.\\n\\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\\nor dihedrals) to map the potential energy surface.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    scan_settings: Dictionary specifying scan parameters\\n        Example: {\\n            \\"type\\": \\"dihedral\\",  # or \\"bond\\", \\"angle\\"\\n            \\"atoms\\": [0, 1, 2, 3],  # atom indices\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 10\\n        }\\n    calculation_engine: Computational engine (default: \\"omol25\\")\\n        Options: \\"omol25\\", \\"xtb\\", \\"psi4\\"\\n    calculation_method: Method for calculations (default: \\"uma_m_omol\\")\\n        Options depend on engine\\n    wavefront_propagation: Use wavefront optimization (default: True)\\n        Speeds up scans by using previous geometries as starting points\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Dihedral scan\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC(C)CC\\",\\n        scan_settings={\\n            \\"type\\": \\"dihedral\\",\\n            \\"atoms\\": [0, 1, 2, 3],\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 15\\n        }\\n    )\\n    \\n    # Bond scan with advanced method\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC\\",\\n        scan_settings={\\n            \\"type\\": \\"bond\\",\\n            \\"atoms\\": [0, 1],\\n            \\"start\\": 1.0,\\n            \\"stop\\": 2.5,\\n            \\"step\\": 0.1\\n        },\\n        calculation_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"scan_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Scan Settings"},"calculation_engine":{"default":"omol25","title":"Calculation Engine","type":"string"},"calculation_method":{"default":"uma_m_omol","title":"Calculation Method","type":"string"},"wavefront_propagation":{"default":true,"title":"Wavefront Propagation","type":"boolean"},"name":{"default":"Scan Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_irc_workflow","description":"Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\\n\\nArgs:\\n    initial_molecule: The initial molecule to perform the IRC calculation on.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    method: The computational method to use for the IRC calculation (default: \\"uma_m_omol\\")\\n        See list of available methods for options\\n    engine: The computational engine to use for the calculation (default: \\"omol25\\")\\n        See list of available engines\\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\\n    step_size: The step size to use for the IRC calculation (default: 0.05)\\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted IRC workflow\\n    \\nExample:\\n    # Basic IRC calculation\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"[CH3].[CH3]\\"},\\n        method=\\"gfn2_xtb\\",\\n        max_irc_steps=50\\n    )\\n    \\n    # IRC with specific method and engine\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"CC(O)=CC\\"},\\n        method=\\"r2scan_3c\\",\\n        engine=\\"psi4\\",\\n        step_size=0.03\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"method":{"default":"uma_m_omol","title":"Method","type":"string"},"engine":{"default":"omol25","title":"Engine","type":"string"},"preopt":{"default":true,"title":"Preopt","type":"boolean"},"step_size":{"default":0.05,"title":"Step Size","type":"number"},"max_irc_steps":{"default":30,"title":"Max Irc Steps","type":"integer"},"name":{"default":"IRC Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"type":"object"}},{"name":"submit_protein_cofolding_workflow","description":"Submits a protein cofolding workflow to the API.\\n\\nArgs:\\n    initial_protein_sequences: The sequences of the proteins to be cofolded\\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\\n    use_msa_server: Whether to use the MSA server for the computation\\n    use_potentials: Whether to use potentials for the computation\\n    name: The name of the workflow\\n    model: The model to use for the computation\\n    folder_uuid: The UUID of the folder to store the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Protein dimer cofolding\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\n            \\"MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK\\",\\n            \\"MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF\\"\\n        ]\\n    )\\n    \\n    # Protein-ligand complex\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\"MGSSHHHHHHSSGLVPRGSH\\"],\\n        initial_smiles_list=[\\"CC(=O)O\\", \\"CCO\\"],\\n        ligand_binding_affinity_index=0,\\n        use_msa_server=True\\n    )\\n","inputSchema":{"properties":{"initial_protein_sequences":{"items":{"type":"string"},"title":"Initial Protein Sequences","type":"array"},"initial_smiles_list":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Initial Smiles List"},"ligand_binding_affinity_index":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Ligand Binding Affinity Index"},"use_msa_server":{"default":true,"title":"Use Msa Server","type":"boolean"},"use_potentials":{"default":false,"title":"Use Potentials","type":"boolean"},"name":{"default":"Cofolding Workflow","title":"Name","type":"string"},"model":{"default":"boltz_2","title":"Model","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_protein_sequences"],"type":"object"}},{"name":"submit_docking_workflow","description":"Submits a Docking workflow to the API.\\n\\nArgs:\\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\\n    pocket: The pocket to dock into\\n    initial_molecule: The initial molecule to be docked.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    do_csearch: Whether to perform a conformational search on the ligand\\n    do_optimization: Whether to perform an optimization on the ligand\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic docking with protein UUID\\n    result = submit_docking_workflow(\\n        protein=\\"protein-uuid-123\\",\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CC(=O)Oc1ccccc1C(=O)O\\"}\\n    )\\n    \\n    # Docking with optimization disabled\\n    result = submit_docking_workflow(\\n        protein=protein_obj,\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CCO\\"},\\n        do_csearch=False,\\n        do_optimization=False\\n    )\\n","inputSchema":{"properties":{"protein":{"anyOf":[{"type":"string"},{}],"title":"Protein"},"pocket":{"title":"Pocket"},"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"do_csearch":{"default":true,"title":"Do Csearch","type":"boolean"},"do_optimization":{"default":true,"title":"Do Optimization","type":"boolean"},"name":{"default":"Docking Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["protein","pocket"],"type":"object"}},{"name":"workflow_fetch_latest","description":"Fetch the latest workflow data from the database.\\n\\nUpdates the workflow object with the most recent status and results.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to fetch\\n    in_place: Whether to update the workflow object in place (default: False)\\n    \\nReturns:\\n    Dictionary containing the updated workflow data including status and results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"in_place":{"default":false,"title":"In Place","type":"boolean"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_wait_for_result","description":"Wait for a workflow to complete and return the result.\\n\\nBlocks until the workflow completes, polling at specified intervals.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to wait for\\n    poll_interval: Time in seconds between status checks (default: 5)\\n    \\nReturns:\\n    Dictionary containing the completed workflow data including results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"poll_interval":{"default":5,"title":"Poll Interval","type":"integer"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_get_status","description":"Get the current status of a workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with status information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_stop","description":"Stop a running workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to stop\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete","description":"Delete a workflow.\\n\\nThis permanently removes the workflow and its results from the database.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to delete\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"retrieve_workflow","description":"Retrieve a workflow from the API.\\n\\nArgs:\\n    uuid: The UUID of the workflow to retrieve\\n    \\nReturns:\\n    Dictionary containing the complete workflow data\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"retrieve_calculation_molecules","description":"Retrieve a list of molecules from a calculation.\\n\\nArgs:\\n    uuid: The UUID of the calculation to retrieve molecules from\\n    \\nReturns:\\n    List of dictionaries representing the molecules in the calculation\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"list_workflows","description":"List workflows subject to the specified criteria.\\n\\nArgs:\\n    parent_uuid: The UUID of the parent folder\\n    name_contains: Substring to search for in workflow names\\n    public: Filter workflows by their public status\\n    starred: Filter workflows by their starred status\\n    status: Filter workflows by their status\\n    workflow_type: Filter workflows by their type\\n    page: The page number to retrieve (default: 0)\\n    size: The number of items per page (default: 10)\\n    \\nReturns:\\n    List of workflow dictionaries that match the search criteria\\n    \\nRaises:\\n    HTTPError: If the request to the API fails\\n","inputSchema":{"properties":{"parent_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Parent Uuid"},"name_contains":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name Contains"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"status":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Status"},"workflow_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Workflow Type"},"page":{"default":0,"title":"Page","type":"integer"},"size":{"default":10,"title":"Size","type":"integer"}},"type":"object"}},{"name":"workflow_update","description":"Update workflow details.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to update\\n    name: New name for the workflow (optional)\\n    notes: New notes for the workflow (optional)\\n    starred: Whether to star/unstar the workflow (optional)\\n    public: Whether to make the workflow public/private (optional)\\n    \\nReturns:\\n    Dictionary with updated workflow information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name"},"notes":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Notes"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_is_finished","description":"Check if a workflow is finished.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to check\\n    \\nReturns:\\n    Dictionary with workflow completion status\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete_data","description":"Delete workflow data while keeping the workflow record.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}}]}}\r\n\r\n'
2025-08-02 14:02:08,346 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=3, result={'tools': [{'name': 'submit_basic_calculation_workflow', 'description': 'Submit a basic calculation workflow using Rowan v2 API.\n\nPerforms fundamental quantum chemistry calculations with configurable methods\nand computational tasks. Returns a workflow object for tracking progress.\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'type': 'string'}, {'additionalProperties': True, 'type': 'object'}, {}], 'description': 'The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object', 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'description': "The method to use for the calculation (e.g., 'uma_m_omol', 'gfn2-xtb', 'r2scan_3c')", 'title': 'Method', 'type': 'string'}, 'tasks': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'description': "List of computational tasks to perform. Optional[List[str]] (e.g. ['optimize']), Defaults to None", 'title': 'Tasks'}, 'mode': {'default': 'auto', 'description': "The mode to run the calculation in ('auto', 'rapid', 'careful', 'meticulous')", 'title': 'Mode', 'type': 'string'}, 'engine': {'default': 'omol25', 'description': "The computational engine to use ('omol25', 'xtb', 'psi4')", 'title': 'Engine', 'type': 'string'}, 'name': {'default': 'Basic Calculation Workflow', 'description': 'The name of the workflow for identification', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'UUID of the folder to place the workflow in (optional)', 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'description': 'Maximum number of credits to use for the workflow (optional)', 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_conformer_search_workflow', 'description': 'Submit a conformer search workflow using Rowan v2 API.\n\nExplores the conformational space of a molecule to find low-energy structures.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    conf_gen_mode: default to "rapid"\n        Options: "rapid", "careful", "meticulous"\n    final_method: default: "aimnet2_wb97md3"\n        Try other options, if user specifies\n    solvent: Optional solvent for implicit solvation (e.g., "water", "ethanol")\n    transition_state: Whether searching for transition state conformers (default: False)\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic conformer search\n    result = submit_conformer_search_workflow(\n        initial_molecule="CCCC",\n        conf_gen_mode="rapid"\n    )\n    \n    # Careful search with solvent\n    result = submit_conformer_search_workflow(\n        initial_molecule="CC(C)CC(=O)O",\n        conf_gen_mode="careful",\n        solvent="water",\n        final_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'conf_gen_mode': {'default': 'rapid', 'title': 'Conf Gen Mode', 'type': 'string'}, 'final_method': {'default': 'aimnet2_wb97md3', 'title': 'Final Method', 'type': 'string'}, 'solvent': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Solvent'}, 'transition_state': {'default': False, 'title': 'Transition State', 'type': 'boolean'}, 'name': {'default': 'Conformer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_solubility_workflow', 'description': 'Submit a solubility prediction workflow using Rowan v2 API.\n\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\nusing machine learning models.\n\nArgs:\n    initial_smiles: SMILES string of the molecule\n    solvents: List of solvents as SMILES or common names (e.g., ["water", "ethanol"])\n        If None, uses default solvents\n    temperatures: List of temperatures in Kelvin\n        If None, uses default temperature range\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic solubility prediction\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)Nc1ccc(O)cc1",\n        solvents=["water", "ethanol"],\n        temperatures=[298.15, 310.15]\n    )\n    \n    # With SMILES solvents\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)O",\n        solvents=["O", "CCO", "CCCCCC"],\n        temperatures=[273.15, 298.15, 323.15]\n    )\n', 'inputSchema': {'properties': {'initial_smiles': {'title': 'Initial Smiles', 'type': 'string'}, 'solvents': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Solvents'}, 'temperatures': {'anyOf': [{'items': {'type': 'number'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Temperatures'}, 'name': {'default': 'Solubility Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_smiles'], 'type': 'object'}}, {'name': 'submit_pka_workflow', 'description': 'Submit a pKa prediction workflow using Rowan v2 API.\n\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\nusing quantum chemistry calculations.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\n    deprotonate_elements: List of elements to consider for deprotonation\n        (e.g., ["N", "O", "S"]). If None, uses defaults\n    protonate_elements: List of elements to consider for protonation\n        (e.g., ["N", "O"]). If None, uses defaults\n    mode: Calculation mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic pKa prediction\n    result = submit_pka_workflow(\n        initial_molecule="CC(=O)O",\n        pka_range=(2, 8)\n    )\n    \n    # Specific elements with meticulous mode\n    result = submit_pka_workflow(\n        initial_molecule="NC(C)C(=O)O",\n        pka_range=(1, 14),\n        deprotonate_elements=["N", "O"],\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'pka_range': {'default': [2, 12], 'maxItems': 2, 'minItems': 2, 'prefixItems': [{'type': 'number'}, {'type': 'number'}], 'title': 'Pka Range', 'type': 'array'}, 'deprotonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Deprotonate Elements'}, 'protonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Protonate Elements'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'pKa Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_redox_potential_workflow', 'description': 'Submit a redox potential calculation workflow using Rowan v2 API.\n\nCalculates reduction and/or oxidation potentials for a molecule using\nquantum chemistry methods.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    reduction: Whether to calculate reduction potential (default: False)\n    oxidization: Whether to calculate oxidation potential (default: True)\n    mode: Calculation mode (default: "rapid")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic oxidation potential\n    result = submit_redox_potential_workflow(\n        initial_molecule="CC1=CC=CC=C1",\n        oxidization=True\n    )\n    \n    # Both reduction and oxidation with careful mode\n    result = submit_redox_potential_workflow(\n        initial_molecule="c1ccccc1",\n        reduction=True,\n        oxidization=True,\n        mode="careful"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'reduction': {'default': False, 'title': 'Reduction', 'type': 'boolean'}, 'oxidization': {'default': True, 'title': 'Oxidization', 'type': 'boolean'}, 'mode': {'default': 'rapid', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Redox Potential Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_fukui_workflow', 'description': 'Submit a Fukui indices calculation workflow using Rowan v2 API.\n\nCalculates Fukui indices to predict molecular reactivity at different sites.\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    optimization_method: Method for geometry optimization (default: "gfn2_xtb")\n        Common options: "gfn2_xtb", "r2scan_3c", "aimnet2_wb97md3"\n    fukui_method: Method for Fukui calculation (default: "gfn1_xtb")\n        Common options: "gfn1_xtb", "gfn2_xtb"\n    solvent_settings: Optional solvent configuration dictionary\n        Example: {"solvent": "water", "model": "alpb"}\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic Fukui indices\n    result = submit_fukui_workflow(\n        initial_molecule="CC(=O)O"\n    )\n    \n    # With solvent and advanced methods\n    result = submit_fukui_workflow(\n        initial_molecule="c1ccccc1N",\n        optimization_method="r2scan_3c",\n        fukui_method="gfn2_xtb",\n        solvent_settings={"solvent": "water", "model": "alpb"}\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'optimization_method': {'default': 'gfn2_xtb', 'title': 'Optimization Method', 'type': 'string'}, 'fukui_method': {'default': 'gfn1_xtb', 'title': 'Fukui Method', 'type': 'string'}, 'solvent_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Solvent Settings'}, 'name': {'default': 'Fukui Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_tautomer_search_workflow', 'description': 'Submit a tautomer search workflow using Rowan v2 API.\n\nSearches for different tautomeric forms of a molecule and evaluates their\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    mode: Search mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic tautomer search\n    result = submit_tautomer_search_workflow(\n        initial_molecule="CC(=O)CC(=O)C"\n    )\n    \n    # Meticulous search for complex molecule\n    result = submit_tautomer_search_workflow(\n        initial_molecule="c1ccc2c(c1)ncc(=O)[nH]2",\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Tautomer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_descriptors_workflow', 'description': 'Submit a molecular descriptors calculation workflow using Rowan v2 API.\n\nCalculates a comprehensive set of molecular descriptors including:\n- Physical properties (MW, logP, TPSA, etc.)\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\n- Topological indices\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic descriptor calculation\n    result = submit_descriptors_workflow(\n        initial_molecule="CC(=O)Nc1ccc(O)cc1"\n    )\n    \n    # For complex molecule\n    result = submit_descriptors_workflow(\n        initial_molecule="CN1C=NC2=C1C(=O)N(C(=O)N2C)C",\n        name="Caffeine Descriptors"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'name': {'default': 'Descriptors Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_scan_workflow', 'description': 'Submit a potential energy surface scan workflow using Rowan v2 API.\n\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\nor dihedrals) to map the potential energy surface.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    scan_settings: Dictionary specifying scan parameters\n        Example: {\n            "type": "dihedral",  # or "bond", "angle"\n            "atoms": [0, 1, 2, 3],  # atom indices\n            "start": -180,\n            "stop": 180,\n            "step": 10\n        }\n    calculation_engine: Computational engine (default: "omol25")\n        Options: "omol25", "xtb", "psi4"\n    calculation_method: Method for calculations (default: "uma_m_omol")\n        Options depend on engine\n    wavefront_propagation: Use wavefront optimization (default: True)\n        Speeds up scans by using previous geometries as starting points\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Dihedral scan\n    result = submit_scan_workflow(\n        initial_molecule="CC(C)CC",\n        scan_settings={\n            "type": "dihedral",\n            "atoms": [0, 1, 2, 3],\n            "start": -180,\n            "stop": 180,\n            "step": 15\n        }\n    )\n    \n    # Bond scan with advanced method\n    result = submit_scan_workflow(\n        initial_molecule="CC",\n        scan_settings={\n            "type": "bond",\n            "atoms": [0, 1],\n            "start": 1.0,\n            "stop": 2.5,\n            "step": 0.1\n        },\n        calculation_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'scan_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Scan Settings'}, 'calculation_engine': {'default': 'omol25', 'title': 'Calculation Engine', 'type': 'string'}, 'calculation_method': {'default': 'uma_m_omol', 'title': 'Calculation Method', 'type': 'string'}, 'wavefront_propagation': {'default': True, 'title': 'Wavefront Propagation', 'type': 'boolean'}, 'name': {'default': 'Scan Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_irc_workflow', 'description': 'Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\n\nArgs:\n    initial_molecule: The initial molecule to perform the IRC calculation on.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    method: The computational method to use for the IRC calculation (default: "uma_m_omol")\n        See list of available methods for options\n    engine: The computational engine to use for the calculation (default: "omol25")\n        See list of available engines\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\n    step_size: The step size to use for the IRC calculation (default: 0.05)\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted IRC workflow\n    \nExample:\n    # Basic IRC calculation\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "[CH3].[CH3]"},\n        method="gfn2_xtb",\n        max_irc_steps=50\n    )\n    \n    # IRC with specific method and engine\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "CC(O)=CC"},\n        method="r2scan_3c",\n        engine="psi4",\n        step_size=0.03\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'title': 'Method', 'type': 'string'}, 'engine': {'default': 'omol25', 'title': 'Engine', 'type': 'string'}, 'preopt': {'default': True, 'title': 'Preopt', 'type': 'boolean'}, 'step_size': {'default': 0.05, 'title': 'Step Size', 'type': 'number'}, 'max_irc_steps': {'default': 30, 'title': 'Max Irc Steps', 'type': 'integer'}, 'name': {'default': 'IRC Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'type': 'object'}}, {'name': 'submit_protein_cofolding_workflow', 'description': 'Submits a protein cofolding workflow to the API.\n\nArgs:\n    initial_protein_sequences: The sequences of the proteins to be cofolded\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\n    use_msa_server: Whether to use the MSA server for the computation\n    use_potentials: Whether to use potentials for the computation\n    name: The name of the workflow\n    model: The model to use for the computation\n    folder_uuid: The UUID of the folder to store the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Protein dimer cofolding\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=[\n            "MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK",\n            "MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF"\n        ]\n    )\n    \n    # Protein-ligand complex\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=["MGSSHHHHHHSSGLVPRGSH"],\n        initial_smiles_list=["CC(=O)O", "CCO"],\n        ligand_binding_affinity_index=0,\n        use_msa_server=True\n    )\n', 'inputSchema': {'properties': {'initial_protein_sequences': {'items': {'type': 'string'}, 'title': 'Initial Protein Sequences', 'type': 'array'}, 'initial_smiles_list': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Initial Smiles List'}, 'ligand_binding_affinity_index': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Ligand Binding Affinity Index'}, 'use_msa_server': {'default': True, 'title': 'Use Msa Server', 'type': 'boolean'}, 'use_potentials': {'default': False, 'title': 'Use Potentials', 'type': 'boolean'}, 'name': {'default': 'Cofolding Workflow', 'title': 'Name', 'type': 'string'}, 'model': {'default': 'boltz_2', 'title': 'Model', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_protein_sequences'], 'type': 'object'}}, {'name': 'submit_docking_workflow', 'description': 'Submits a Docking workflow to the API.\n\nArgs:\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\n    pocket: The pocket to dock into\n    initial_molecule: The initial molecule to be docked.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    do_csearch: Whether to perform a conformational search on the ligand\n    do_optimization: Whether to perform an optimization on the ligand\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic docking with protein UUID\n    result = submit_docking_workflow(\n        protein="protein-uuid-123",\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CC(=O)Oc1ccccc1C(=O)O"}\n    )\n    \n    # Docking with optimization disabled\n    result = submit_docking_workflow(\n        protein=protein_obj,\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CCO"},\n        do_csearch=False,\n        do_optimization=False\n    )\n', 'inputSchema': {'properties': {'protein': {'anyOf': [{'type': 'string'}, {}], 'title': 'Protein'}, 'pocket': {'title': 'Pocket'}, 'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'do_csearch': {'default': True, 'title': 'Do Csearch', 'type': 'boolean'}, 'do_optimization': {'default': True, 'title': 'Do Optimization', 'type': 'boolean'}, 'name': {'default': 'Docking Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['protein', 'pocket'], 'type': 'object'}}, {'name': 'workflow_fetch_latest', 'description': 'Fetch the latest workflow data from the database.\n\nUpdates the workflow object with the most recent status and results.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to fetch\n    in_place: Whether to update the workflow object in place (default: False)\n    \nReturns:\n    Dictionary containing the updated workflow data including status and results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'in_place': {'default': False, 'title': 'In Place', 'type': 'boolean'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_wait_for_result', 'description': 'Wait for a workflow to complete and return the result.\n\nBlocks until the workflow completes, polling at specified intervals.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to wait for\n    poll_interval: Time in seconds between status checks (default: 5)\n    \nReturns:\n    Dictionary containing the completed workflow data including results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'poll_interval': {'default': 5, 'title': 'Poll Interval', 'type': 'integer'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_get_status', 'description': 'Get the current status of a workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with status information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_stop', 'description': 'Stop a running workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to stop\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete', 'description': 'Delete a workflow.\n\nThis permanently removes the workflow and its results from the database.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to delete\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'retrieve_workflow', 'description': 'Retrieve a workflow from the API.\n\nArgs:\n    uuid: The UUID of the workflow to retrieve\n    \nReturns:\n    Dictionary containing the complete workflow data\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'retrieve_calculation_molecules', 'description': 'Retrieve a list of molecules from a calculation.\n\nArgs:\n    uuid: The UUID of the calculation to retrieve molecules from\n    \nReturns:\n    List of dictionaries representing the molecules in the calculation\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'list_workflows', 'description': 'List workflows subject to the specified criteria.\n\nArgs:\n    parent_uuid: The UUID of the parent folder\n    name_contains: Substring to search for in workflow names\n    public: Filter workflows by their public status\n    starred: Filter workflows by their starred status\n    status: Filter workflows by their status\n    workflow_type: Filter workflows by their type\n    page: The page number to retrieve (default: 0)\n    size: The number of items per page (default: 10)\n    \nReturns:\n    List of workflow dictionaries that match the search criteria\n    \nRaises:\n    HTTPError: If the request to the API fails\n', 'inputSchema': {'properties': {'parent_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Parent Uuid'}, 'name_contains': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name Contains'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'status': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Status'}, 'workflow_type': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Type'}, 'page': {'default': 0, 'title': 'Page', 'type': 'integer'}, 'size': {'default': 10, 'title': 'Size', 'type': 'integer'}}, 'type': 'object'}}, {'name': 'workflow_update', 'description': 'Update workflow details.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to update\n    name: New name for the workflow (optional)\n    notes: New notes for the workflow (optional)\n    starred: Whether to star/unstar the workflow (optional)\n    public: Whether to make the workflow public/private (optional)\n    \nReturns:\n    Dictionary with updated workflow information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name'}, 'notes': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Notes'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_is_finished', 'description': 'Check if a workflow is finished.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to check\n    \nReturns:\n    Dictionary with workflow completion status\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete_data', 'description': 'Delete workflow data while keeping the workflow record.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}]})), metadata=None)
2025-08-02 14:02:08,349 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:02:08,349 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":3,"result":{"tools":[{"name":"submit_basic_calculation_workflow","description":"Submit a basic calculation workflow using Rowan v2 API.\\n\\nPerforms fundamental quantum chemistry calculations with configurable methods\\nand computational tasks. Returns a workflow object for tracking progress.\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"type":"string"},{"additionalProperties":true,"type":"object"},{}],"description":"The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object","title":"Initial Molecule"},"method":{"default":"uma_m_omol","description":"The method to use for the calculation (e.g., \'uma_m_omol\', \'gfn2-xtb\', \'r2scan_3c\')","title":"Method","type":"string"},"tasks":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"description":"List of computational tasks to perform. Optional[List[str]] (e.g. [\'optimize\']), Defaults to None","title":"Tasks"},"mode":{"default":"auto","description":"The mode to run the calculation in (\'auto\', \'rapid\', \'careful\', \'meticulous\')","title":"Mode","type":"string"},"engine":{"default":"omol25","description":"The computational engine to use (\'omol25\', \'xtb\', \'psi4\')","title":"Engine","type":"string"},"name":{"default":"Basic Calculation Workflow","description":"The name of the workflow for identification","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"UUID of the folder to place the workflow in (optional)","title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"description":"Maximum number of credits to use for the workflow (optional)","title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_conformer_search_workflow","description":"Submit a conformer search workflow using Rowan v2 API.\\n\\nExplores the conformational space of a molecule to find low-energy structures.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    conf_gen_mode: default to \\"rapid\\"\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    final_method: default: \\"aimnet2_wb97md3\\"\\n        Try other options, if user specifies\\n    solvent: Optional solvent for implicit solvation (e.g., \\"water\\", \\"ethanol\\")\\n    transition_state: Whether searching for transition state conformers (default: False)\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic conformer search\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CCCC\\",\\n        conf_gen_mode=\\"rapid\\"\\n    )\\n    \\n    # Careful search with solvent\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CC(C)CC(=O)O\\",\\n        conf_gen_mode=\\"careful\\",\\n        solvent=\\"water\\",\\n        final_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"conf_gen_mode":{"default":"rapid","title":"Conf Gen Mode","type":"string"},"final_method":{"default":"aimnet2_wb97md3","title":"Final Method","type":"string"},"solvent":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Solvent"},"transition_state":{"default":false,"title":"Transition State","type":"boolean"},"name":{"default":"Conformer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_solubility_workflow","description":"Submit a solubility prediction workflow using Rowan v2 API.\\n\\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\\nusing machine learning models.\\n\\nArgs:\\n    initial_smiles: SMILES string of the molecule\\n    solvents: List of solvents as SMILES or common names (e.g., [\\"water\\", \\"ethanol\\"])\\n        If None, uses default solvents\\n    temperatures: List of temperatures in Kelvin\\n        If None, uses default temperature range\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic solubility prediction\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)Nc1ccc(O)cc1\\",\\n        solvents=[\\"water\\", \\"ethanol\\"],\\n        temperatures=[298.15, 310.15]\\n    )\\n    \\n    # With SMILES solvents\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)O\\",\\n        solvents=[\\"O\\", \\"CCO\\", \\"CCCCCC\\"],\\n        temperatures=[273.15, 298.15, 323.15]\\n    )\\n","inputSchema":{"properties":{"initial_smiles":{"title":"Initial Smiles","type":"string"},"solvents":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Solvents"},"temperatures":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"default":null,"title":"Temperatures"},"name":{"default":"Solubility Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_smiles"],"type":"object"}},{"name":"submit_pka_workflow","description":"Submit a pKa prediction workflow using Rowan v2 API.\\n\\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\\nusing quantum chemistry calculations.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\\n    deprotonate_elements: List of elements to consider for deprotonation\\n        (e.g., [\\"N\\", \\"O\\", \\"S\\"]). If None, uses defaults\\n    protonate_elements: List of elements to consider for protonation\\n        (e.g., [\\"N\\", \\"O\\"]). If None, uses defaults\\n    mode: Calculation mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic pKa prediction\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"CC(=O)O\\",\\n        pka_range=(2, 8)\\n    )\\n    \\n    # Specific elements with meticulous mode\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"NC(C)C(=O)O\\",\\n        pka_range=(1, 14),\\n        deprotonate_elements=[\\"N\\", \\"O\\"],\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"pka_range":{"default":[2,12],"maxItems":2,"minItems":2,"prefixItems":[{"type":"number"},{"type":"number"}],"title":"Pka Range","type":"array"},"deprotonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Deprotonate Elements"},"protonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Protonate Elements"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"pKa Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_redox_potential_workflow","description":"Submit a redox potential calculation workflow using Rowan v2 API.\\n\\nCalculates reduction and/or oxidation potentials for a molecule using\\nquantum chemistry methods.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    reduction: Whether to calculate reduction potential (default: False)\\n    oxidization: Whether to calculate oxidation potential (default: True)\\n    mode: Calculation mode (default: \\"rapid\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic oxidation potential\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"CC1=CC=CC=C1\\",\\n        oxidization=True\\n    )\\n    \\n    # Both reduction and oxidation with careful mode\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"c1ccccc1\\",\\n        reduction=True,\\n        oxidization=True,\\n        mode=\\"careful\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"reduction":{"default":false,"title":"Reduction","type":"boolean"},"oxidization":{"default":true,"title":"Oxidization","type":"boolean"},"mode":{"default":"rapid","title":"Mode","type":"string"},"name":{"default":"Redox Potential Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_fukui_workflow","description":"Submit a Fukui indices calculation workflow using Rowan v2 API.\\n\\nCalculates Fukui indices to predict molecular reactivity at different sites.\\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    optimization_method: Method for geometry optimization (default: \\"gfn2_xtb\\")\\n        Common options: \\"gfn2_xtb\\", \\"r2scan_3c\\", \\"aimnet2_wb97md3\\"\\n    fukui_method: Method for Fukui calculation (default: \\"gfn1_xtb\\")\\n        Common options: \\"gfn1_xtb\\", \\"gfn2_xtb\\"\\n    solvent_settings: Optional solvent configuration dictionary\\n        Example: {\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic Fukui indices\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"CC(=O)O\\"\\n    )\\n    \\n    # With solvent and advanced methods\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"c1ccccc1N\\",\\n        optimization_method=\\"r2scan_3c\\",\\n        fukui_method=\\"gfn2_xtb\\",\\n        solvent_settings={\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"optimization_method":{"default":"gfn2_xtb","title":"Optimization Method","type":"string"},"fukui_method":{"default":"gfn1_xtb","title":"Fukui Method","type":"string"},"solvent_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Solvent Settings"},"name":{"default":"Fukui Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_tautomer_search_workflow","description":"Submit a tautomer search workflow using Rowan v2 API.\\n\\nSearches for different tautomeric forms of a molecule and evaluates their\\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    mode: Search mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic tautomer search\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"CC(=O)CC(=O)C\\"\\n    )\\n    \\n    # Meticulous search for complex molecule\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"c1ccc2c(c1)ncc(=O)[nH]2\\",\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"Tautomer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_descriptors_workflow","description":"Submit a molecular descriptors calculation workflow using Rowan v2 API.\\n\\nCalculates a comprehensive set of molecular descriptors including:\\n- Physical properties (MW, logP, TPSA, etc.)\\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\\n- Topological indices\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic descriptor calculation\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CC(=O)Nc1ccc(O)cc1\\"\\n    )\\n    \\n    # For complex molecule\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)C\\",\\n        name=\\"Caffeine Descriptors\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"name":{"default":"Descriptors Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_scan_workflow","description":"Submit a potential energy surface scan workflow using Rowan v2 API.\\n\\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\\nor dihedrals) to map the potential energy surface.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    scan_settings: Dictionary specifying scan parameters\\n        Example: {\\n            \\"type\\": \\"dihedral\\",  # or \\"bond\\", \\"angle\\"\\n            \\"atoms\\": [0, 1, 2, 3],  # atom indices\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 10\\n        }\\n    calculation_engine: Computational engine (default: \\"omol25\\")\\n        Options: \\"omol25\\", \\"xtb\\", \\"psi4\\"\\n    calculation_method: Method for calculations (default: \\"uma_m_omol\\")\\n        Options depend on engine\\n    wavefront_propagation: Use wavefront optimization (default: True)\\n        Speeds up scans by using previous geometries as starting points\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Dihedral scan\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC(C)CC\\",\\n        scan_settings={\\n            \\"type\\": \\"dihedral\\",\\n            \\"atoms\\": [0, 1, 2, 3],\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 15\\n        }\\n    )\\n    \\n    # Bond scan with advanced method\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC\\",\\n        scan_settings={\\n            \\"type\\": \\"bond\\",\\n            \\"atoms\\": [0, 1],\\n            \\"start\\": 1.0,\\n            \\"stop\\": 2.5,\\n            \\"step\\": 0.1\\n        },\\n        calculation_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"scan_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Scan Settings"},"calculation_engine":{"default":"omol25","title":"Calculation Engine","type":"string"},"calculation_method":{"default":"uma_m_omol","title":"Calculation Method","type":"string"},"wavefront_propagation":{"default":true,"title":"Wavefront Propagation","type":"boolean"},"name":{"default":"Scan Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_irc_workflow","description":"Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\\n\\nArgs:\\n    initial_molecule: The initial molecule to perform the IRC calculation on.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    method: The computational method to use for the IRC calculation (default: \\"uma_m_omol\\")\\n        See list of available methods for options\\n    engine: The computational engine to use for the calculation (default: \\"omol25\\")\\n        See list of available engines\\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\\n    step_size: The step size to use for the IRC calculation (default: 0.05)\\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted IRC workflow\\n    \\nExample:\\n    # Basic IRC calculation\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"[CH3].[CH3]\\"},\\n        method=\\"gfn2_xtb\\",\\n        max_irc_steps=50\\n    )\\n    \\n    # IRC with specific method and engine\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"CC(O)=CC\\"},\\n        method=\\"r2scan_3c\\",\\n        engine=\\"psi4\\",\\n        step_size=0.03\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"method":{"default":"uma_m_omol","title":"Method","type":"string"},"engine":{"default":"omol25","title":"Engine","type":"string"},"preopt":{"default":true,"title":"Preopt","type":"boolean"},"step_size":{"default":0.05,"title":"Step Size","type":"number"},"max_irc_steps":{"default":30,"title":"Max Irc Steps","type":"integer"},"name":{"default":"IRC Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"type":"object"}},{"name":"submit_protein_cofolding_workflow","description":"Submits a protein cofolding workflow to the API.\\n\\nArgs:\\n    initial_protein_sequences: The sequences of the proteins to be cofolded\\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\\n    use_msa_server: Whether to use the MSA server for the computation\\n    use_potentials: Whether to use potentials for the computation\\n    name: The name of the workflow\\n    model: The model to use for the computation\\n    folder_uuid: The UUID of the folder to store the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Protein dimer cofolding\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\n            \\"MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK\\",\\n            \\"MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF\\"\\n        ]\\n    )\\n    \\n    # Protein-ligand complex\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\"MGSSHHHHHHSSGLVPRGSH\\"],\\n        initial_smiles_list=[\\"CC(=O)O\\", \\"CCO\\"],\\n        ligand_binding_affinity_index=0,\\n        use_msa_server=True\\n    )\\n","inputSchema":{"properties":{"initial_protein_sequences":{"items":{"type":"string"},"title":"Initial Protein Sequences","type":"array"},"initial_smiles_list":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Initial Smiles List"},"ligand_binding_affinity_index":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Ligand Binding Affinity Index"},"use_msa_server":{"default":true,"title":"Use Msa Server","type":"boolean"},"use_potentials":{"default":false,"title":"Use Potentials","type":"boolean"},"name":{"default":"Cofolding Workflow","title":"Name","type":"string"},"model":{"default":"boltz_2","title":"Model","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_protein_sequences"],"type":"object"}},{"name":"submit_docking_workflow","description":"Submits a Docking workflow to the API.\\n\\nArgs:\\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\\n    pocket: The pocket to dock into\\n    initial_molecule: The initial molecule to be docked.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    do_csearch: Whether to perform a conformational search on the ligand\\n    do_optimization: Whether to perform an optimization on the ligand\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic docking with protein UUID\\n    result = submit_docking_workflow(\\n        protein=\\"protein-uuid-123\\",\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CC(=O)Oc1ccccc1C(=O)O\\"}\\n    )\\n    \\n    # Docking with optimization disabled\\n    result = submit_docking_workflow(\\n        protein=protein_obj,\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CCO\\"},\\n        do_csearch=False,\\n        do_optimization=False\\n    )\\n","inputSchema":{"properties":{"protein":{"anyOf":[{"type":"string"},{}],"title":"Protein"},"pocket":{"title":"Pocket"},"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"do_csearch":{"default":true,"title":"Do Csearch","type":"boolean"},"do_optimization":{"default":true,"title":"Do Optimization","type":"boolean"},"name":{"default":"Docking Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["protein","pocket"],"type":"object"}},{"name":"workflow_fetch_latest","description":"Fetch the latest workflow data from the database.\\n\\nUpdates the workflow object with the most recent status and results.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to fetch\\n    in_place: Whether to update the workflow object in place (default: False)\\n    \\nReturns:\\n    Dictionary containing the updated workflow data including status and results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"in_place":{"default":false,"title":"In Place","type":"boolean"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_wait_for_result","description":"Wait for a workflow to complete and return the result.\\n\\nBlocks until the workflow completes, polling at specified intervals.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to wait for\\n    poll_interval: Time in seconds between status checks (default: 5)\\n    \\nReturns:\\n    Dictionary containing the completed workflow data including results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"poll_interval":{"default":5,"title":"Poll Interval","type":"integer"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_get_status","description":"Get the current status of a workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with status information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_stop","description":"Stop a running workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to stop\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete","description":"Delete a workflow.\\n\\nThis permanently removes the workflow and its results from the database.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to delete\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"retrieve_workflow","description":"Retrieve a workflow from the API.\\n\\nArgs:\\n    uuid: The UUID of the workflow to retrieve\\n    \\nReturns:\\n    Dictionary containing the complete workflow data\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"retrieve_calculation_molecules","description":"Retrieve a list of molecules from a calculation.\\n\\nArgs:\\n    uuid: The UUID of the calculation to retrieve molecules from\\n    \\nReturns:\\n    List of dictionaries representing the molecules in the calculation\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"list_workflows","description":"List workflows subject to the specified criteria.\\n\\nArgs:\\n    parent_uuid: The UUID of the parent folder\\n    name_contains: Substring to search for in workflow names\\n    public: Filter workflows by their public status\\n    starred: Filter workflows by their starred status\\n    status: Filter workflows by their status\\n    workflow_type: Filter workflows by their type\\n    page: The page number to retrieve (default: 0)\\n    size: The number of items per page (default: 10)\\n    \\nReturns:\\n    List of workflow dictionaries that match the search criteria\\n    \\nRaises:\\n    HTTPError: If the request to the API fails\\n","inputSchema":{"properties":{"parent_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Parent Uuid"},"name_contains":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name Contains"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"status":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Status"},"workflow_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Workflow Type"},"page":{"default":0,"title":"Page","type":"integer"},"size":{"default":10,"title":"Size","type":"integer"}},"type":"object"}},{"name":"workflow_update","description":"Update workflow details.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to update\\n    name: New name for the workflow (optional)\\n    notes: New notes for the workflow (optional)\\n    starred: Whether to star/unstar the workflow (optional)\\n    public: Whether to make the workflow public/private (optional)\\n    \\nReturns:\\n    Dictionary with updated workflow information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name"},"notes":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Notes"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_is_finished","description":"Check if a workflow is finished.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to check\\n    \\nReturns:\\n    Dictionary with workflow completion status\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete_data","description":"Delete workflow data while keeping the workflow record.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}}]}}\r\n\r\n'
2025-08-02 14:02:08,372 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:02:08,372 - mcp.server.sse - DEBUG - Parsed session ID: 37b07b7d-1d3f-456c-ab05-64fa6e6fba6d
2025-08-02 14:02:08,372 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"prompts/list","jsonrpc":"2.0","id":4}'
2025-08-02 14:02:08,372 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=4)
2025-08-02 14:02:08,372 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=4)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a1057f0>))
2025-08-02 14:02:08,372 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10a02b7a0>
2025-08-02 14:02:08,373 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 14:02:08,373 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListPromptsRequest
2025-08-02 14:02:08,373 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:02:08,373 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=4, result={'prompts': []})), metadata=None)
2025-08-02 14:02:08,373 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":4,"result":{"prompts":[]}}\r\n\r\n'
2025-08-02 14:02:08,375 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:02:08,375 - mcp.server.sse - DEBUG - Parsed session ID: 37b07b7d-1d3f-456c-ab05-64fa6e6fba6d
2025-08-02 14:02:08,375 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"prompts/list","jsonrpc":"2.0","id":5}'
2025-08-02 14:02:08,375 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=5)
2025-08-02 14:02:08,375 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=5)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a106cc0>))
2025-08-02 14:02:08,376 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10a0afaf0>
2025-08-02 14:02:08,376 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 14:02:08,376 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListPromptsRequest
2025-08-02 14:02:08,376 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:02:08,376 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=5, result={'prompts': []})), metadata=None)
2025-08-02 14:02:08,376 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":5,"result":{"prompts":[]}}\r\n\r\n'
2025-08-02 14:02:11,133 - sse_starlette.sse - DEBUG - Got event: http.disconnect. Stop streaming.
2025-08-02 14:02:11,134 - root - DEBUG - Client session disconnected 37b07b7d-1d3f-456c-ab05-64fa6e6fba6d
2025-08-02 14:02:13,041 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 14:02:13,041 - mcp.server.sse - DEBUG - Created new session with ID: ecdaefbf-d9a6-4d2b-81ed-fab73c158e7b
2025-08-02 14:02:13,041 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 14:02:13,041 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 14:02:13,043 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 14:02:13,043 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=ecdaefbfd9a64d2b81edfab73c158e7b
2025-08-02 14:02:13,043 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=ecdaefbfd9a64d2b81edfab73c158e7b\r\n\r\n'
2025-08-02 14:02:13,047 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:02:13,047 - mcp.server.sse - DEBUG - Parsed session ID: ecdaefbf-d9a6-4d2b-81ed-fab73c158e7b
2025-08-02 14:02:13,047 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"initialize","params":{"protocolVersion":"2025-06-18","capabilities":{"tools":true,"prompts":true,"resources":false,"logging":false,"roots":{"listChanged":false}},"clientInfo":{"name":"cursor-vscode","version":"1.0.0"}},"jsonrpc":"2.0","id":1}'
2025-08-02 14:02:13,047 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'tools': True, 'prompts': True, 'resources': False, 'logging': False, 'roots': {'listChanged': False}}, 'clientInfo': {'name': 'cursor-vscode', 'version': '1.0.0'}}, jsonrpc='2.0', id=1)
2025-08-02 14:02:13,047 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'tools': True, 'prompts': True, 'resources': False, 'logging': False, 'roots': {'listChanged': False}}, 'clientInfo': {'name': 'cursor-vscode', 'version': '1.0.0'}}, jsonrpc='2.0', id=1)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a106f90>))
2025-08-02 14:02:13,048 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=1, result={'protocolVersion': '2025-03-26', 'capabilities': {'experimental': {}, 'prompts': {'listChanged': False}, 'resources': {'subscribe': False, 'listChanged': False}, 'tools': {'listChanged': False}}, 'serverInfo': {'name': 'Rowan MCP Server', 'version': '1.9.3'}})), metadata=None)
2025-08-02 14:02:13,048 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":1,"result":{"protocolVersion":"2025-03-26","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"Rowan MCP Server","version":"1.9.3"}}}\r\n\r\n'
2025-08-02 14:02:13,087 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:02:13,090 - mcp.server.sse - DEBUG - Parsed session ID: ecdaefbf-d9a6-4d2b-81ed-fab73c158e7b
2025-08-02 14:02:13,091 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"notifications/initialized","jsonrpc":"2.0"}'
2025-08-02 14:02:13,092 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 14:02:13,093 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a105a30>))
2025-08-02 14:02:13,094 - mcp.server.lowlevel.server - DEBUG - Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 14:02:13,099 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:02:13,099 - mcp.server.sse - DEBUG - Parsed session ID: ecdaefbf-d9a6-4d2b-81ed-fab73c158e7b
2025-08-02 14:02:13,099 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/list","jsonrpc":"2.0","id":2}'
2025-08-02 14:02:13,099 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=2)
2025-08-02 14:02:13,099 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=2)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a107020>))
2025-08-02 14:02:13,099 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:02:13,099 - mcp.server.sse - DEBUG - Parsed session ID: ecdaefbf-d9a6-4d2b-81ed-fab73c158e7b
2025-08-02 14:02:13,099 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/list","jsonrpc":"2.0","id":3}'
2025-08-02 14:02:13,099 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=3)
2025-08-02 14:02:13,100 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=3)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a105a30>))
2025-08-02 14:02:13,100 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10a0a1b20>
2025-08-02 14:02:13,100 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 14:02:13,100 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListToolsRequest
2025-08-02 14:02:13,103 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:02:13,103 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10a027e90>
2025-08-02 14:02:13,106 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=2, result={'tools': [{'name': 'submit_basic_calculation_workflow', 'description': 'Submit a basic calculation workflow using Rowan v2 API.\n\nPerforms fundamental quantum chemistry calculations with configurable methods\nand computational tasks. Returns a workflow object for tracking progress.\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'type': 'string'}, {'additionalProperties': True, 'type': 'object'}, {}], 'description': 'The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object', 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'description': "The method to use for the calculation (e.g., 'uma_m_omol', 'gfn2-xtb', 'r2scan_3c')", 'title': 'Method', 'type': 'string'}, 'tasks': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'description': "List of computational tasks to perform. Optional[List[str]] (e.g. ['optimize']), Defaults to None", 'title': 'Tasks'}, 'mode': {'default': 'auto', 'description': "The mode to run the calculation in ('auto', 'rapid', 'careful', 'meticulous')", 'title': 'Mode', 'type': 'string'}, 'engine': {'default': 'omol25', 'description': "The computational engine to use ('omol25', 'xtb', 'psi4')", 'title': 'Engine', 'type': 'string'}, 'name': {'default': 'Basic Calculation Workflow', 'description': 'The name of the workflow for identification', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'UUID of the folder to place the workflow in (optional)', 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'description': 'Maximum number of credits to use for the workflow (optional)', 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_conformer_search_workflow', 'description': 'Submit a conformer search workflow using Rowan v2 API.\n\nExplores the conformational space of a molecule to find low-energy structures.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    conf_gen_mode: default to "rapid"\n        Options: "rapid", "careful", "meticulous"\n    final_method: default: "aimnet2_wb97md3"\n        Try other options, if user specifies\n    solvent: Optional solvent for implicit solvation (e.g., "water", "ethanol")\n    transition_state: Whether searching for transition state conformers (default: False)\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic conformer search\n    result = submit_conformer_search_workflow(\n        initial_molecule="CCCC",\n        conf_gen_mode="rapid"\n    )\n    \n    # Careful search with solvent\n    result = submit_conformer_search_workflow(\n        initial_molecule="CC(C)CC(=O)O",\n        conf_gen_mode="careful",\n        solvent="water",\n        final_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'conf_gen_mode': {'default': 'rapid', 'title': 'Conf Gen Mode', 'type': 'string'}, 'final_method': {'default': 'aimnet2_wb97md3', 'title': 'Final Method', 'type': 'string'}, 'solvent': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Solvent'}, 'transition_state': {'default': False, 'title': 'Transition State', 'type': 'boolean'}, 'name': {'default': 'Conformer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_solubility_workflow', 'description': 'Submit a solubility prediction workflow using Rowan v2 API.\n\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\nusing machine learning models.\n\nArgs:\n    initial_smiles: SMILES string of the molecule\n    solvents: List of solvents as SMILES or common names (e.g., ["water", "ethanol"])\n        If None, uses default solvents\n    temperatures: List of temperatures in Kelvin\n        If None, uses default temperature range\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic solubility prediction\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)Nc1ccc(O)cc1",\n        solvents=["water", "ethanol"],\n        temperatures=[298.15, 310.15]\n    )\n    \n    # With SMILES solvents\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)O",\n        solvents=["O", "CCO", "CCCCCC"],\n        temperatures=[273.15, 298.15, 323.15]\n    )\n', 'inputSchema': {'properties': {'initial_smiles': {'title': 'Initial Smiles', 'type': 'string'}, 'solvents': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Solvents'}, 'temperatures': {'anyOf': [{'items': {'type': 'number'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Temperatures'}, 'name': {'default': 'Solubility Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_smiles'], 'type': 'object'}}, {'name': 'submit_pka_workflow', 'description': 'Submit a pKa prediction workflow using Rowan v2 API.\n\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\nusing quantum chemistry calculations.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\n    deprotonate_elements: List of elements to consider for deprotonation\n        (e.g., ["N", "O", "S"]). If None, uses defaults\n    protonate_elements: List of elements to consider for protonation\n        (e.g., ["N", "O"]). If None, uses defaults\n    mode: Calculation mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic pKa prediction\n    result = submit_pka_workflow(\n        initial_molecule="CC(=O)O",\n        pka_range=(2, 8)\n    )\n    \n    # Specific elements with meticulous mode\n    result = submit_pka_workflow(\n        initial_molecule="NC(C)C(=O)O",\n        pka_range=(1, 14),\n        deprotonate_elements=["N", "O"],\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'pka_range': {'default': [2, 12], 'maxItems': 2, 'minItems': 2, 'prefixItems': [{'type': 'number'}, {'type': 'number'}], 'title': 'Pka Range', 'type': 'array'}, 'deprotonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Deprotonate Elements'}, 'protonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Protonate Elements'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'pKa Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_redox_potential_workflow', 'description': 'Submit a redox potential calculation workflow using Rowan v2 API.\n\nCalculates reduction and/or oxidation potentials for a molecule using\nquantum chemistry methods.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    reduction: Whether to calculate reduction potential (default: False)\n    oxidization: Whether to calculate oxidation potential (default: True)\n    mode: Calculation mode (default: "rapid")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic oxidation potential\n    result = submit_redox_potential_workflow(\n        initial_molecule="CC1=CC=CC=C1",\n        oxidization=True\n    )\n    \n    # Both reduction and oxidation with careful mode\n    result = submit_redox_potential_workflow(\n        initial_molecule="c1ccccc1",\n        reduction=True,\n        oxidization=True,\n        mode="careful"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'reduction': {'default': False, 'title': 'Reduction', 'type': 'boolean'}, 'oxidization': {'default': True, 'title': 'Oxidization', 'type': 'boolean'}, 'mode': {'default': 'rapid', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Redox Potential Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_fukui_workflow', 'description': 'Submit a Fukui indices calculation workflow using Rowan v2 API.\n\nCalculates Fukui indices to predict molecular reactivity at different sites.\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    optimization_method: Method for geometry optimization (default: "gfn2_xtb")\n        Common options: "gfn2_xtb", "r2scan_3c", "aimnet2_wb97md3"\n    fukui_method: Method for Fukui calculation (default: "gfn1_xtb")\n        Common options: "gfn1_xtb", "gfn2_xtb"\n    solvent_settings: Optional solvent configuration dictionary\n        Example: {"solvent": "water", "model": "alpb"}\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic Fukui indices\n    result = submit_fukui_workflow(\n        initial_molecule="CC(=O)O"\n    )\n    \n    # With solvent and advanced methods\n    result = submit_fukui_workflow(\n        initial_molecule="c1ccccc1N",\n        optimization_method="r2scan_3c",\n        fukui_method="gfn2_xtb",\n        solvent_settings={"solvent": "water", "model": "alpb"}\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'optimization_method': {'default': 'gfn2_xtb', 'title': 'Optimization Method', 'type': 'string'}, 'fukui_method': {'default': 'gfn1_xtb', 'title': 'Fukui Method', 'type': 'string'}, 'solvent_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Solvent Settings'}, 'name': {'default': 'Fukui Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_tautomer_search_workflow', 'description': 'Submit a tautomer search workflow using Rowan v2 API.\n\nSearches for different tautomeric forms of a molecule and evaluates their\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    mode: Search mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic tautomer search\n    result = submit_tautomer_search_workflow(\n        initial_molecule="CC(=O)CC(=O)C"\n    )\n    \n    # Meticulous search for complex molecule\n    result = submit_tautomer_search_workflow(\n        initial_molecule="c1ccc2c(c1)ncc(=O)[nH]2",\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Tautomer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_descriptors_workflow', 'description': 'Submit a molecular descriptors calculation workflow using Rowan v2 API.\n\nCalculates a comprehensive set of molecular descriptors including:\n- Physical properties (MW, logP, TPSA, etc.)\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\n- Topological indices\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic descriptor calculation\n    result = submit_descriptors_workflow(\n        initial_molecule="CC(=O)Nc1ccc(O)cc1"\n    )\n    \n    # For complex molecule\n    result = submit_descriptors_workflow(\n        initial_molecule="CN1C=NC2=C1C(=O)N(C(=O)N2C)C",\n        name="Caffeine Descriptors"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'name': {'default': 'Descriptors Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_scan_workflow', 'description': 'Submit a potential energy surface scan workflow using Rowan v2 API.\n\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\nor dihedrals) to map the potential energy surface.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    scan_settings: Dictionary specifying scan parameters\n        Example: {\n            "type": "dihedral",  # or "bond", "angle"\n            "atoms": [0, 1, 2, 3],  # atom indices\n            "start": -180,\n            "stop": 180,\n            "step": 10\n        }\n    calculation_engine: Computational engine (default: "omol25")\n        Options: "omol25", "xtb", "psi4"\n    calculation_method: Method for calculations (default: "uma_m_omol")\n        Options depend on engine\n    wavefront_propagation: Use wavefront optimization (default: True)\n        Speeds up scans by using previous geometries as starting points\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Dihedral scan\n    result = submit_scan_workflow(\n        initial_molecule="CC(C)CC",\n        scan_settings={\n            "type": "dihedral",\n            "atoms": [0, 1, 2, 3],\n            "start": -180,\n            "stop": 180,\n            "step": 15\n        }\n    )\n    \n    # Bond scan with advanced method\n    result = submit_scan_workflow(\n        initial_molecule="CC",\n        scan_settings={\n            "type": "bond",\n            "atoms": [0, 1],\n            "start": 1.0,\n            "stop": 2.5,\n            "step": 0.1\n        },\n        calculation_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'scan_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Scan Settings'}, 'calculation_engine': {'default': 'omol25', 'title': 'Calculation Engine', 'type': 'string'}, 'calculation_method': {'default': 'uma_m_omol', 'title': 'Calculation Method', 'type': 'string'}, 'wavefront_propagation': {'default': True, 'title': 'Wavefront Propagation', 'type': 'boolean'}, 'name': {'default': 'Scan Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_irc_workflow', 'description': 'Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\n\nArgs:\n    initial_molecule: The initial molecule to perform the IRC calculation on.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    method: The computational method to use for the IRC calculation (default: "uma_m_omol")\n        See list of available methods for options\n    engine: The computational engine to use for the calculation (default: "omol25")\n        See list of available engines\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\n    step_size: The step size to use for the IRC calculation (default: 0.05)\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted IRC workflow\n    \nExample:\n    # Basic IRC calculation\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "[CH3].[CH3]"},\n        method="gfn2_xtb",\n        max_irc_steps=50\n    )\n    \n    # IRC with specific method and engine\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "CC(O)=CC"},\n        method="r2scan_3c",\n        engine="psi4",\n        step_size=0.03\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'title': 'Method', 'type': 'string'}, 'engine': {'default': 'omol25', 'title': 'Engine', 'type': 'string'}, 'preopt': {'default': True, 'title': 'Preopt', 'type': 'boolean'}, 'step_size': {'default': 0.05, 'title': 'Step Size', 'type': 'number'}, 'max_irc_steps': {'default': 30, 'title': 'Max Irc Steps', 'type': 'integer'}, 'name': {'default': 'IRC Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'type': 'object'}}, {'name': 'submit_protein_cofolding_workflow', 'description': 'Submits a protein cofolding workflow to the API.\n\nArgs:\n    initial_protein_sequences: The sequences of the proteins to be cofolded\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\n    use_msa_server: Whether to use the MSA server for the computation\n    use_potentials: Whether to use potentials for the computation\n    name: The name of the workflow\n    model: The model to use for the computation\n    folder_uuid: The UUID of the folder to store the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Protein dimer cofolding\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=[\n            "MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK",\n            "MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF"\n        ]\n    )\n    \n    # Protein-ligand complex\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=["MGSSHHHHHHSSGLVPRGSH"],\n        initial_smiles_list=["CC(=O)O", "CCO"],\n        ligand_binding_affinity_index=0,\n        use_msa_server=True\n    )\n', 'inputSchema': {'properties': {'initial_protein_sequences': {'items': {'type': 'string'}, 'title': 'Initial Protein Sequences', 'type': 'array'}, 'initial_smiles_list': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Initial Smiles List'}, 'ligand_binding_affinity_index': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Ligand Binding Affinity Index'}, 'use_msa_server': {'default': True, 'title': 'Use Msa Server', 'type': 'boolean'}, 'use_potentials': {'default': False, 'title': 'Use Potentials', 'type': 'boolean'}, 'name': {'default': 'Cofolding Workflow', 'title': 'Name', 'type': 'string'}, 'model': {'default': 'boltz_2', 'title': 'Model', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_protein_sequences'], 'type': 'object'}}, {'name': 'submit_docking_workflow', 'description': 'Submits a Docking workflow to the API.\n\nArgs:\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\n    pocket: The pocket to dock into\n    initial_molecule: The initial molecule to be docked.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    do_csearch: Whether to perform a conformational search on the ligand\n    do_optimization: Whether to perform an optimization on the ligand\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic docking with protein UUID\n    result = submit_docking_workflow(\n        protein="protein-uuid-123",\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CC(=O)Oc1ccccc1C(=O)O"}\n    )\n    \n    # Docking with optimization disabled\n    result = submit_docking_workflow(\n        protein=protein_obj,\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CCO"},\n        do_csearch=False,\n        do_optimization=False\n    )\n', 'inputSchema': {'properties': {'protein': {'anyOf': [{'type': 'string'}, {}], 'title': 'Protein'}, 'pocket': {'title': 'Pocket'}, 'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'do_csearch': {'default': True, 'title': 'Do Csearch', 'type': 'boolean'}, 'do_optimization': {'default': True, 'title': 'Do Optimization', 'type': 'boolean'}, 'name': {'default': 'Docking Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['protein', 'pocket'], 'type': 'object'}}, {'name': 'workflow_fetch_latest', 'description': 'Fetch the latest workflow data from the database.\n\nUpdates the workflow object with the most recent status and results.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to fetch\n    in_place: Whether to update the workflow object in place (default: False)\n    \nReturns:\n    Dictionary containing the updated workflow data including status and results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'in_place': {'default': False, 'title': 'In Place', 'type': 'boolean'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_wait_for_result', 'description': 'Wait for a workflow to complete and return the result.\n\nBlocks until the workflow completes, polling at specified intervals.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to wait for\n    poll_interval: Time in seconds between status checks (default: 5)\n    \nReturns:\n    Dictionary containing the completed workflow data including results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'poll_interval': {'default': 5, 'title': 'Poll Interval', 'type': 'integer'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_get_status', 'description': 'Get the current status of a workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with status information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_stop', 'description': 'Stop a running workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to stop\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete', 'description': 'Delete a workflow.\n\nThis permanently removes the workflow and its results from the database.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to delete\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'retrieve_workflow', 'description': 'Retrieve a workflow from the API.\n\nArgs:\n    uuid: The UUID of the workflow to retrieve\n    \nReturns:\n    Dictionary containing the complete workflow data\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'retrieve_calculation_molecules', 'description': 'Retrieve a list of molecules from a calculation.\n\nArgs:\n    uuid: The UUID of the calculation to retrieve molecules from\n    \nReturns:\n    List of dictionaries representing the molecules in the calculation\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'list_workflows', 'description': 'List workflows subject to the specified criteria.\n\nArgs:\n    parent_uuid: The UUID of the parent folder\n    name_contains: Substring to search for in workflow names\n    public: Filter workflows by their public status\n    starred: Filter workflows by their starred status\n    status: Filter workflows by their status\n    workflow_type: Filter workflows by their type\n    page: The page number to retrieve (default: 0)\n    size: The number of items per page (default: 10)\n    \nReturns:\n    List of workflow dictionaries that match the search criteria\n    \nRaises:\n    HTTPError: If the request to the API fails\n', 'inputSchema': {'properties': {'parent_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Parent Uuid'}, 'name_contains': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name Contains'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'status': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Status'}, 'workflow_type': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Type'}, 'page': {'default': 0, 'title': 'Page', 'type': 'integer'}, 'size': {'default': 10, 'title': 'Size', 'type': 'integer'}}, 'type': 'object'}}, {'name': 'workflow_update', 'description': 'Update workflow details.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to update\n    name: New name for the workflow (optional)\n    notes: New notes for the workflow (optional)\n    starred: Whether to star/unstar the workflow (optional)\n    public: Whether to make the workflow public/private (optional)\n    \nReturns:\n    Dictionary with updated workflow information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name'}, 'notes': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Notes'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_is_finished', 'description': 'Check if a workflow is finished.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to check\n    \nReturns:\n    Dictionary with workflow completion status\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete_data', 'description': 'Delete workflow data while keeping the workflow record.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}]})), metadata=None)
2025-08-02 14:02:13,110 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 14:02:13,110 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListToolsRequest
2025-08-02 14:02:13,111 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":2,"result":{"tools":[{"name":"submit_basic_calculation_workflow","description":"Submit a basic calculation workflow using Rowan v2 API.\\n\\nPerforms fundamental quantum chemistry calculations with configurable methods\\nand computational tasks. Returns a workflow object for tracking progress.\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"type":"string"},{"additionalProperties":true,"type":"object"},{}],"description":"The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object","title":"Initial Molecule"},"method":{"default":"uma_m_omol","description":"The method to use for the calculation (e.g., \'uma_m_omol\', \'gfn2-xtb\', \'r2scan_3c\')","title":"Method","type":"string"},"tasks":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"description":"List of computational tasks to perform. Optional[List[str]] (e.g. [\'optimize\']), Defaults to None","title":"Tasks"},"mode":{"default":"auto","description":"The mode to run the calculation in (\'auto\', \'rapid\', \'careful\', \'meticulous\')","title":"Mode","type":"string"},"engine":{"default":"omol25","description":"The computational engine to use (\'omol25\', \'xtb\', \'psi4\')","title":"Engine","type":"string"},"name":{"default":"Basic Calculation Workflow","description":"The name of the workflow for identification","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"UUID of the folder to place the workflow in (optional)","title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"description":"Maximum number of credits to use for the workflow (optional)","title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_conformer_search_workflow","description":"Submit a conformer search workflow using Rowan v2 API.\\n\\nExplores the conformational space of a molecule to find low-energy structures.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    conf_gen_mode: default to \\"rapid\\"\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    final_method: default: \\"aimnet2_wb97md3\\"\\n        Try other options, if user specifies\\n    solvent: Optional solvent for implicit solvation (e.g., \\"water\\", \\"ethanol\\")\\n    transition_state: Whether searching for transition state conformers (default: False)\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic conformer search\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CCCC\\",\\n        conf_gen_mode=\\"rapid\\"\\n    )\\n    \\n    # Careful search with solvent\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CC(C)CC(=O)O\\",\\n        conf_gen_mode=\\"careful\\",\\n        solvent=\\"water\\",\\n        final_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"conf_gen_mode":{"default":"rapid","title":"Conf Gen Mode","type":"string"},"final_method":{"default":"aimnet2_wb97md3","title":"Final Method","type":"string"},"solvent":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Solvent"},"transition_state":{"default":false,"title":"Transition State","type":"boolean"},"name":{"default":"Conformer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_solubility_workflow","description":"Submit a solubility prediction workflow using Rowan v2 API.\\n\\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\\nusing machine learning models.\\n\\nArgs:\\n    initial_smiles: SMILES string of the molecule\\n    solvents: List of solvents as SMILES or common names (e.g., [\\"water\\", \\"ethanol\\"])\\n        If None, uses default solvents\\n    temperatures: List of temperatures in Kelvin\\n        If None, uses default temperature range\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic solubility prediction\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)Nc1ccc(O)cc1\\",\\n        solvents=[\\"water\\", \\"ethanol\\"],\\n        temperatures=[298.15, 310.15]\\n    )\\n    \\n    # With SMILES solvents\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)O\\",\\n        solvents=[\\"O\\", \\"CCO\\", \\"CCCCCC\\"],\\n        temperatures=[273.15, 298.15, 323.15]\\n    )\\n","inputSchema":{"properties":{"initial_smiles":{"title":"Initial Smiles","type":"string"},"solvents":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Solvents"},"temperatures":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"default":null,"title":"Temperatures"},"name":{"default":"Solubility Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_smiles"],"type":"object"}},{"name":"submit_pka_workflow","description":"Submit a pKa prediction workflow using Rowan v2 API.\\n\\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\\nusing quantum chemistry calculations.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\\n    deprotonate_elements: List of elements to consider for deprotonation\\n        (e.g., [\\"N\\", \\"O\\", \\"S\\"]). If None, uses defaults\\n    protonate_elements: List of elements to consider for protonation\\n        (e.g., [\\"N\\", \\"O\\"]). If None, uses defaults\\n    mode: Calculation mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic pKa prediction\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"CC(=O)O\\",\\n        pka_range=(2, 8)\\n    )\\n    \\n    # Specific elements with meticulous mode\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"NC(C)C(=O)O\\",\\n        pka_range=(1, 14),\\n        deprotonate_elements=[\\"N\\", \\"O\\"],\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"pka_range":{"default":[2,12],"maxItems":2,"minItems":2,"prefixItems":[{"type":"number"},{"type":"number"}],"title":"Pka Range","type":"array"},"deprotonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Deprotonate Elements"},"protonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Protonate Elements"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"pKa Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_redox_potential_workflow","description":"Submit a redox potential calculation workflow using Rowan v2 API.\\n\\nCalculates reduction and/or oxidation potentials for a molecule using\\nquantum chemistry methods.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    reduction: Whether to calculate reduction potential (default: False)\\n    oxidization: Whether to calculate oxidation potential (default: True)\\n    mode: Calculation mode (default: \\"rapid\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic oxidation potential\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"CC1=CC=CC=C1\\",\\n        oxidization=True\\n    )\\n    \\n    # Both reduction and oxidation with careful mode\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"c1ccccc1\\",\\n        reduction=True,\\n        oxidization=True,\\n        mode=\\"careful\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"reduction":{"default":false,"title":"Reduction","type":"boolean"},"oxidization":{"default":true,"title":"Oxidization","type":"boolean"},"mode":{"default":"rapid","title":"Mode","type":"string"},"name":{"default":"Redox Potential Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_fukui_workflow","description":"Submit a Fukui indices calculation workflow using Rowan v2 API.\\n\\nCalculates Fukui indices to predict molecular reactivity at different sites.\\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    optimization_method: Method for geometry optimization (default: \\"gfn2_xtb\\")\\n        Common options: \\"gfn2_xtb\\", \\"r2scan_3c\\", \\"aimnet2_wb97md3\\"\\n    fukui_method: Method for Fukui calculation (default: \\"gfn1_xtb\\")\\n        Common options: \\"gfn1_xtb\\", \\"gfn2_xtb\\"\\n    solvent_settings: Optional solvent configuration dictionary\\n        Example: {\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic Fukui indices\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"CC(=O)O\\"\\n    )\\n    \\n    # With solvent and advanced methods\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"c1ccccc1N\\",\\n        optimization_method=\\"r2scan_3c\\",\\n        fukui_method=\\"gfn2_xtb\\",\\n        solvent_settings={\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"optimization_method":{"default":"gfn2_xtb","title":"Optimization Method","type":"string"},"fukui_method":{"default":"gfn1_xtb","title":"Fukui Method","type":"string"},"solvent_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Solvent Settings"},"name":{"default":"Fukui Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_tautomer_search_workflow","description":"Submit a tautomer search workflow using Rowan v2 API.\\n\\nSearches for different tautomeric forms of a molecule and evaluates their\\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    mode: Search mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic tautomer search\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"CC(=O)CC(=O)C\\"\\n    )\\n    \\n    # Meticulous search for complex molecule\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"c1ccc2c(c1)ncc(=O)[nH]2\\",\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"Tautomer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_descriptors_workflow","description":"Submit a molecular descriptors calculation workflow using Rowan v2 API.\\n\\nCalculates a comprehensive set of molecular descriptors including:\\n- Physical properties (MW, logP, TPSA, etc.)\\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\\n- Topological indices\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic descriptor calculation\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CC(=O)Nc1ccc(O)cc1\\"\\n    )\\n    \\n    # For complex molecule\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)C\\",\\n        name=\\"Caffeine Descriptors\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"name":{"default":"Descriptors Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_scan_workflow","description":"Submit a potential energy surface scan workflow using Rowan v2 API.\\n\\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\\nor dihedrals) to map the potential energy surface.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    scan_settings: Dictionary specifying scan parameters\\n        Example: {\\n            \\"type\\": \\"dihedral\\",  # or \\"bond\\", \\"angle\\"\\n            \\"atoms\\": [0, 1, 2, 3],  # atom indices\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 10\\n        }\\n    calculation_engine: Computational engine (default: \\"omol25\\")\\n        Options: \\"omol25\\", \\"xtb\\", \\"psi4\\"\\n    calculation_method: Method for calculations (default: \\"uma_m_omol\\")\\n        Options depend on engine\\n    wavefront_propagation: Use wavefront optimization (default: True)\\n        Speeds up scans by using previous geometries as starting points\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Dihedral scan\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC(C)CC\\",\\n        scan_settings={\\n            \\"type\\": \\"dihedral\\",\\n            \\"atoms\\": [0, 1, 2, 3],\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 15\\n        }\\n    )\\n    \\n    # Bond scan with advanced method\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC\\",\\n        scan_settings={\\n            \\"type\\": \\"bond\\",\\n            \\"atoms\\": [0, 1],\\n            \\"start\\": 1.0,\\n            \\"stop\\": 2.5,\\n            \\"step\\": 0.1\\n        },\\n        calculation_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"scan_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Scan Settings"},"calculation_engine":{"default":"omol25","title":"Calculation Engine","type":"string"},"calculation_method":{"default":"uma_m_omol","title":"Calculation Method","type":"string"},"wavefront_propagation":{"default":true,"title":"Wavefront Propagation","type":"boolean"},"name":{"default":"Scan Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_irc_workflow","description":"Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\\n\\nArgs:\\n    initial_molecule: The initial molecule to perform the IRC calculation on.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    method: The computational method to use for the IRC calculation (default: \\"uma_m_omol\\")\\n        See list of available methods for options\\n    engine: The computational engine to use for the calculation (default: \\"omol25\\")\\n        See list of available engines\\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\\n    step_size: The step size to use for the IRC calculation (default: 0.05)\\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted IRC workflow\\n    \\nExample:\\n    # Basic IRC calculation\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"[CH3].[CH3]\\"},\\n        method=\\"gfn2_xtb\\",\\n        max_irc_steps=50\\n    )\\n    \\n    # IRC with specific method and engine\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"CC(O)=CC\\"},\\n        method=\\"r2scan_3c\\",\\n        engine=\\"psi4\\",\\n        step_size=0.03\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"method":{"default":"uma_m_omol","title":"Method","type":"string"},"engine":{"default":"omol25","title":"Engine","type":"string"},"preopt":{"default":true,"title":"Preopt","type":"boolean"},"step_size":{"default":0.05,"title":"Step Size","type":"number"},"max_irc_steps":{"default":30,"title":"Max Irc Steps","type":"integer"},"name":{"default":"IRC Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"type":"object"}},{"name":"submit_protein_cofolding_workflow","description":"Submits a protein cofolding workflow to the API.\\n\\nArgs:\\n    initial_protein_sequences: The sequences of the proteins to be cofolded\\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\\n    use_msa_server: Whether to use the MSA server for the computation\\n    use_potentials: Whether to use potentials for the computation\\n    name: The name of the workflow\\n    model: The model to use for the computation\\n    folder_uuid: The UUID of the folder to store the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Protein dimer cofolding\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\n            \\"MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK\\",\\n            \\"MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF\\"\\n        ]\\n    )\\n    \\n    # Protein-ligand complex\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\"MGSSHHHHHHSSGLVPRGSH\\"],\\n        initial_smiles_list=[\\"CC(=O)O\\", \\"CCO\\"],\\n        ligand_binding_affinity_index=0,\\n        use_msa_server=True\\n    )\\n","inputSchema":{"properties":{"initial_protein_sequences":{"items":{"type":"string"},"title":"Initial Protein Sequences","type":"array"},"initial_smiles_list":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Initial Smiles List"},"ligand_binding_affinity_index":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Ligand Binding Affinity Index"},"use_msa_server":{"default":true,"title":"Use Msa Server","type":"boolean"},"use_potentials":{"default":false,"title":"Use Potentials","type":"boolean"},"name":{"default":"Cofolding Workflow","title":"Name","type":"string"},"model":{"default":"boltz_2","title":"Model","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_protein_sequences"],"type":"object"}},{"name":"submit_docking_workflow","description":"Submits a Docking workflow to the API.\\n\\nArgs:\\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\\n    pocket: The pocket to dock into\\n    initial_molecule: The initial molecule to be docked.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    do_csearch: Whether to perform a conformational search on the ligand\\n    do_optimization: Whether to perform an optimization on the ligand\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic docking with protein UUID\\n    result = submit_docking_workflow(\\n        protein=\\"protein-uuid-123\\",\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CC(=O)Oc1ccccc1C(=O)O\\"}\\n    )\\n    \\n    # Docking with optimization disabled\\n    result = submit_docking_workflow(\\n        protein=protein_obj,\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CCO\\"},\\n        do_csearch=False,\\n        do_optimization=False\\n    )\\n","inputSchema":{"properties":{"protein":{"anyOf":[{"type":"string"},{}],"title":"Protein"},"pocket":{"title":"Pocket"},"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"do_csearch":{"default":true,"title":"Do Csearch","type":"boolean"},"do_optimization":{"default":true,"title":"Do Optimization","type":"boolean"},"name":{"default":"Docking Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["protein","pocket"],"type":"object"}},{"name":"workflow_fetch_latest","description":"Fetch the latest workflow data from the database.\\n\\nUpdates the workflow object with the most recent status and results.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to fetch\\n    in_place: Whether to update the workflow object in place (default: False)\\n    \\nReturns:\\n    Dictionary containing the updated workflow data including status and results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"in_place":{"default":false,"title":"In Place","type":"boolean"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_wait_for_result","description":"Wait for a workflow to complete and return the result.\\n\\nBlocks until the workflow completes, polling at specified intervals.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to wait for\\n    poll_interval: Time in seconds between status checks (default: 5)\\n    \\nReturns:\\n    Dictionary containing the completed workflow data including results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"poll_interval":{"default":5,"title":"Poll Interval","type":"integer"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_get_status","description":"Get the current status of a workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with status information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_stop","description":"Stop a running workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to stop\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete","description":"Delete a workflow.\\n\\nThis permanently removes the workflow and its results from the database.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to delete\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"retrieve_workflow","description":"Retrieve a workflow from the API.\\n\\nArgs:\\n    uuid: The UUID of the workflow to retrieve\\n    \\nReturns:\\n    Dictionary containing the complete workflow data\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"retrieve_calculation_molecules","description":"Retrieve a list of molecules from a calculation.\\n\\nArgs:\\n    uuid: The UUID of the calculation to retrieve molecules from\\n    \\nReturns:\\n    List of dictionaries representing the molecules in the calculation\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"list_workflows","description":"List workflows subject to the specified criteria.\\n\\nArgs:\\n    parent_uuid: The UUID of the parent folder\\n    name_contains: Substring to search for in workflow names\\n    public: Filter workflows by their public status\\n    starred: Filter workflows by their starred status\\n    status: Filter workflows by their status\\n    workflow_type: Filter workflows by their type\\n    page: The page number to retrieve (default: 0)\\n    size: The number of items per page (default: 10)\\n    \\nReturns:\\n    List of workflow dictionaries that match the search criteria\\n    \\nRaises:\\n    HTTPError: If the request to the API fails\\n","inputSchema":{"properties":{"parent_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Parent Uuid"},"name_contains":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name Contains"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"status":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Status"},"workflow_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Workflow Type"},"page":{"default":0,"title":"Page","type":"integer"},"size":{"default":10,"title":"Size","type":"integer"}},"type":"object"}},{"name":"workflow_update","description":"Update workflow details.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to update\\n    name: New name for the workflow (optional)\\n    notes: New notes for the workflow (optional)\\n    starred: Whether to star/unstar the workflow (optional)\\n    public: Whether to make the workflow public/private (optional)\\n    \\nReturns:\\n    Dictionary with updated workflow information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name"},"notes":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Notes"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_is_finished","description":"Check if a workflow is finished.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to check\\n    \\nReturns:\\n    Dictionary with workflow completion status\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete_data","description":"Delete workflow data while keeping the workflow record.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}}]}}\r\n\r\n'
2025-08-02 14:02:13,112 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=3, result={'tools': [{'name': 'submit_basic_calculation_workflow', 'description': 'Submit a basic calculation workflow using Rowan v2 API.\n\nPerforms fundamental quantum chemistry calculations with configurable methods\nand computational tasks. Returns a workflow object for tracking progress.\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'type': 'string'}, {'additionalProperties': True, 'type': 'object'}, {}], 'description': 'The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object', 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'description': "The method to use for the calculation (e.g., 'uma_m_omol', 'gfn2-xtb', 'r2scan_3c')", 'title': 'Method', 'type': 'string'}, 'tasks': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'description': "List of computational tasks to perform. Optional[List[str]] (e.g. ['optimize']), Defaults to None", 'title': 'Tasks'}, 'mode': {'default': 'auto', 'description': "The mode to run the calculation in ('auto', 'rapid', 'careful', 'meticulous')", 'title': 'Mode', 'type': 'string'}, 'engine': {'default': 'omol25', 'description': "The computational engine to use ('omol25', 'xtb', 'psi4')", 'title': 'Engine', 'type': 'string'}, 'name': {'default': 'Basic Calculation Workflow', 'description': 'The name of the workflow for identification', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'UUID of the folder to place the workflow in (optional)', 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'description': 'Maximum number of credits to use for the workflow (optional)', 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_conformer_search_workflow', 'description': 'Submit a conformer search workflow using Rowan v2 API.\n\nExplores the conformational space of a molecule to find low-energy structures.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    conf_gen_mode: default to "rapid"\n        Options: "rapid", "careful", "meticulous"\n    final_method: default: "aimnet2_wb97md3"\n        Try other options, if user specifies\n    solvent: Optional solvent for implicit solvation (e.g., "water", "ethanol")\n    transition_state: Whether searching for transition state conformers (default: False)\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic conformer search\n    result = submit_conformer_search_workflow(\n        initial_molecule="CCCC",\n        conf_gen_mode="rapid"\n    )\n    \n    # Careful search with solvent\n    result = submit_conformer_search_workflow(\n        initial_molecule="CC(C)CC(=O)O",\n        conf_gen_mode="careful",\n        solvent="water",\n        final_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'conf_gen_mode': {'default': 'rapid', 'title': 'Conf Gen Mode', 'type': 'string'}, 'final_method': {'default': 'aimnet2_wb97md3', 'title': 'Final Method', 'type': 'string'}, 'solvent': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Solvent'}, 'transition_state': {'default': False, 'title': 'Transition State', 'type': 'boolean'}, 'name': {'default': 'Conformer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_solubility_workflow', 'description': 'Submit a solubility prediction workflow using Rowan v2 API.\n\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\nusing machine learning models.\n\nArgs:\n    initial_smiles: SMILES string of the molecule\n    solvents: List of solvents as SMILES or common names (e.g., ["water", "ethanol"])\n        If None, uses default solvents\n    temperatures: List of temperatures in Kelvin\n        If None, uses default temperature range\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic solubility prediction\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)Nc1ccc(O)cc1",\n        solvents=["water", "ethanol"],\n        temperatures=[298.15, 310.15]\n    )\n    \n    # With SMILES solvents\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)O",\n        solvents=["O", "CCO", "CCCCCC"],\n        temperatures=[273.15, 298.15, 323.15]\n    )\n', 'inputSchema': {'properties': {'initial_smiles': {'title': 'Initial Smiles', 'type': 'string'}, 'solvents': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Solvents'}, 'temperatures': {'anyOf': [{'items': {'type': 'number'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Temperatures'}, 'name': {'default': 'Solubility Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_smiles'], 'type': 'object'}}, {'name': 'submit_pka_workflow', 'description': 'Submit a pKa prediction workflow using Rowan v2 API.\n\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\nusing quantum chemistry calculations.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\n    deprotonate_elements: List of elements to consider for deprotonation\n        (e.g., ["N", "O", "S"]). If None, uses defaults\n    protonate_elements: List of elements to consider for protonation\n        (e.g., ["N", "O"]). If None, uses defaults\n    mode: Calculation mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic pKa prediction\n    result = submit_pka_workflow(\n        initial_molecule="CC(=O)O",\n        pka_range=(2, 8)\n    )\n    \n    # Specific elements with meticulous mode\n    result = submit_pka_workflow(\n        initial_molecule="NC(C)C(=O)O",\n        pka_range=(1, 14),\n        deprotonate_elements=["N", "O"],\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'pka_range': {'default': [2, 12], 'maxItems': 2, 'minItems': 2, 'prefixItems': [{'type': 'number'}, {'type': 'number'}], 'title': 'Pka Range', 'type': 'array'}, 'deprotonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Deprotonate Elements'}, 'protonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Protonate Elements'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'pKa Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_redox_potential_workflow', 'description': 'Submit a redox potential calculation workflow using Rowan v2 API.\n\nCalculates reduction and/or oxidation potentials for a molecule using\nquantum chemistry methods.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    reduction: Whether to calculate reduction potential (default: False)\n    oxidization: Whether to calculate oxidation potential (default: True)\n    mode: Calculation mode (default: "rapid")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic oxidation potential\n    result = submit_redox_potential_workflow(\n        initial_molecule="CC1=CC=CC=C1",\n        oxidization=True\n    )\n    \n    # Both reduction and oxidation with careful mode\n    result = submit_redox_potential_workflow(\n        initial_molecule="c1ccccc1",\n        reduction=True,\n        oxidization=True,\n        mode="careful"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'reduction': {'default': False, 'title': 'Reduction', 'type': 'boolean'}, 'oxidization': {'default': True, 'title': 'Oxidization', 'type': 'boolean'}, 'mode': {'default': 'rapid', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Redox Potential Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_fukui_workflow', 'description': 'Submit a Fukui indices calculation workflow using Rowan v2 API.\n\nCalculates Fukui indices to predict molecular reactivity at different sites.\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    optimization_method: Method for geometry optimization (default: "gfn2_xtb")\n        Common options: "gfn2_xtb", "r2scan_3c", "aimnet2_wb97md3"\n    fukui_method: Method for Fukui calculation (default: "gfn1_xtb")\n        Common options: "gfn1_xtb", "gfn2_xtb"\n    solvent_settings: Optional solvent configuration dictionary\n        Example: {"solvent": "water", "model": "alpb"}\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic Fukui indices\n    result = submit_fukui_workflow(\n        initial_molecule="CC(=O)O"\n    )\n    \n    # With solvent and advanced methods\n    result = submit_fukui_workflow(\n        initial_molecule="c1ccccc1N",\n        optimization_method="r2scan_3c",\n        fukui_method="gfn2_xtb",\n        solvent_settings={"solvent": "water", "model": "alpb"}\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'optimization_method': {'default': 'gfn2_xtb', 'title': 'Optimization Method', 'type': 'string'}, 'fukui_method': {'default': 'gfn1_xtb', 'title': 'Fukui Method', 'type': 'string'}, 'solvent_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Solvent Settings'}, 'name': {'default': 'Fukui Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_tautomer_search_workflow', 'description': 'Submit a tautomer search workflow using Rowan v2 API.\n\nSearches for different tautomeric forms of a molecule and evaluates their\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    mode: Search mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic tautomer search\n    result = submit_tautomer_search_workflow(\n        initial_molecule="CC(=O)CC(=O)C"\n    )\n    \n    # Meticulous search for complex molecule\n    result = submit_tautomer_search_workflow(\n        initial_molecule="c1ccc2c(c1)ncc(=O)[nH]2",\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Tautomer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_descriptors_workflow', 'description': 'Submit a molecular descriptors calculation workflow using Rowan v2 API.\n\nCalculates a comprehensive set of molecular descriptors including:\n- Physical properties (MW, logP, TPSA, etc.)\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\n- Topological indices\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic descriptor calculation\n    result = submit_descriptors_workflow(\n        initial_molecule="CC(=O)Nc1ccc(O)cc1"\n    )\n    \n    # For complex molecule\n    result = submit_descriptors_workflow(\n        initial_molecule="CN1C=NC2=C1C(=O)N(C(=O)N2C)C",\n        name="Caffeine Descriptors"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'name': {'default': 'Descriptors Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_scan_workflow', 'description': 'Submit a potential energy surface scan workflow using Rowan v2 API.\n\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\nor dihedrals) to map the potential energy surface.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    scan_settings: Dictionary specifying scan parameters\n        Example: {\n            "type": "dihedral",  # or "bond", "angle"\n            "atoms": [0, 1, 2, 3],  # atom indices\n            "start": -180,\n            "stop": 180,\n            "step": 10\n        }\n    calculation_engine: Computational engine (default: "omol25")\n        Options: "omol25", "xtb", "psi4"\n    calculation_method: Method for calculations (default: "uma_m_omol")\n        Options depend on engine\n    wavefront_propagation: Use wavefront optimization (default: True)\n        Speeds up scans by using previous geometries as starting points\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Dihedral scan\n    result = submit_scan_workflow(\n        initial_molecule="CC(C)CC",\n        scan_settings={\n            "type": "dihedral",\n            "atoms": [0, 1, 2, 3],\n            "start": -180,\n            "stop": 180,\n            "step": 15\n        }\n    )\n    \n    # Bond scan with advanced method\n    result = submit_scan_workflow(\n        initial_molecule="CC",\n        scan_settings={\n            "type": "bond",\n            "atoms": [0, 1],\n            "start": 1.0,\n            "stop": 2.5,\n            "step": 0.1\n        },\n        calculation_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'scan_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Scan Settings'}, 'calculation_engine': {'default': 'omol25', 'title': 'Calculation Engine', 'type': 'string'}, 'calculation_method': {'default': 'uma_m_omol', 'title': 'Calculation Method', 'type': 'string'}, 'wavefront_propagation': {'default': True, 'title': 'Wavefront Propagation', 'type': 'boolean'}, 'name': {'default': 'Scan Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_irc_workflow', 'description': 'Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\n\nArgs:\n    initial_molecule: The initial molecule to perform the IRC calculation on.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    method: The computational method to use for the IRC calculation (default: "uma_m_omol")\n        See list of available methods for options\n    engine: The computational engine to use for the calculation (default: "omol25")\n        See list of available engines\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\n    step_size: The step size to use for the IRC calculation (default: 0.05)\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted IRC workflow\n    \nExample:\n    # Basic IRC calculation\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "[CH3].[CH3]"},\n        method="gfn2_xtb",\n        max_irc_steps=50\n    )\n    \n    # IRC with specific method and engine\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "CC(O)=CC"},\n        method="r2scan_3c",\n        engine="psi4",\n        step_size=0.03\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'title': 'Method', 'type': 'string'}, 'engine': {'default': 'omol25', 'title': 'Engine', 'type': 'string'}, 'preopt': {'default': True, 'title': 'Preopt', 'type': 'boolean'}, 'step_size': {'default': 0.05, 'title': 'Step Size', 'type': 'number'}, 'max_irc_steps': {'default': 30, 'title': 'Max Irc Steps', 'type': 'integer'}, 'name': {'default': 'IRC Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'type': 'object'}}, {'name': 'submit_protein_cofolding_workflow', 'description': 'Submits a protein cofolding workflow to the API.\n\nArgs:\n    initial_protein_sequences: The sequences of the proteins to be cofolded\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\n    use_msa_server: Whether to use the MSA server for the computation\n    use_potentials: Whether to use potentials for the computation\n    name: The name of the workflow\n    model: The model to use for the computation\n    folder_uuid: The UUID of the folder to store the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Protein dimer cofolding\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=[\n            "MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK",\n            "MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF"\n        ]\n    )\n    \n    # Protein-ligand complex\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=["MGSSHHHHHHSSGLVPRGSH"],\n        initial_smiles_list=["CC(=O)O", "CCO"],\n        ligand_binding_affinity_index=0,\n        use_msa_server=True\n    )\n', 'inputSchema': {'properties': {'initial_protein_sequences': {'items': {'type': 'string'}, 'title': 'Initial Protein Sequences', 'type': 'array'}, 'initial_smiles_list': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Initial Smiles List'}, 'ligand_binding_affinity_index': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Ligand Binding Affinity Index'}, 'use_msa_server': {'default': True, 'title': 'Use Msa Server', 'type': 'boolean'}, 'use_potentials': {'default': False, 'title': 'Use Potentials', 'type': 'boolean'}, 'name': {'default': 'Cofolding Workflow', 'title': 'Name', 'type': 'string'}, 'model': {'default': 'boltz_2', 'title': 'Model', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_protein_sequences'], 'type': 'object'}}, {'name': 'submit_docking_workflow', 'description': 'Submits a Docking workflow to the API.\n\nArgs:\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\n    pocket: The pocket to dock into\n    initial_molecule: The initial molecule to be docked.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    do_csearch: Whether to perform a conformational search on the ligand\n    do_optimization: Whether to perform an optimization on the ligand\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic docking with protein UUID\n    result = submit_docking_workflow(\n        protein="protein-uuid-123",\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CC(=O)Oc1ccccc1C(=O)O"}\n    )\n    \n    # Docking with optimization disabled\n    result = submit_docking_workflow(\n        protein=protein_obj,\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CCO"},\n        do_csearch=False,\n        do_optimization=False\n    )\n', 'inputSchema': {'properties': {'protein': {'anyOf': [{'type': 'string'}, {}], 'title': 'Protein'}, 'pocket': {'title': 'Pocket'}, 'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'do_csearch': {'default': True, 'title': 'Do Csearch', 'type': 'boolean'}, 'do_optimization': {'default': True, 'title': 'Do Optimization', 'type': 'boolean'}, 'name': {'default': 'Docking Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['protein', 'pocket'], 'type': 'object'}}, {'name': 'workflow_fetch_latest', 'description': 'Fetch the latest workflow data from the database.\n\nUpdates the workflow object with the most recent status and results.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to fetch\n    in_place: Whether to update the workflow object in place (default: False)\n    \nReturns:\n    Dictionary containing the updated workflow data including status and results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'in_place': {'default': False, 'title': 'In Place', 'type': 'boolean'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_wait_for_result', 'description': 'Wait for a workflow to complete and return the result.\n\nBlocks until the workflow completes, polling at specified intervals.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to wait for\n    poll_interval: Time in seconds between status checks (default: 5)\n    \nReturns:\n    Dictionary containing the completed workflow data including results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'poll_interval': {'default': 5, 'title': 'Poll Interval', 'type': 'integer'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_get_status', 'description': 'Get the current status of a workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with status information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_stop', 'description': 'Stop a running workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to stop\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete', 'description': 'Delete a workflow.\n\nThis permanently removes the workflow and its results from the database.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to delete\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'retrieve_workflow', 'description': 'Retrieve a workflow from the API.\n\nArgs:\n    uuid: The UUID of the workflow to retrieve\n    \nReturns:\n    Dictionary containing the complete workflow data\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'retrieve_calculation_molecules', 'description': 'Retrieve a list of molecules from a calculation.\n\nArgs:\n    uuid: The UUID of the calculation to retrieve molecules from\n    \nReturns:\n    List of dictionaries representing the molecules in the calculation\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'list_workflows', 'description': 'List workflows subject to the specified criteria.\n\nArgs:\n    parent_uuid: The UUID of the parent folder\n    name_contains: Substring to search for in workflow names\n    public: Filter workflows by their public status\n    starred: Filter workflows by their starred status\n    status: Filter workflows by their status\n    workflow_type: Filter workflows by their type\n    page: The page number to retrieve (default: 0)\n    size: The number of items per page (default: 10)\n    \nReturns:\n    List of workflow dictionaries that match the search criteria\n    \nRaises:\n    HTTPError: If the request to the API fails\n', 'inputSchema': {'properties': {'parent_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Parent Uuid'}, 'name_contains': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name Contains'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'status': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Status'}, 'workflow_type': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Type'}, 'page': {'default': 0, 'title': 'Page', 'type': 'integer'}, 'size': {'default': 10, 'title': 'Size', 'type': 'integer'}}, 'type': 'object'}}, {'name': 'workflow_update', 'description': 'Update workflow details.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to update\n    name: New name for the workflow (optional)\n    notes: New notes for the workflow (optional)\n    starred: Whether to star/unstar the workflow (optional)\n    public: Whether to make the workflow public/private (optional)\n    \nReturns:\n    Dictionary with updated workflow information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name'}, 'notes': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Notes'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_is_finished', 'description': 'Check if a workflow is finished.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to check\n    \nReturns:\n    Dictionary with workflow completion status\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete_data', 'description': 'Delete workflow data while keeping the workflow record.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}]})), metadata=None)
2025-08-02 14:02:13,115 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:02:13,115 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":3,"result":{"tools":[{"name":"submit_basic_calculation_workflow","description":"Submit a basic calculation workflow using Rowan v2 API.\\n\\nPerforms fundamental quantum chemistry calculations with configurable methods\\nand computational tasks. Returns a workflow object for tracking progress.\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"type":"string"},{"additionalProperties":true,"type":"object"},{}],"description":"The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object","title":"Initial Molecule"},"method":{"default":"uma_m_omol","description":"The method to use for the calculation (e.g., \'uma_m_omol\', \'gfn2-xtb\', \'r2scan_3c\')","title":"Method","type":"string"},"tasks":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"description":"List of computational tasks to perform. Optional[List[str]] (e.g. [\'optimize\']), Defaults to None","title":"Tasks"},"mode":{"default":"auto","description":"The mode to run the calculation in (\'auto\', \'rapid\', \'careful\', \'meticulous\')","title":"Mode","type":"string"},"engine":{"default":"omol25","description":"The computational engine to use (\'omol25\', \'xtb\', \'psi4\')","title":"Engine","type":"string"},"name":{"default":"Basic Calculation Workflow","description":"The name of the workflow for identification","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"UUID of the folder to place the workflow in (optional)","title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"description":"Maximum number of credits to use for the workflow (optional)","title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_conformer_search_workflow","description":"Submit a conformer search workflow using Rowan v2 API.\\n\\nExplores the conformational space of a molecule to find low-energy structures.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    conf_gen_mode: default to \\"rapid\\"\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    final_method: default: \\"aimnet2_wb97md3\\"\\n        Try other options, if user specifies\\n    solvent: Optional solvent for implicit solvation (e.g., \\"water\\", \\"ethanol\\")\\n    transition_state: Whether searching for transition state conformers (default: False)\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic conformer search\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CCCC\\",\\n        conf_gen_mode=\\"rapid\\"\\n    )\\n    \\n    # Careful search with solvent\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CC(C)CC(=O)O\\",\\n        conf_gen_mode=\\"careful\\",\\n        solvent=\\"water\\",\\n        final_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"conf_gen_mode":{"default":"rapid","title":"Conf Gen Mode","type":"string"},"final_method":{"default":"aimnet2_wb97md3","title":"Final Method","type":"string"},"solvent":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Solvent"},"transition_state":{"default":false,"title":"Transition State","type":"boolean"},"name":{"default":"Conformer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_solubility_workflow","description":"Submit a solubility prediction workflow using Rowan v2 API.\\n\\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\\nusing machine learning models.\\n\\nArgs:\\n    initial_smiles: SMILES string of the molecule\\n    solvents: List of solvents as SMILES or common names (e.g., [\\"water\\", \\"ethanol\\"])\\n        If None, uses default solvents\\n    temperatures: List of temperatures in Kelvin\\n        If None, uses default temperature range\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic solubility prediction\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)Nc1ccc(O)cc1\\",\\n        solvents=[\\"water\\", \\"ethanol\\"],\\n        temperatures=[298.15, 310.15]\\n    )\\n    \\n    # With SMILES solvents\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)O\\",\\n        solvents=[\\"O\\", \\"CCO\\", \\"CCCCCC\\"],\\n        temperatures=[273.15, 298.15, 323.15]\\n    )\\n","inputSchema":{"properties":{"initial_smiles":{"title":"Initial Smiles","type":"string"},"solvents":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Solvents"},"temperatures":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"default":null,"title":"Temperatures"},"name":{"default":"Solubility Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_smiles"],"type":"object"}},{"name":"submit_pka_workflow","description":"Submit a pKa prediction workflow using Rowan v2 API.\\n\\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\\nusing quantum chemistry calculations.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\\n    deprotonate_elements: List of elements to consider for deprotonation\\n        (e.g., [\\"N\\", \\"O\\", \\"S\\"]). If None, uses defaults\\n    protonate_elements: List of elements to consider for protonation\\n        (e.g., [\\"N\\", \\"O\\"]). If None, uses defaults\\n    mode: Calculation mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic pKa prediction\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"CC(=O)O\\",\\n        pka_range=(2, 8)\\n    )\\n    \\n    # Specific elements with meticulous mode\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"NC(C)C(=O)O\\",\\n        pka_range=(1, 14),\\n        deprotonate_elements=[\\"N\\", \\"O\\"],\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"pka_range":{"default":[2,12],"maxItems":2,"minItems":2,"prefixItems":[{"type":"number"},{"type":"number"}],"title":"Pka Range","type":"array"},"deprotonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Deprotonate Elements"},"protonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Protonate Elements"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"pKa Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_redox_potential_workflow","description":"Submit a redox potential calculation workflow using Rowan v2 API.\\n\\nCalculates reduction and/or oxidation potentials for a molecule using\\nquantum chemistry methods.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    reduction: Whether to calculate reduction potential (default: False)\\n    oxidization: Whether to calculate oxidation potential (default: True)\\n    mode: Calculation mode (default: \\"rapid\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic oxidation potential\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"CC1=CC=CC=C1\\",\\n        oxidization=True\\n    )\\n    \\n    # Both reduction and oxidation with careful mode\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"c1ccccc1\\",\\n        reduction=True,\\n        oxidization=True,\\n        mode=\\"careful\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"reduction":{"default":false,"title":"Reduction","type":"boolean"},"oxidization":{"default":true,"title":"Oxidization","type":"boolean"},"mode":{"default":"rapid","title":"Mode","type":"string"},"name":{"default":"Redox Potential Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_fukui_workflow","description":"Submit a Fukui indices calculation workflow using Rowan v2 API.\\n\\nCalculates Fukui indices to predict molecular reactivity at different sites.\\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    optimization_method: Method for geometry optimization (default: \\"gfn2_xtb\\")\\n        Common options: \\"gfn2_xtb\\", \\"r2scan_3c\\", \\"aimnet2_wb97md3\\"\\n    fukui_method: Method for Fukui calculation (default: \\"gfn1_xtb\\")\\n        Common options: \\"gfn1_xtb\\", \\"gfn2_xtb\\"\\n    solvent_settings: Optional solvent configuration dictionary\\n        Example: {\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic Fukui indices\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"CC(=O)O\\"\\n    )\\n    \\n    # With solvent and advanced methods\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"c1ccccc1N\\",\\n        optimization_method=\\"r2scan_3c\\",\\n        fukui_method=\\"gfn2_xtb\\",\\n        solvent_settings={\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"optimization_method":{"default":"gfn2_xtb","title":"Optimization Method","type":"string"},"fukui_method":{"default":"gfn1_xtb","title":"Fukui Method","type":"string"},"solvent_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Solvent Settings"},"name":{"default":"Fukui Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_tautomer_search_workflow","description":"Submit a tautomer search workflow using Rowan v2 API.\\n\\nSearches for different tautomeric forms of a molecule and evaluates their\\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    mode: Search mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic tautomer search\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"CC(=O)CC(=O)C\\"\\n    )\\n    \\n    # Meticulous search for complex molecule\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"c1ccc2c(c1)ncc(=O)[nH]2\\",\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"Tautomer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_descriptors_workflow","description":"Submit a molecular descriptors calculation workflow using Rowan v2 API.\\n\\nCalculates a comprehensive set of molecular descriptors including:\\n- Physical properties (MW, logP, TPSA, etc.)\\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\\n- Topological indices\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic descriptor calculation\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CC(=O)Nc1ccc(O)cc1\\"\\n    )\\n    \\n    # For complex molecule\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)C\\",\\n        name=\\"Caffeine Descriptors\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"name":{"default":"Descriptors Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_scan_workflow","description":"Submit a potential energy surface scan workflow using Rowan v2 API.\\n\\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\\nor dihedrals) to map the potential energy surface.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    scan_settings: Dictionary specifying scan parameters\\n        Example: {\\n            \\"type\\": \\"dihedral\\",  # or \\"bond\\", \\"angle\\"\\n            \\"atoms\\": [0, 1, 2, 3],  # atom indices\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 10\\n        }\\n    calculation_engine: Computational engine (default: \\"omol25\\")\\n        Options: \\"omol25\\", \\"xtb\\", \\"psi4\\"\\n    calculation_method: Method for calculations (default: \\"uma_m_omol\\")\\n        Options depend on engine\\n    wavefront_propagation: Use wavefront optimization (default: True)\\n        Speeds up scans by using previous geometries as starting points\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Dihedral scan\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC(C)CC\\",\\n        scan_settings={\\n            \\"type\\": \\"dihedral\\",\\n            \\"atoms\\": [0, 1, 2, 3],\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 15\\n        }\\n    )\\n    \\n    # Bond scan with advanced method\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC\\",\\n        scan_settings={\\n            \\"type\\": \\"bond\\",\\n            \\"atoms\\": [0, 1],\\n            \\"start\\": 1.0,\\n            \\"stop\\": 2.5,\\n            \\"step\\": 0.1\\n        },\\n        calculation_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"scan_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Scan Settings"},"calculation_engine":{"default":"omol25","title":"Calculation Engine","type":"string"},"calculation_method":{"default":"uma_m_omol","title":"Calculation Method","type":"string"},"wavefront_propagation":{"default":true,"title":"Wavefront Propagation","type":"boolean"},"name":{"default":"Scan Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_irc_workflow","description":"Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\\n\\nArgs:\\n    initial_molecule: The initial molecule to perform the IRC calculation on.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    method: The computational method to use for the IRC calculation (default: \\"uma_m_omol\\")\\n        See list of available methods for options\\n    engine: The computational engine to use for the calculation (default: \\"omol25\\")\\n        See list of available engines\\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\\n    step_size: The step size to use for the IRC calculation (default: 0.05)\\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted IRC workflow\\n    \\nExample:\\n    # Basic IRC calculation\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"[CH3].[CH3]\\"},\\n        method=\\"gfn2_xtb\\",\\n        max_irc_steps=50\\n    )\\n    \\n    # IRC with specific method and engine\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"CC(O)=CC\\"},\\n        method=\\"r2scan_3c\\",\\n        engine=\\"psi4\\",\\n        step_size=0.03\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"method":{"default":"uma_m_omol","title":"Method","type":"string"},"engine":{"default":"omol25","title":"Engine","type":"string"},"preopt":{"default":true,"title":"Preopt","type":"boolean"},"step_size":{"default":0.05,"title":"Step Size","type":"number"},"max_irc_steps":{"default":30,"title":"Max Irc Steps","type":"integer"},"name":{"default":"IRC Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"type":"object"}},{"name":"submit_protein_cofolding_workflow","description":"Submits a protein cofolding workflow to the API.\\n\\nArgs:\\n    initial_protein_sequences: The sequences of the proteins to be cofolded\\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\\n    use_msa_server: Whether to use the MSA server for the computation\\n    use_potentials: Whether to use potentials for the computation\\n    name: The name of the workflow\\n    model: The model to use for the computation\\n    folder_uuid: The UUID of the folder to store the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Protein dimer cofolding\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\n            \\"MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK\\",\\n            \\"MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF\\"\\n        ]\\n    )\\n    \\n    # Protein-ligand complex\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\"MGSSHHHHHHSSGLVPRGSH\\"],\\n        initial_smiles_list=[\\"CC(=O)O\\", \\"CCO\\"],\\n        ligand_binding_affinity_index=0,\\n        use_msa_server=True\\n    )\\n","inputSchema":{"properties":{"initial_protein_sequences":{"items":{"type":"string"},"title":"Initial Protein Sequences","type":"array"},"initial_smiles_list":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Initial Smiles List"},"ligand_binding_affinity_index":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Ligand Binding Affinity Index"},"use_msa_server":{"default":true,"title":"Use Msa Server","type":"boolean"},"use_potentials":{"default":false,"title":"Use Potentials","type":"boolean"},"name":{"default":"Cofolding Workflow","title":"Name","type":"string"},"model":{"default":"boltz_2","title":"Model","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_protein_sequences"],"type":"object"}},{"name":"submit_docking_workflow","description":"Submits a Docking workflow to the API.\\n\\nArgs:\\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\\n    pocket: The pocket to dock into\\n    initial_molecule: The initial molecule to be docked.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    do_csearch: Whether to perform a conformational search on the ligand\\n    do_optimization: Whether to perform an optimization on the ligand\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic docking with protein UUID\\n    result = submit_docking_workflow(\\n        protein=\\"protein-uuid-123\\",\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CC(=O)Oc1ccccc1C(=O)O\\"}\\n    )\\n    \\n    # Docking with optimization disabled\\n    result = submit_docking_workflow(\\n        protein=protein_obj,\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CCO\\"},\\n        do_csearch=False,\\n        do_optimization=False\\n    )\\n","inputSchema":{"properties":{"protein":{"anyOf":[{"type":"string"},{}],"title":"Protein"},"pocket":{"title":"Pocket"},"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"do_csearch":{"default":true,"title":"Do Csearch","type":"boolean"},"do_optimization":{"default":true,"title":"Do Optimization","type":"boolean"},"name":{"default":"Docking Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["protein","pocket"],"type":"object"}},{"name":"workflow_fetch_latest","description":"Fetch the latest workflow data from the database.\\n\\nUpdates the workflow object with the most recent status and results.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to fetch\\n    in_place: Whether to update the workflow object in place (default: False)\\n    \\nReturns:\\n    Dictionary containing the updated workflow data including status and results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"in_place":{"default":false,"title":"In Place","type":"boolean"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_wait_for_result","description":"Wait for a workflow to complete and return the result.\\n\\nBlocks until the workflow completes, polling at specified intervals.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to wait for\\n    poll_interval: Time in seconds between status checks (default: 5)\\n    \\nReturns:\\n    Dictionary containing the completed workflow data including results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"poll_interval":{"default":5,"title":"Poll Interval","type":"integer"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_get_status","description":"Get the current status of a workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with status information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_stop","description":"Stop a running workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to stop\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete","description":"Delete a workflow.\\n\\nThis permanently removes the workflow and its results from the database.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to delete\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"retrieve_workflow","description":"Retrieve a workflow from the API.\\n\\nArgs:\\n    uuid: The UUID of the workflow to retrieve\\n    \\nReturns:\\n    Dictionary containing the complete workflow data\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"retrieve_calculation_molecules","description":"Retrieve a list of molecules from a calculation.\\n\\nArgs:\\n    uuid: The UUID of the calculation to retrieve molecules from\\n    \\nReturns:\\n    List of dictionaries representing the molecules in the calculation\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"list_workflows","description":"List workflows subject to the specified criteria.\\n\\nArgs:\\n    parent_uuid: The UUID of the parent folder\\n    name_contains: Substring to search for in workflow names\\n    public: Filter workflows by their public status\\n    starred: Filter workflows by their starred status\\n    status: Filter workflows by their status\\n    workflow_type: Filter workflows by their type\\n    page: The page number to retrieve (default: 0)\\n    size: The number of items per page (default: 10)\\n    \\nReturns:\\n    List of workflow dictionaries that match the search criteria\\n    \\nRaises:\\n    HTTPError: If the request to the API fails\\n","inputSchema":{"properties":{"parent_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Parent Uuid"},"name_contains":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name Contains"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"status":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Status"},"workflow_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Workflow Type"},"page":{"default":0,"title":"Page","type":"integer"},"size":{"default":10,"title":"Size","type":"integer"}},"type":"object"}},{"name":"workflow_update","description":"Update workflow details.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to update\\n    name: New name for the workflow (optional)\\n    notes: New notes for the workflow (optional)\\n    starred: Whether to star/unstar the workflow (optional)\\n    public: Whether to make the workflow public/private (optional)\\n    \\nReturns:\\n    Dictionary with updated workflow information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name"},"notes":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Notes"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_is_finished","description":"Check if a workflow is finished.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to check\\n    \\nReturns:\\n    Dictionary with workflow completion status\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete_data","description":"Delete workflow data while keeping the workflow record.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}}]}}\r\n\r\n'
2025-08-02 14:02:13,128 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:02:13,128 - mcp.server.sse - DEBUG - Parsed session ID: ecdaefbf-d9a6-4d2b-81ed-fab73c158e7b
2025-08-02 14:02:13,128 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"prompts/list","jsonrpc":"2.0","id":4}'
2025-08-02 14:02:13,128 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=4)
2025-08-02 14:02:13,128 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=4)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a106c30>))
2025-08-02 14:02:13,129 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10a0271d0>
2025-08-02 14:02:13,129 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 14:02:13,129 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListPromptsRequest
2025-08-02 14:02:13,129 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:02:13,129 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=4, result={'prompts': []})), metadata=None)
2025-08-02 14:02:13,129 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":4,"result":{"prompts":[]}}\r\n\r\n'
2025-08-02 14:02:13,132 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:02:13,133 - mcp.server.sse - DEBUG - Parsed session ID: ecdaefbf-d9a6-4d2b-81ed-fab73c158e7b
2025-08-02 14:02:13,133 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"prompts/list","jsonrpc":"2.0","id":5}'
2025-08-02 14:02:13,133 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=5)
2025-08-02 14:02:13,133 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=5)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a1071d0>))
2025-08-02 14:02:13,133 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10a1f4e10>
2025-08-02 14:02:13,133 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 14:02:13,134 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListPromptsRequest
2025-08-02 14:02:13,134 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:02:13,134 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=5, result={'prompts': []})), metadata=None)
2025-08-02 14:02:13,134 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":5,"result":{"prompts":[]}}\r\n\r\n'
2025-08-02 14:02:22,289 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:02:22.289279+00:00\r\n\r\n'
2025-08-02 14:02:22,290 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:02:22.290946+00:00\r\n\r\n'
2025-08-02 14:02:28,044 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:02:28.044345+00:00\r\n\r\n'
2025-08-02 14:02:37,292 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:02:37.291935+00:00\r\n\r\n'
2025-08-02 14:02:37,293 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:02:37.293069+00:00\r\n\r\n'
2025-08-02 14:02:43,046 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:02:43.046152+00:00\r\n\r\n'
2025-08-02 14:02:52,294 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:02:52.294621+00:00\r\n\r\n'
2025-08-02 14:02:52,295 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:02:52.295117+00:00\r\n\r\n'
2025-08-02 14:02:58,048 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:02:58.048076+00:00\r\n\r\n'
2025-08-02 14:02:59,852 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:02:59,852 - mcp.server.sse - DEBUG - Parsed session ID: ecdaefbf-d9a6-4d2b-81ed-fab73c158e7b
2025-08-02 14:02:59,853 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/call","params":{"name":"submit_basic_calculation_workflow","arguments":{"initial_molecule":"CCCC","engine":"xtb","method":"gfn2_xtb","mode":"rapid","name":"Butane Optimization Workflow"},"_meta":{"progressToken":6}},"jsonrpc":"2.0","id":6}'
2025-08-02 14:02:59,853 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'engine': 'xtb', 'method': 'gfn2_xtb', 'mode': 'rapid', 'name': 'Butane Optimization Workflow'}, '_meta': {'progressToken': 6}}, jsonrpc='2.0', id=6)
2025-08-02 14:02:59,853 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'engine': 'xtb', 'method': 'gfn2_xtb', 'mode': 'rapid', 'name': 'Butane Optimization Workflow'}, '_meta': {'progressToken': 6}}, jsonrpc='2.0', id=6)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10a105880>))
2025-08-02 14:02:59,854 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10a1f5020>
2025-08-02 14:02:59,854 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 14:02:59,854 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type CallToolRequest
2025-08-02 14:02:59,855 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 14:02:59,855 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 14:02:59,855 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2_xtb (type: <class 'str'>)
2025-08-02 14:02:59,855 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: None (type: <class 'NoneType'>)
2025-08-02 14:02:59,855 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: rapid
2025-08-02 14:02:59,855 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 14:02:59,855 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Butane Optimization Workflow
2025-08-02 14:02:59,855 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: 'CCCC' (SMILES string)
2025-08-02 14:02:59,855 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 14:02:59,859 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully converted to StJamesMolecule
2025-08-02 14:02:59,859 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 14:02:59,867 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 14:02:59,968 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a11f820>
2025-08-02 14:02:59,968 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10a106f00> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 14:03:00,083 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a0597f0>
2025-08-02 14:03:00,083 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 14:03:00,084 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 14:03:00,084 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 14:03:00,084 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 14:03:00,084 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 14:03:00,683 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 21:03:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2076'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 14:03:00,684 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 14:03:00,684 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 14:03:00,685 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 14:03:00,685 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 14:03:00,685 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 14:03:00,686 - httpcore.connection - DEBUG - close.started
2025-08-02 14:03:00,686 - httpcore.connection - DEBUG - close.complete
2025-08-02 14:03:00,686 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: 721891fb-fd08-4914-8edb-b49df8d3ad41
2025-08-02 14:03:00,688 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:03:00,688 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=6, result={'content': [{'type': 'text', 'text': '{\n  "name": "Butane Optimization Workflow",\n  "uuid": "721891fb-fd08-4914-8edb-b49df8d3ad41",\n  "created_at": "2025-08-02T21:03:00.236637Z",\n  "updated_at": null,\n  "started_at": null,\n  "completed_at": null,\n  "object_status": 0,\n  "parent_uuid": "e5c3ce65-43df-4ab3-90e0-a56f42584cc0",\n  "notes": "",\n  "starred": false,\n  "public": false,\n  "object_type": "basic_calculation",\n  "object_data": {\n    "settings": {\n      "method": "GFN2_XTB",\n      "tasks": [\n        "optimize"\n      ],\n      "mode": "rapid"\n    },\n    "engine": "xtb",\n    "initial_molecule": {\n      "charge": 0,\n      "multiplicity": 1,\n      "atoms": [\n        {\n          "atomic_number": 6,\n          "position": [\n            -1.86762893,\n            -0.13012499,\n            -0.2131859\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            -0.63032717,\n            -0.18027503,\n            0.668866\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            0.63032604,\n            0.18027639,\n            -0.114436\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            1.86762955,\n            0.13012222,\n            0.76761199\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -2.7578718,\n            -0.39146072,\n            0.36741114\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -2.01414814,\n            0.87274707,\n            -0.62686313\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.78518452,\n            -0.8366946,\n            -1.04523826\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -0.75856968,\n            0.51320342,\n            1.50816505\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -0.53090199,\n            -1.18661607,\n            1.09215469\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            0.75856929,\n            -0.51319817,\n            -0.95373764\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            0.53090159,\n            1.18661899,\n            -0.53772214\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            1.78518681,\n            0.83669225,\n            1.59966357\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            2.01414891,\n            -0.87275127,\n            1.18128539\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            2.75787005,\n            0.39146051,\n            0.18701245\n          ]\n        }\n      ],\n      "cell": null,\n      "energy": null,\n      "scf_iterations": null,\n      "scf_completed": null,\n      "elapsed": null,\n      "homo_lumo_gap": null,\n      "gradient": null,\n      "stress": null,\n      "velocities": null,\n      "mulliken_charges": null,\n      "mulliken_spin_densities": null,\n      "dipole": null,\n      "vibrational_modes": null,\n      "zero_point_energy": null,\n      "thermal_energy_corr": null,\n      "thermal_enthalpy_corr": null,\n      "thermal_free_energy_corr": null,\n      "smiles": "CCCC",\n      "calculation_index": null\n    }\n  },\n  "email_when_complete": false,\n  "max_credits": null,\n  "elapsed": 0.0,\n  "credits_charged": 0.0\n}'}], 'isError': False})), metadata=None)
2025-08-02 14:03:00,689 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":6,"result":{"content":[{"type":"text","text":"{\\n  \\"name\\": \\"Butane Optimization Workflow\\",\\n  \\"uuid\\": \\"721891fb-fd08-4914-8edb-b49df8d3ad41\\",\\n  \\"created_at\\": \\"2025-08-02T21:03:00.236637Z\\",\\n  \\"updated_at\\": null,\\n  \\"started_at\\": null,\\n  \\"completed_at\\": null,\\n  \\"object_status\\": 0,\\n  \\"parent_uuid\\": \\"e5c3ce65-43df-4ab3-90e0-a56f42584cc0\\",\\n  \\"notes\\": \\"\\",\\n  \\"starred\\": false,\\n  \\"public\\": false,\\n  \\"object_type\\": \\"basic_calculation\\",\\n  \\"object_data\\": {\\n    \\"settings\\": {\\n      \\"method\\": \\"GFN2_XTB\\",\\n      \\"tasks\\": [\\n        \\"optimize\\"\\n      ],\\n      \\"mode\\": \\"rapid\\"\\n    },\\n    \\"engine\\": \\"xtb\\",\\n    \\"initial_molecule\\": {\\n      \\"charge\\": 0,\\n      \\"multiplicity\\": 1,\\n      \\"atoms\\": [\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -1.86762893,\\n            -0.13012499,\\n            -0.2131859\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -0.63032717,\\n            -0.18027503,\\n            0.668866\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            0.63032604,\\n            0.18027639,\\n            -0.114436\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            1.86762955,\\n            0.13012222,\\n            0.76761199\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -2.7578718,\\n            -0.39146072,\\n            0.36741114\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -2.01414814,\\n            0.87274707,\\n            -0.62686313\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.78518452,\\n            -0.8366946,\\n            -1.04523826\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -0.75856968,\\n            0.51320342,\\n            1.50816505\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -0.53090199,\\n            -1.18661607,\\n            1.09215469\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            0.75856929,\\n            -0.51319817,\\n            -0.95373764\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            0.53090159,\\n            1.18661899,\\n            -0.53772214\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            1.78518681,\\n            0.83669225,\\n            1.59966357\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            2.01414891,\\n            -0.87275127,\\n            1.18128539\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            2.75787005,\\n            0.39146051,\\n            0.18701245\\n          ]\\n        }\\n      ],\\n      \\"cell\\": null,\\n      \\"energy\\": null,\\n      \\"scf_iterations\\": null,\\n      \\"scf_completed\\": null,\\n      \\"elapsed\\": null,\\n      \\"homo_lumo_gap\\": null,\\n      \\"gradient\\": null,\\n      \\"stress\\": null,\\n      \\"velocities\\": null,\\n      \\"mulliken_charges\\": null,\\n      \\"mulliken_spin_densities\\": null,\\n      \\"dipole\\": null,\\n      \\"vibrational_modes\\": null,\\n      \\"zero_point_energy\\": null,\\n      \\"thermal_energy_corr\\": null,\\n      \\"thermal_enthalpy_corr\\": null,\\n      \\"thermal_free_energy_corr\\": null,\\n      \\"smiles\\": \\"CCCC\\",\\n      \\"calculation_index\\": null\\n    }\\n  },\\n  \\"email_when_complete\\": false,\\n  \\"max_credits\\": null,\\n  \\"elapsed\\": 0.0,\\n  \\"credits_charged\\": 0.0\\n}"}],"isError":false}}\r\n\r\n'
2025-08-02 14:03:07,296 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:03:07.296584+00:00\r\n\r\n'
2025-08-02 14:03:07,297 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:03:07.297403+00:00\r\n\r\n'
2025-08-02 14:03:13,050 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:03:13.049922+00:00\r\n\r\n'
2025-08-02 14:03:22,299 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:03:22.298773+00:00\r\n\r\n'
2025-08-02 14:03:22,303 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:03:22.302936+00:00\r\n\r\n'
2025-08-02 14:03:28,052 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:03:28.052460+00:00\r\n\r\n'
2025-08-02 14:03:37,304 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:03:37.304343+00:00\r\n\r\n'
2025-08-02 14:03:37,306 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:03:37.306328+00:00\r\n\r\n'
2025-08-02 14:03:43,057 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:03:43.057293+00:00\r\n\r\n'
2025-08-02 14:03:52,308 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:03:52.307944+00:00\r\n\r\n'
2025-08-02 14:03:52,309 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:03:52.309136+00:00\r\n\r\n'
2025-08-02 14:03:58,060 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:03:58.060701+00:00\r\n\r\n'
2025-08-02 14:04:07,311 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:04:07.311109+00:00\r\n\r\n'
2025-08-02 14:04:07,311 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:04:07.311607+00:00\r\n\r\n'
2025-08-02 14:04:13,063 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:04:13.063267+00:00\r\n\r\n'
2025-08-02 14:04:22,313 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:04:22.313227+00:00\r\n\r\n'
2025-08-02 14:04:22,314 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:04:22.314270+00:00\r\n\r\n'
2025-08-02 14:04:28,065 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:04:28.064983+00:00\r\n\r\n'
2025-08-02 14:04:37,316 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:04:37.316124+00:00\r\n\r\n'
2025-08-02 14:04:37,317 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:04:37.317352+00:00\r\n\r\n'
2025-08-02 14:04:43,066 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:04:43.066751+00:00\r\n\r\n'
2025-08-02 14:04:52,318 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:04:52.318203+00:00\r\n\r\n'
2025-08-02 14:04:52,320 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:04:52.320067+00:00\r\n\r\n'
2025-08-02 14:04:58,061 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:04:58.061191+00:00\r\n\r\n'
2025-08-02 14:05:07,303 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:05:07.303110+00:00\r\n\r\n'
2025-08-02 14:05:07,303 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:05:07.303555+00:00\r\n\r\n'
2025-08-02 14:05:13,048 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:05:13.048120+00:00\r\n\r\n'
2025-08-02 14:05:22,296 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:05:22.296224+00:00\r\n\r\n'
2025-08-02 14:05:22,297 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:05:22.297073+00:00\r\n\r\n'
2025-08-02 14:05:28,043 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:05:28.043471+00:00\r\n\r\n'
2025-08-02 14:05:37,295 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:05:37.294982+00:00\r\n\r\n'
2025-08-02 14:05:37,295 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:05:37.295604+00:00\r\n\r\n'
2025-08-02 14:05:38,487 - mcp.server.lowlevel.server - DEBUG - Initializing server 'Rowan MCP Server'
2025-08-02 14:05:38,487 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListToolsRequest
2025-08-02 14:05:38,487 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListResourcesRequest
2025-08-02 14:05:38,487 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListResourceTemplatesRequest
2025-08-02 14:05:38,487 - mcp.server.lowlevel.server - DEBUG - Registering handler for PromptListRequest
2025-08-02 14:05:38,487 - mcp.server.lowlevel.server - DEBUG - Registering handler for CallToolRequest
2025-08-02 14:05:38,487 - mcp.server.lowlevel.server - DEBUG - Registering handler for ReadResourceRequest
2025-08-02 14:05:38,487 - mcp.server.lowlevel.server - DEBUG - Registering handler for GetPromptRequest
2025-08-02 14:05:38,499 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Parsed string tasks '['optimize']' to list: ['optimize']
2025-08-02 14:05:38,500 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 14:05:38,500 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 14:05:38,500 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2-xtb (type: <class 'str'>)
2025-08-02 14:05:38,500 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: ['optimize'] (type: <class 'list'>)
2025-08-02 14:05:38,500 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: rapid
2025-08-02 14:05:38,500 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 14:05:38,500 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Test: 'optimize'
2025-08-02 14:05:38,500 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: 'CCO' (SMILES string)
2025-08-02 14:05:38,500 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 14:05:38,520 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully converted to StJamesMolecule
2025-08-02 14:05:38,520 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 14:05:38,544 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 14:05:38,635 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10bb4b230>
2025-08-02 14:05:38,635 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10bb6af90> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 14:05:38,750 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10bbcc550>
2025-08-02 14:05:38,751 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 14:05:38,751 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 14:05:38,751 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 14:05:38,752 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 14:05:38,752 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 14:05:39,335 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 21:05:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'1729'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 14:05:39,335 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 14:05:39,336 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 14:05:39,336 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 14:05:39,336 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 14:05:39,336 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 14:05:39,336 - httpcore.connection - DEBUG - close.started
2025-08-02 14:05:39,336 - httpcore.connection - DEBUG - close.complete
2025-08-02 14:05:39,336 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: 826c9c6f-e002-4c1d-9876-b0cd09f8861d
2025-08-02 14:05:39,336 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Parsed string tasks '['optimize', 'frequencies']' to list: ['optimize', 'frequencies']
2025-08-02 14:05:39,337 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 14:05:39,337 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 14:05:39,337 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2-xtb (type: <class 'str'>)
2025-08-02 14:05:39,337 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: ['optimize', 'frequencies'] (type: <class 'list'>)
2025-08-02 14:05:39,337 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: rapid
2025-08-02 14:05:39,337 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 14:05:39,337 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Test: 'optimize, frequencies'
2025-08-02 14:05:39,337 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: 'CCO' (SMILES string)
2025-08-02 14:05:39,337 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 14:05:39,340 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully converted to StJamesMolecule
2025-08-02 14:05:39,340 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 14:05:39,352 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 14:05:39,452 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10bbcde50>
2025-08-02 14:05:39,452 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10bb6aa80> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 14:05:39,557 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10b9a7950>
2025-08-02 14:05:39,558 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 14:05:39,558 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 14:05:39,558 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 14:05:39,558 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 14:05:39,558 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 14:05:40,047 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 21:05:40 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'1756'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 14:05:40,048 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 14:05:40,048 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 14:05:40,048 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 14:05:40,048 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 14:05:40,048 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 14:05:40,048 - httpcore.connection - DEBUG - close.started
2025-08-02 14:05:40,049 - httpcore.connection - DEBUG - close.complete
2025-08-02 14:05:40,049 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: 60b2a912-cf8e-4953-99e5-9cfe94d462f3
2025-08-02 14:05:40,049 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Parsed string tasks '['optimize']' to list: ['optimize']
2025-08-02 14:05:40,049 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 14:05:40,050 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 14:05:40,050 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2-xtb (type: <class 'str'>)
2025-08-02 14:05:40,050 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: ['optimize'] (type: <class 'list'>)
2025-08-02 14:05:40,050 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: rapid
2025-08-02 14:05:40,050 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 14:05:40,050 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Test: '["optimize"]'
2025-08-02 14:05:40,050 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: 'CCO' (SMILES string)
2025-08-02 14:05:40,050 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 14:05:40,054 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully converted to StJamesMolecule
2025-08-02 14:05:40,054 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 14:05:40,066 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 14:05:40,164 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10b9a7e10>
2025-08-02 14:05:40,164 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10bb6b020> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 14:05:40,273 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10bb53890>
2025-08-02 14:05:40,274 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 14:05:40,274 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 14:05:40,275 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 14:05:40,275 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 14:05:40,275 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 14:05:40,882 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 21:05:40 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'1738'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 14:05:40,882 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 14:05:40,883 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 14:05:40,883 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 14:05:40,883 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 14:05:40,883 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 14:05:40,883 - httpcore.connection - DEBUG - close.started
2025-08-02 14:05:40,884 - httpcore.connection - DEBUG - close.complete
2025-08-02 14:05:40,884 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: e9bebfea-c3b0-4159-984f-badd36ada3d0
2025-08-02 14:05:40,884 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Parsed string tasks '['optimize', 'frequencies']' to list: ['optimize', 'frequencies']
2025-08-02 14:05:40,884 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 14:05:40,884 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 14:05:40,884 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2-xtb (type: <class 'str'>)
2025-08-02 14:05:40,884 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: ['optimize', 'frequencies'] (type: <class 'list'>)
2025-08-02 14:05:40,885 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: rapid
2025-08-02 14:05:40,885 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 14:05:40,885 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Test: "['optimize', 'frequencies']"
2025-08-02 14:05:40,885 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: 'CCO' (SMILES string)
2025-08-02 14:05:40,885 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 14:05:40,888 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully converted to StJamesMolecule
2025-08-02 14:05:40,888 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 14:05:40,901 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 14:05:41,008 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10bb7a580>
2025-08-02 14:05:41,008 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10bb6b0b0> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 14:05:41,123 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10bb7a690>
2025-08-02 14:05:41,123 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 14:05:41,124 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 14:05:41,124 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 14:05:41,124 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 14:05:41,124 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 14:05:41,651 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 21:05:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'1770'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 14:05:41,652 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 14:05:41,653 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 14:05:41,653 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 14:05:41,653 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 14:05:41,653 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 14:05:41,653 - httpcore.connection - DEBUG - close.started
2025-08-02 14:05:41,654 - httpcore.connection - DEBUG - close.complete
2025-08-02 14:05:41,654 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: affab7ac-bfca-40de-bd9b-9d1775acb5e0
2025-08-02 14:05:41,654 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 14:05:41,654 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 14:05:41,654 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2-xtb (type: <class 'str'>)
2025-08-02 14:05:41,655 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: ['optimize'] (type: <class 'list'>)
2025-08-02 14:05:41,655 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: rapid
2025-08-02 14:05:41,655 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 14:05:41,655 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Test: ['optimize']
2025-08-02 14:05:41,655 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: 'CCO' (SMILES string)
2025-08-02 14:05:41,655 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 14:05:41,657 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully converted to StJamesMolecule
2025-08-02 14:05:41,657 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 14:05:41,669 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 14:05:41,759 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10bbd4350>
2025-08-02 14:05:41,759 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10bb6b1d0> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 14:05:41,880 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10bbd4550>
2025-08-02 14:05:41,880 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 14:05:41,881 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 14:05:41,881 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 14:05:41,881 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 14:05:41,881 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 14:05:42,422 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 21:05:42 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'1733'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 14:05:42,422 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 14:05:42,422 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 14:05:42,422 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 14:05:42,422 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 14:05:42,422 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 14:05:42,422 - httpcore.connection - DEBUG - close.started
2025-08-02 14:05:42,423 - httpcore.connection - DEBUG - close.complete
2025-08-02 14:05:42,423 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: 12fc5a7f-5a2f-4771-ac0e-15947ca19fc9
2025-08-02 14:05:42,423 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 14:05:42,423 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 14:05:42,423 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2-xtb (type: <class 'str'>)
2025-08-02 14:05:42,423 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: None (type: <class 'NoneType'>)
2025-08-02 14:05:42,423 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: rapid
2025-08-02 14:05:42,423 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 14:05:42,423 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Test: None
2025-08-02 14:05:42,423 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: 'CCO' (SMILES string)
2025-08-02 14:05:42,423 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 14:05:42,426 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully converted to StJamesMolecule
2025-08-02 14:05:42,426 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 14:05:42,434 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 14:05:42,545 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10bbf4320>
2025-08-02 14:05:42,546 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10bb6b260> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 14:05:42,669 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10bbf4410>
2025-08-02 14:05:42,670 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 14:05:42,671 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 14:05:42,671 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 14:05:42,671 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 14:05:42,672 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 14:05:43,042 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:05:43.042670+00:00\r\n\r\n'
2025-08-02 14:05:43,569 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 21:05:43 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'1721'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 14:05:43,569 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 14:05:43,569 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 14:05:43,569 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 14:05:43,569 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 14:05:43,569 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 14:05:43,569 - httpcore.connection - DEBUG - close.started
2025-08-02 14:05:43,569 - httpcore.connection - DEBUG - close.complete
2025-08-02 14:05:43,570 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: ec6ed62a-599c-4159-881d-455b109563c5
2025-08-02 14:05:52,296 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:05:52.295921+00:00\r\n\r\n'
2025-08-02 14:05:52,301 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:05:52.301389+00:00\r\n\r\n'
2025-08-02 14:05:58,616 - mcp.server.lowlevel.server - DEBUG - Initializing server 'Rowan MCP Server'
2025-08-02 14:05:58,617 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListToolsRequest
2025-08-02 14:05:58,617 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListResourcesRequest
2025-08-02 14:05:58,617 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListResourceTemplatesRequest
2025-08-02 14:05:58,617 - mcp.server.lowlevel.server - DEBUG - Registering handler for PromptListRequest
2025-08-02 14:05:58,617 - mcp.server.lowlevel.server - DEBUG - Registering handler for CallToolRequest
2025-08-02 14:05:58,617 - mcp.server.lowlevel.server - DEBUG - Registering handler for ReadResourceRequest
2025-08-02 14:05:58,617 - mcp.server.lowlevel.server - DEBUG - Registering handler for GetPromptRequest
2025-08-02 14:05:58,634 - asyncio - DEBUG - Using selector: KqueueSelector
2025-08-02 14:05:58,634 - mcp.server.sse - DEBUG - SseServerTransport initialized with endpoint: /messages/
2025-08-02 14:05:58,634 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-02 14:05:59,439 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 14:05:59,440 - mcp.server.sse - DEBUG - Created new session with ID: 1898fb07-6249-4979-ad92-5786712248ed
2025-08-02 14:05:59,441 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 14:05:59,441 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 14:05:59,444 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 14:05:59,445 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 14:05:59,445 - mcp.server.sse - DEBUG - Created new session with ID: 62233999-0bfd-482c-8e87-6ed115e47da2
2025-08-02 14:05:59,445 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 14:05:59,445 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 14:05:59,448 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=1898fb0762494979ad925786712248ed
2025-08-02 14:05:59,449 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=1898fb0762494979ad925786712248ed\r\n\r\n'
2025-08-02 14:05:59,449 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 14:05:59,450 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=622339990bfd482c8e876ed115e47da2
2025-08-02 14:05:59,450 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 14:05:59,450 - mcp.server.sse - DEBUG - Created new session with ID: fa4ba0bd-cdc1-45c9-8966-7806386ca788
2025-08-02 14:05:59,450 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 14:05:59,450 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 14:05:59,452 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=622339990bfd482c8e876ed115e47da2\r\n\r\n'
2025-08-02 14:05:59,453 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 14:05:59,453 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=fa4ba0bdcdc145c989667806386ca788
2025-08-02 14:05:59,453 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=fa4ba0bdcdc145c989667806386ca788\r\n\r\n'
2025-08-02 14:06:01,762 - sse_starlette.sse - DEBUG - Got event: http.disconnect. Stop streaming.
2025-08-02 14:06:01,762 - root - DEBUG - Client session disconnected fa4ba0bd-cdc1-45c9-8966-7806386ca788
2025-08-02 14:06:02,134 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 14:06:02,135 - mcp.server.sse - DEBUG - Created new session with ID: 8885b603-9234-4432-8b71-971721bc7eb2
2025-08-02 14:06:02,135 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 14:06:02,135 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 14:06:02,137 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 14:06:02,137 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=8885b603923444328b71971721bc7eb2
2025-08-02 14:06:02,138 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=8885b603923444328b71971721bc7eb2\r\n\r\n'
2025-08-02 14:06:02,141 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:06:02,141 - mcp.server.sse - DEBUG - Parsed session ID: 8885b603-9234-4432-8b71-971721bc7eb2
2025-08-02 14:06:02,141 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"initialize","params":{"protocolVersion":"2025-06-18","capabilities":{"tools":true,"prompts":true,"resources":false,"logging":false,"roots":{"listChanged":false}},"clientInfo":{"name":"cursor-vscode","version":"1.0.0"}},"jsonrpc":"2.0","id":1}'
2025-08-02 14:06:02,141 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'tools': True, 'prompts': True, 'resources': False, 'logging': False, 'roots': {'listChanged': False}}, 'clientInfo': {'name': 'cursor-vscode', 'version': '1.0.0'}}, jsonrpc='2.0', id=1)
2025-08-02 14:06:02,141 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'tools': True, 'prompts': True, 'resources': False, 'logging': False, 'roots': {'listChanged': False}}, 'clientInfo': {'name': 'cursor-vscode', 'version': '1.0.0'}}, jsonrpc='2.0', id=1)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10abc1490>))
2025-08-02 14:06:02,142 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=1, result={'protocolVersion': '2025-03-26', 'capabilities': {'experimental': {}, 'prompts': {'listChanged': False}, 'resources': {'subscribe': False, 'listChanged': False}, 'tools': {'listChanged': False}}, 'serverInfo': {'name': 'Rowan MCP Server', 'version': '1.9.3'}})), metadata=None)
2025-08-02 14:06:02,142 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":1,"result":{"protocolVersion":"2025-03-26","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"Rowan MCP Server","version":"1.9.3"}}}\r\n\r\n'
2025-08-02 14:06:02,145 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:06:02,145 - mcp.server.sse - DEBUG - Parsed session ID: 8885b603-9234-4432-8b71-971721bc7eb2
2025-08-02 14:06:02,145 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"notifications/initialized","jsonrpc":"2.0"}'
2025-08-02 14:06:02,145 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 14:06:02,146 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10abc8d70>))
2025-08-02 14:06:02,147 - mcp.server.lowlevel.server - DEBUG - Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 14:06:02,150 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:06:02,150 - mcp.server.sse - DEBUG - Parsed session ID: 8885b603-9234-4432-8b71-971721bc7eb2
2025-08-02 14:06:02,150 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/list","jsonrpc":"2.0","id":2}'
2025-08-02 14:06:02,150 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=2)
2025-08-02 14:06:02,150 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=2)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10ab2ad50>))
2025-08-02 14:06:02,150 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10ab3b9d0>
2025-08-02 14:06:02,151 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 14:06:02,151 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListToolsRequest
2025-08-02 14:06:02,152 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:06:02,152 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=2, result={'tools': [{'name': 'submit_basic_calculation_workflow', 'description': 'Submit a basic calculation workflow using Rowan v2 API.\n\nPerforms fundamental quantum chemistry calculations with configurable methods\nand computational tasks. Returns a workflow object for tracking progress.\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'type': 'string'}, {'additionalProperties': True, 'type': 'object'}, {}], 'description': 'The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object', 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'description': "The method to use for the calculation (e.g., 'uma_m_omol', 'gfn2-xtb', 'r2scan_3c')", 'title': 'Method', 'type': 'string'}, 'tasks': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'string'}, {'type': 'null'}], 'default': None, 'description': "Tasks to perform: list ['optimize'], string 'optimize', or comma-separated 'optimize,frequencies'. Defaults to None", 'title': 'Tasks'}, 'mode': {'default': 'auto', 'description': "The mode to run the calculation in ('auto', 'rapid', 'careful', 'meticulous')", 'title': 'Mode', 'type': 'string'}, 'engine': {'default': 'omol25', 'description': "The computational engine to use ('omol25', 'xtb', 'psi4')", 'title': 'Engine', 'type': 'string'}, 'name': {'default': 'Basic Calculation Workflow', 'description': 'The name of the workflow for identification', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'UUID of the folder to place the workflow in (optional)', 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'description': 'Maximum number of credits to use for the workflow (optional)', 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_conformer_search_workflow', 'description': 'Submit a conformer search workflow using Rowan v2 API.\n\nExplores the conformational space of a molecule to find low-energy structures.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    conf_gen_mode: default to "rapid"\n        Options: "rapid", "careful", "meticulous"\n    final_method: default: "aimnet2_wb97md3"\n        Try other options, if user specifies\n    solvent: Optional solvent for implicit solvation (e.g., "water", "ethanol")\n    transition_state: Whether searching for transition state conformers (default: False)\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic conformer search\n    result = submit_conformer_search_workflow(\n        initial_molecule="CCCC",\n        conf_gen_mode="rapid"\n    )\n    \n    # Careful search with solvent\n    result = submit_conformer_search_workflow(\n        initial_molecule="CC(C)CC(=O)O",\n        conf_gen_mode="careful",\n        solvent="water",\n        final_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'conf_gen_mode': {'default': 'rapid', 'title': 'Conf Gen Mode', 'type': 'string'}, 'final_method': {'default': 'aimnet2_wb97md3', 'title': 'Final Method', 'type': 'string'}, 'solvent': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Solvent'}, 'transition_state': {'default': False, 'title': 'Transition State', 'type': 'boolean'}, 'name': {'default': 'Conformer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_solubility_workflow', 'description': 'Submit a solubility prediction workflow using Rowan v2 API.\n\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\nusing machine learning models.\n\nArgs:\n    initial_smiles: SMILES string of the molecule\n    solvents: List of solvents as SMILES or common names (e.g., ["water", "ethanol"])\n        If None, uses default solvents\n    temperatures: List of temperatures in Kelvin\n        If None, uses default temperature range\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic solubility prediction\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)Nc1ccc(O)cc1",\n        solvents=["water", "ethanol"],\n        temperatures=[298.15, 310.15]\n    )\n    \n    # With SMILES solvents\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)O",\n        solvents=["O", "CCO", "CCCCCC"],\n        temperatures=[273.15, 298.15, 323.15]\n    )\n', 'inputSchema': {'properties': {'initial_smiles': {'title': 'Initial Smiles', 'type': 'string'}, 'solvents': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Solvents'}, 'temperatures': {'anyOf': [{'items': {'type': 'number'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Temperatures'}, 'name': {'default': 'Solubility Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_smiles'], 'type': 'object'}}, {'name': 'submit_pka_workflow', 'description': 'Submit a pKa prediction workflow using Rowan v2 API.\n\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\nusing quantum chemistry calculations.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\n    deprotonate_elements: List of elements to consider for deprotonation\n        (e.g., ["N", "O", "S"]). If None, uses defaults\n    protonate_elements: List of elements to consider for protonation\n        (e.g., ["N", "O"]). If None, uses defaults\n    mode: Calculation mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic pKa prediction\n    result = submit_pka_workflow(\n        initial_molecule="CC(=O)O",\n        pka_range=(2, 8)\n    )\n    \n    # Specific elements with meticulous mode\n    result = submit_pka_workflow(\n        initial_molecule="NC(C)C(=O)O",\n        pka_range=(1, 14),\n        deprotonate_elements=["N", "O"],\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'pka_range': {'default': [2, 12], 'maxItems': 2, 'minItems': 2, 'prefixItems': [{'type': 'number'}, {'type': 'number'}], 'title': 'Pka Range', 'type': 'array'}, 'deprotonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Deprotonate Elements'}, 'protonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Protonate Elements'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'pKa Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_redox_potential_workflow', 'description': 'Submit a redox potential calculation workflow using Rowan v2 API.\n\nCalculates reduction and/or oxidation potentials for a molecule using\nquantum chemistry methods.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    reduction: Whether to calculate reduction potential (default: False)\n    oxidization: Whether to calculate oxidation potential (default: True)\n    mode: Calculation mode (default: "rapid")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic oxidation potential\n    result = submit_redox_potential_workflow(\n        initial_molecule="CC1=CC=CC=C1",\n        oxidization=True\n    )\n    \n    # Both reduction and oxidation with careful mode\n    result = submit_redox_potential_workflow(\n        initial_molecule="c1ccccc1",\n        reduction=True,\n        oxidization=True,\n        mode="careful"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'reduction': {'default': False, 'title': 'Reduction', 'type': 'boolean'}, 'oxidization': {'default': True, 'title': 'Oxidization', 'type': 'boolean'}, 'mode': {'default': 'rapid', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Redox Potential Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_fukui_workflow', 'description': 'Submit a Fukui indices calculation workflow using Rowan v2 API.\n\nCalculates Fukui indices to predict molecular reactivity at different sites.\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    optimization_method: Method for geometry optimization (default: "gfn2_xtb")\n        Common options: "gfn2_xtb", "r2scan_3c", "aimnet2_wb97md3"\n    fukui_method: Method for Fukui calculation (default: "gfn1_xtb")\n        Common options: "gfn1_xtb", "gfn2_xtb"\n    solvent_settings: Optional solvent configuration dictionary\n        Example: {"solvent": "water", "model": "alpb"}\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic Fukui indices\n    result = submit_fukui_workflow(\n        initial_molecule="CC(=O)O"\n    )\n    \n    # With solvent and advanced methods\n    result = submit_fukui_workflow(\n        initial_molecule="c1ccccc1N",\n        optimization_method="r2scan_3c",\n        fukui_method="gfn2_xtb",\n        solvent_settings={"solvent": "water", "model": "alpb"}\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'optimization_method': {'default': 'gfn2_xtb', 'title': 'Optimization Method', 'type': 'string'}, 'fukui_method': {'default': 'gfn1_xtb', 'title': 'Fukui Method', 'type': 'string'}, 'solvent_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Solvent Settings'}, 'name': {'default': 'Fukui Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_tautomer_search_workflow', 'description': 'Submit a tautomer search workflow using Rowan v2 API.\n\nSearches for different tautomeric forms of a molecule and evaluates their\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    mode: Search mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic tautomer search\n    result = submit_tautomer_search_workflow(\n        initial_molecule="CC(=O)CC(=O)C"\n    )\n    \n    # Meticulous search for complex molecule\n    result = submit_tautomer_search_workflow(\n        initial_molecule="c1ccc2c(c1)ncc(=O)[nH]2",\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Tautomer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_descriptors_workflow', 'description': 'Submit a molecular descriptors calculation workflow using Rowan v2 API.\n\nCalculates a comprehensive set of molecular descriptors including:\n- Physical properties (MW, logP, TPSA, etc.)\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\n- Topological indices\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic descriptor calculation\n    result = submit_descriptors_workflow(\n        initial_molecule="CC(=O)Nc1ccc(O)cc1"\n    )\n    \n    # For complex molecule\n    result = submit_descriptors_workflow(\n        initial_molecule="CN1C=NC2=C1C(=O)N(C(=O)N2C)C",\n        name="Caffeine Descriptors"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'name': {'default': 'Descriptors Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_scan_workflow', 'description': 'Submit a potential energy surface scan workflow using Rowan v2 API.\n\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\nor dihedrals) to map the potential energy surface.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    scan_settings: Dictionary specifying scan parameters\n        Example: {\n            "type": "dihedral",  # or "bond", "angle"\n            "atoms": [0, 1, 2, 3],  # atom indices\n            "start": -180,\n            "stop": 180,\n            "step": 10\n        }\n    calculation_engine: Computational engine (default: "omol25")\n        Options: "omol25", "xtb", "psi4"\n    calculation_method: Method for calculations (default: "uma_m_omol")\n        Options depend on engine\n    wavefront_propagation: Use wavefront optimization (default: True)\n        Speeds up scans by using previous geometries as starting points\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Dihedral scan\n    result = submit_scan_workflow(\n        initial_molecule="CC(C)CC",\n        scan_settings={\n            "type": "dihedral",\n            "atoms": [0, 1, 2, 3],\n            "start": -180,\n            "stop": 180,\n            "step": 15\n        }\n    )\n    \n    # Bond scan with advanced method\n    result = submit_scan_workflow(\n        initial_molecule="CC",\n        scan_settings={\n            "type": "bond",\n            "atoms": [0, 1],\n            "start": 1.0,\n            "stop": 2.5,\n            "step": 0.1\n        },\n        calculation_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'scan_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Scan Settings'}, 'calculation_engine': {'default': 'omol25', 'title': 'Calculation Engine', 'type': 'string'}, 'calculation_method': {'default': 'uma_m_omol', 'title': 'Calculation Method', 'type': 'string'}, 'wavefront_propagation': {'default': True, 'title': 'Wavefront Propagation', 'type': 'boolean'}, 'name': {'default': 'Scan Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_irc_workflow', 'description': 'Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\n\nArgs:\n    initial_molecule: The initial molecule to perform the IRC calculation on.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    method: The computational method to use for the IRC calculation (default: "uma_m_omol")\n        See list of available methods for options\n    engine: The computational engine to use for the calculation (default: "omol25")\n        See list of available engines\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\n    step_size: The step size to use for the IRC calculation (default: 0.05)\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted IRC workflow\n    \nExample:\n    # Basic IRC calculation\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "[CH3].[CH3]"},\n        method="gfn2_xtb",\n        max_irc_steps=50\n    )\n    \n    # IRC with specific method and engine\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "CC(O)=CC"},\n        method="r2scan_3c",\n        engine="psi4",\n        step_size=0.03\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'title': 'Method', 'type': 'string'}, 'engine': {'default': 'omol25', 'title': 'Engine', 'type': 'string'}, 'preopt': {'default': True, 'title': 'Preopt', 'type': 'boolean'}, 'step_size': {'default': 0.05, 'title': 'Step Size', 'type': 'number'}, 'max_irc_steps': {'default': 30, 'title': 'Max Irc Steps', 'type': 'integer'}, 'name': {'default': 'IRC Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'type': 'object'}}, {'name': 'submit_protein_cofolding_workflow', 'description': 'Submits a protein cofolding workflow to the API.\n\nArgs:\n    initial_protein_sequences: The sequences of the proteins to be cofolded\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\n    use_msa_server: Whether to use the MSA server for the computation\n    use_potentials: Whether to use potentials for the computation\n    name: The name of the workflow\n    model: The model to use for the computation\n    folder_uuid: The UUID of the folder to store the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Protein dimer cofolding\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=[\n            "MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK",\n            "MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF"\n        ]\n    )\n    \n    # Protein-ligand complex\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=["MGSSHHHHHHSSGLVPRGSH"],\n        initial_smiles_list=["CC(=O)O", "CCO"],\n        ligand_binding_affinity_index=0,\n        use_msa_server=True\n    )\n', 'inputSchema': {'properties': {'initial_protein_sequences': {'items': {'type': 'string'}, 'title': 'Initial Protein Sequences', 'type': 'array'}, 'initial_smiles_list': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Initial Smiles List'}, 'ligand_binding_affinity_index': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Ligand Binding Affinity Index'}, 'use_msa_server': {'default': True, 'title': 'Use Msa Server', 'type': 'boolean'}, 'use_potentials': {'default': False, 'title': 'Use Potentials', 'type': 'boolean'}, 'name': {'default': 'Cofolding Workflow', 'title': 'Name', 'type': 'string'}, 'model': {'default': 'boltz_2', 'title': 'Model', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_protein_sequences'], 'type': 'object'}}, {'name': 'submit_docking_workflow', 'description': 'Submits a Docking workflow to the API.\n\nArgs:\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\n    pocket: The pocket to dock into\n    initial_molecule: The initial molecule to be docked.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    do_csearch: Whether to perform a conformational search on the ligand\n    do_optimization: Whether to perform an optimization on the ligand\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic docking with protein UUID\n    result = submit_docking_workflow(\n        protein="protein-uuid-123",\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CC(=O)Oc1ccccc1C(=O)O"}\n    )\n    \n    # Docking with optimization disabled\n    result = submit_docking_workflow(\n        protein=protein_obj,\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CCO"},\n        do_csearch=False,\n        do_optimization=False\n    )\n', 'inputSchema': {'properties': {'protein': {'anyOf': [{'type': 'string'}, {}], 'title': 'Protein'}, 'pocket': {'title': 'Pocket'}, 'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'do_csearch': {'default': True, 'title': 'Do Csearch', 'type': 'boolean'}, 'do_optimization': {'default': True, 'title': 'Do Optimization', 'type': 'boolean'}, 'name': {'default': 'Docking Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['protein', 'pocket'], 'type': 'object'}}, {'name': 'workflow_fetch_latest', 'description': 'Fetch the latest workflow data from the database.\n\nUpdates the workflow object with the most recent status and results.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to fetch\n    in_place: Whether to update the workflow object in place (default: False)\n    \nReturns:\n    Dictionary containing the updated workflow data including status and results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'in_place': {'default': False, 'title': 'In Place', 'type': 'boolean'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_wait_for_result', 'description': 'Wait for a workflow to complete and return the result.\n\nBlocks until the workflow completes, polling at specified intervals.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to wait for\n    poll_interval: Time in seconds between status checks (default: 5)\n    \nReturns:\n    Dictionary containing the completed workflow data including results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'poll_interval': {'default': 5, 'title': 'Poll Interval', 'type': 'integer'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_get_status', 'description': 'Get the current status of a workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with status information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_stop', 'description': 'Stop a running workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to stop\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete', 'description': 'Delete a workflow.\n\nThis permanently removes the workflow and its results from the database.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to delete\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'retrieve_workflow', 'description': 'Retrieve a workflow from the API.\n\nArgs:\n    uuid: The UUID of the workflow to retrieve\n    \nReturns:\n    Dictionary containing the complete workflow data\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'retrieve_calculation_molecules', 'description': 'Retrieve a list of molecules from a calculation.\n\nArgs:\n    uuid: The UUID of the calculation to retrieve molecules from\n    \nReturns:\n    List of dictionaries representing the molecules in the calculation\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'list_workflows', 'description': 'List workflows subject to the specified criteria.\n\nArgs:\n    parent_uuid: The UUID of the parent folder\n    name_contains: Substring to search for in workflow names\n    public: Filter workflows by their public status\n    starred: Filter workflows by their starred status\n    status: Filter workflows by their status\n    workflow_type: Filter workflows by their type\n    page: The page number to retrieve (default: 0)\n    size: The number of items per page (default: 10)\n    \nReturns:\n    List of workflow dictionaries that match the search criteria\n    \nRaises:\n    HTTPError: If the request to the API fails\n', 'inputSchema': {'properties': {'parent_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Parent Uuid'}, 'name_contains': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name Contains'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'status': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Status'}, 'workflow_type': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Type'}, 'page': {'default': 0, 'title': 'Page', 'type': 'integer'}, 'size': {'default': 10, 'title': 'Size', 'type': 'integer'}}, 'type': 'object'}}, {'name': 'workflow_update', 'description': 'Update workflow details.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to update\n    name: New name for the workflow (optional)\n    notes: New notes for the workflow (optional)\n    starred: Whether to star/unstar the workflow (optional)\n    public: Whether to make the workflow public/private (optional)\n    \nReturns:\n    Dictionary with updated workflow information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name'}, 'notes': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Notes'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_is_finished', 'description': 'Check if a workflow is finished.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to check\n    \nReturns:\n    Dictionary with workflow completion status\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete_data', 'description': 'Delete workflow data while keeping the workflow record.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}]})), metadata=None)
2025-08-02 14:06:02,153 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":2,"result":{"tools":[{"name":"submit_basic_calculation_workflow","description":"Submit a basic calculation workflow using Rowan v2 API.\\n\\nPerforms fundamental quantum chemistry calculations with configurable methods\\nand computational tasks. Returns a workflow object for tracking progress.\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"type":"string"},{"additionalProperties":true,"type":"object"},{}],"description":"The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object","title":"Initial Molecule"},"method":{"default":"uma_m_omol","description":"The method to use for the calculation (e.g., \'uma_m_omol\', \'gfn2-xtb\', \'r2scan_3c\')","title":"Method","type":"string"},"tasks":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"string"},{"type":"null"}],"default":null,"description":"Tasks to perform: list [\'optimize\'], string \'optimize\', or comma-separated \'optimize,frequencies\'. Defaults to None","title":"Tasks"},"mode":{"default":"auto","description":"The mode to run the calculation in (\'auto\', \'rapid\', \'careful\', \'meticulous\')","title":"Mode","type":"string"},"engine":{"default":"omol25","description":"The computational engine to use (\'omol25\', \'xtb\', \'psi4\')","title":"Engine","type":"string"},"name":{"default":"Basic Calculation Workflow","description":"The name of the workflow for identification","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"UUID of the folder to place the workflow in (optional)","title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"description":"Maximum number of credits to use for the workflow (optional)","title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_conformer_search_workflow","description":"Submit a conformer search workflow using Rowan v2 API.\\n\\nExplores the conformational space of a molecule to find low-energy structures.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    conf_gen_mode: default to \\"rapid\\"\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    final_method: default: \\"aimnet2_wb97md3\\"\\n        Try other options, if user specifies\\n    solvent: Optional solvent for implicit solvation (e.g., \\"water\\", \\"ethanol\\")\\n    transition_state: Whether searching for transition state conformers (default: False)\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic conformer search\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CCCC\\",\\n        conf_gen_mode=\\"rapid\\"\\n    )\\n    \\n    # Careful search with solvent\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CC(C)CC(=O)O\\",\\n        conf_gen_mode=\\"careful\\",\\n        solvent=\\"water\\",\\n        final_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"conf_gen_mode":{"default":"rapid","title":"Conf Gen Mode","type":"string"},"final_method":{"default":"aimnet2_wb97md3","title":"Final Method","type":"string"},"solvent":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Solvent"},"transition_state":{"default":false,"title":"Transition State","type":"boolean"},"name":{"default":"Conformer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_solubility_workflow","description":"Submit a solubility prediction workflow using Rowan v2 API.\\n\\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\\nusing machine learning models.\\n\\nArgs:\\n    initial_smiles: SMILES string of the molecule\\n    solvents: List of solvents as SMILES or common names (e.g., [\\"water\\", \\"ethanol\\"])\\n        If None, uses default solvents\\n    temperatures: List of temperatures in Kelvin\\n        If None, uses default temperature range\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic solubility prediction\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)Nc1ccc(O)cc1\\",\\n        solvents=[\\"water\\", \\"ethanol\\"],\\n        temperatures=[298.15, 310.15]\\n    )\\n    \\n    # With SMILES solvents\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)O\\",\\n        solvents=[\\"O\\", \\"CCO\\", \\"CCCCCC\\"],\\n        temperatures=[273.15, 298.15, 323.15]\\n    )\\n","inputSchema":{"properties":{"initial_smiles":{"title":"Initial Smiles","type":"string"},"solvents":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Solvents"},"temperatures":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"default":null,"title":"Temperatures"},"name":{"default":"Solubility Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_smiles"],"type":"object"}},{"name":"submit_pka_workflow","description":"Submit a pKa prediction workflow using Rowan v2 API.\\n\\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\\nusing quantum chemistry calculations.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\\n    deprotonate_elements: List of elements to consider for deprotonation\\n        (e.g., [\\"N\\", \\"O\\", \\"S\\"]). If None, uses defaults\\n    protonate_elements: List of elements to consider for protonation\\n        (e.g., [\\"N\\", \\"O\\"]). If None, uses defaults\\n    mode: Calculation mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic pKa prediction\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"CC(=O)O\\",\\n        pka_range=(2, 8)\\n    )\\n    \\n    # Specific elements with meticulous mode\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"NC(C)C(=O)O\\",\\n        pka_range=(1, 14),\\n        deprotonate_elements=[\\"N\\", \\"O\\"],\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"pka_range":{"default":[2,12],"maxItems":2,"minItems":2,"prefixItems":[{"type":"number"},{"type":"number"}],"title":"Pka Range","type":"array"},"deprotonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Deprotonate Elements"},"protonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Protonate Elements"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"pKa Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_redox_potential_workflow","description":"Submit a redox potential calculation workflow using Rowan v2 API.\\n\\nCalculates reduction and/or oxidation potentials for a molecule using\\nquantum chemistry methods.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    reduction: Whether to calculate reduction potential (default: False)\\n    oxidization: Whether to calculate oxidation potential (default: True)\\n    mode: Calculation mode (default: \\"rapid\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic oxidation potential\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"CC1=CC=CC=C1\\",\\n        oxidization=True\\n    )\\n    \\n    # Both reduction and oxidation with careful mode\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"c1ccccc1\\",\\n        reduction=True,\\n        oxidization=True,\\n        mode=\\"careful\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"reduction":{"default":false,"title":"Reduction","type":"boolean"},"oxidization":{"default":true,"title":"Oxidization","type":"boolean"},"mode":{"default":"rapid","title":"Mode","type":"string"},"name":{"default":"Redox Potential Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_fukui_workflow","description":"Submit a Fukui indices calculation workflow using Rowan v2 API.\\n\\nCalculates Fukui indices to predict molecular reactivity at different sites.\\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    optimization_method: Method for geometry optimization (default: \\"gfn2_xtb\\")\\n        Common options: \\"gfn2_xtb\\", \\"r2scan_3c\\", \\"aimnet2_wb97md3\\"\\n    fukui_method: Method for Fukui calculation (default: \\"gfn1_xtb\\")\\n        Common options: \\"gfn1_xtb\\", \\"gfn2_xtb\\"\\n    solvent_settings: Optional solvent configuration dictionary\\n        Example: {\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic Fukui indices\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"CC(=O)O\\"\\n    )\\n    \\n    # With solvent and advanced methods\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"c1ccccc1N\\",\\n        optimization_method=\\"r2scan_3c\\",\\n        fukui_method=\\"gfn2_xtb\\",\\n        solvent_settings={\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"optimization_method":{"default":"gfn2_xtb","title":"Optimization Method","type":"string"},"fukui_method":{"default":"gfn1_xtb","title":"Fukui Method","type":"string"},"solvent_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Solvent Settings"},"name":{"default":"Fukui Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_tautomer_search_workflow","description":"Submit a tautomer search workflow using Rowan v2 API.\\n\\nSearches for different tautomeric forms of a molecule and evaluates their\\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    mode: Search mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic tautomer search\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"CC(=O)CC(=O)C\\"\\n    )\\n    \\n    # Meticulous search for complex molecule\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"c1ccc2c(c1)ncc(=O)[nH]2\\",\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"Tautomer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_descriptors_workflow","description":"Submit a molecular descriptors calculation workflow using Rowan v2 API.\\n\\nCalculates a comprehensive set of molecular descriptors including:\\n- Physical properties (MW, logP, TPSA, etc.)\\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\\n- Topological indices\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic descriptor calculation\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CC(=O)Nc1ccc(O)cc1\\"\\n    )\\n    \\n    # For complex molecule\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)C\\",\\n        name=\\"Caffeine Descriptors\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"name":{"default":"Descriptors Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_scan_workflow","description":"Submit a potential energy surface scan workflow using Rowan v2 API.\\n\\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\\nor dihedrals) to map the potential energy surface.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    scan_settings: Dictionary specifying scan parameters\\n        Example: {\\n            \\"type\\": \\"dihedral\\",  # or \\"bond\\", \\"angle\\"\\n            \\"atoms\\": [0, 1, 2, 3],  # atom indices\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 10\\n        }\\n    calculation_engine: Computational engine (default: \\"omol25\\")\\n        Options: \\"omol25\\", \\"xtb\\", \\"psi4\\"\\n    calculation_method: Method for calculations (default: \\"uma_m_omol\\")\\n        Options depend on engine\\n    wavefront_propagation: Use wavefront optimization (default: True)\\n        Speeds up scans by using previous geometries as starting points\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Dihedral scan\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC(C)CC\\",\\n        scan_settings={\\n            \\"type\\": \\"dihedral\\",\\n            \\"atoms\\": [0, 1, 2, 3],\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 15\\n        }\\n    )\\n    \\n    # Bond scan with advanced method\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC\\",\\n        scan_settings={\\n            \\"type\\": \\"bond\\",\\n            \\"atoms\\": [0, 1],\\n            \\"start\\": 1.0,\\n            \\"stop\\": 2.5,\\n            \\"step\\": 0.1\\n        },\\n        calculation_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"scan_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Scan Settings"},"calculation_engine":{"default":"omol25","title":"Calculation Engine","type":"string"},"calculation_method":{"default":"uma_m_omol","title":"Calculation Method","type":"string"},"wavefront_propagation":{"default":true,"title":"Wavefront Propagation","type":"boolean"},"name":{"default":"Scan Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_irc_workflow","description":"Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\\n\\nArgs:\\n    initial_molecule: The initial molecule to perform the IRC calculation on.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    method: The computational method to use for the IRC calculation (default: \\"uma_m_omol\\")\\n        See list of available methods for options\\n    engine: The computational engine to use for the calculation (default: \\"omol25\\")\\n        See list of available engines\\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\\n    step_size: The step size to use for the IRC calculation (default: 0.05)\\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted IRC workflow\\n    \\nExample:\\n    # Basic IRC calculation\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"[CH3].[CH3]\\"},\\n        method=\\"gfn2_xtb\\",\\n        max_irc_steps=50\\n    )\\n    \\n    # IRC with specific method and engine\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"CC(O)=CC\\"},\\n        method=\\"r2scan_3c\\",\\n        engine=\\"psi4\\",\\n        step_size=0.03\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"method":{"default":"uma_m_omol","title":"Method","type":"string"},"engine":{"default":"omol25","title":"Engine","type":"string"},"preopt":{"default":true,"title":"Preopt","type":"boolean"},"step_size":{"default":0.05,"title":"Step Size","type":"number"},"max_irc_steps":{"default":30,"title":"Max Irc Steps","type":"integer"},"name":{"default":"IRC Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"type":"object"}},{"name":"submit_protein_cofolding_workflow","description":"Submits a protein cofolding workflow to the API.\\n\\nArgs:\\n    initial_protein_sequences: The sequences of the proteins to be cofolded\\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\\n    use_msa_server: Whether to use the MSA server for the computation\\n    use_potentials: Whether to use potentials for the computation\\n    name: The name of the workflow\\n    model: The model to use for the computation\\n    folder_uuid: The UUID of the folder to store the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Protein dimer cofolding\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\n            \\"MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK\\",\\n            \\"MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF\\"\\n        ]\\n    )\\n    \\n    # Protein-ligand complex\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\"MGSSHHHHHHSSGLVPRGSH\\"],\\n        initial_smiles_list=[\\"CC(=O)O\\", \\"CCO\\"],\\n        ligand_binding_affinity_index=0,\\n        use_msa_server=True\\n    )\\n","inputSchema":{"properties":{"initial_protein_sequences":{"items":{"type":"string"},"title":"Initial Protein Sequences","type":"array"},"initial_smiles_list":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Initial Smiles List"},"ligand_binding_affinity_index":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Ligand Binding Affinity Index"},"use_msa_server":{"default":true,"title":"Use Msa Server","type":"boolean"},"use_potentials":{"default":false,"title":"Use Potentials","type":"boolean"},"name":{"default":"Cofolding Workflow","title":"Name","type":"string"},"model":{"default":"boltz_2","title":"Model","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_protein_sequences"],"type":"object"}},{"name":"submit_docking_workflow","description":"Submits a Docking workflow to the API.\\n\\nArgs:\\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\\n    pocket: The pocket to dock into\\n    initial_molecule: The initial molecule to be docked.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    do_csearch: Whether to perform a conformational search on the ligand\\n    do_optimization: Whether to perform an optimization on the ligand\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic docking with protein UUID\\n    result = submit_docking_workflow(\\n        protein=\\"protein-uuid-123\\",\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CC(=O)Oc1ccccc1C(=O)O\\"}\\n    )\\n    \\n    # Docking with optimization disabled\\n    result = submit_docking_workflow(\\n        protein=protein_obj,\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CCO\\"},\\n        do_csearch=False,\\n        do_optimization=False\\n    )\\n","inputSchema":{"properties":{"protein":{"anyOf":[{"type":"string"},{}],"title":"Protein"},"pocket":{"title":"Pocket"},"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"do_csearch":{"default":true,"title":"Do Csearch","type":"boolean"},"do_optimization":{"default":true,"title":"Do Optimization","type":"boolean"},"name":{"default":"Docking Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["protein","pocket"],"type":"object"}},{"name":"workflow_fetch_latest","description":"Fetch the latest workflow data from the database.\\n\\nUpdates the workflow object with the most recent status and results.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to fetch\\n    in_place: Whether to update the workflow object in place (default: False)\\n    \\nReturns:\\n    Dictionary containing the updated workflow data including status and results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"in_place":{"default":false,"title":"In Place","type":"boolean"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_wait_for_result","description":"Wait for a workflow to complete and return the result.\\n\\nBlocks until the workflow completes, polling at specified intervals.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to wait for\\n    poll_interval: Time in seconds between status checks (default: 5)\\n    \\nReturns:\\n    Dictionary containing the completed workflow data including results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"poll_interval":{"default":5,"title":"Poll Interval","type":"integer"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_get_status","description":"Get the current status of a workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with status information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_stop","description":"Stop a running workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to stop\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete","description":"Delete a workflow.\\n\\nThis permanently removes the workflow and its results from the database.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to delete\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"retrieve_workflow","description":"Retrieve a workflow from the API.\\n\\nArgs:\\n    uuid: The UUID of the workflow to retrieve\\n    \\nReturns:\\n    Dictionary containing the complete workflow data\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"retrieve_calculation_molecules","description":"Retrieve a list of molecules from a calculation.\\n\\nArgs:\\n    uuid: The UUID of the calculation to retrieve molecules from\\n    \\nReturns:\\n    List of dictionaries representing the molecules in the calculation\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"list_workflows","description":"List workflows subject to the specified criteria.\\n\\nArgs:\\n    parent_uuid: The UUID of the parent folder\\n    name_contains: Substring to search for in workflow names\\n    public: Filter workflows by their public status\\n    starred: Filter workflows by their starred status\\n    status: Filter workflows by their status\\n    workflow_type: Filter workflows by their type\\n    page: The page number to retrieve (default: 0)\\n    size: The number of items per page (default: 10)\\n    \\nReturns:\\n    List of workflow dictionaries that match the search criteria\\n    \\nRaises:\\n    HTTPError: If the request to the API fails\\n","inputSchema":{"properties":{"parent_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Parent Uuid"},"name_contains":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name Contains"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"status":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Status"},"workflow_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Workflow Type"},"page":{"default":0,"title":"Page","type":"integer"},"size":{"default":10,"title":"Size","type":"integer"}},"type":"object"}},{"name":"workflow_update","description":"Update workflow details.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to update\\n    name: New name for the workflow (optional)\\n    notes: New notes for the workflow (optional)\\n    starred: Whether to star/unstar the workflow (optional)\\n    public: Whether to make the workflow public/private (optional)\\n    \\nReturns:\\n    Dictionary with updated workflow information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name"},"notes":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Notes"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_is_finished","description":"Check if a workflow is finished.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to check\\n    \\nReturns:\\n    Dictionary with workflow completion status\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete_data","description":"Delete workflow data while keeping the workflow record.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}}]}}\r\n\r\n'
2025-08-02 14:06:02,159 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:06:02,159 - mcp.server.sse - DEBUG - Parsed session ID: 8885b603-9234-4432-8b71-971721bc7eb2
2025-08-02 14:06:02,159 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"prompts/list","jsonrpc":"2.0","id":3}'
2025-08-02 14:06:02,159 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=3)
2025-08-02 14:06:02,159 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=3)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10ab2a720>))
2025-08-02 14:06:02,159 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10ab3bd90>
2025-08-02 14:06:02,159 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 14:06:02,160 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListPromptsRequest
2025-08-02 14:06:02,160 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:06:02,161 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=3, result={'prompts': []})), metadata=None)
2025-08-02 14:06:02,161 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":3,"result":{"prompts":[]}}\r\n\r\n'
2025-08-02 14:06:14,445 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:06:14.445509+00:00\r\n\r\n'
2025-08-02 14:06:14,449 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:06:14.449507+00:00\r\n\r\n'
2025-08-02 14:06:17,138 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:06:17.138698+00:00\r\n\r\n'
2025-08-02 14:06:28,520 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:06:28,521 - mcp.server.sse - DEBUG - Parsed session ID: 8885b603-9234-4432-8b71-971721bc7eb2
2025-08-02 14:06:28,521 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/call","params":{"name":"submit_basic_calculation_workflow","arguments":{"initial_molecule":"{\\n  \\"cell\\": null,\\n  \\"atoms\\": [\\n    {\\n      \\"position\\": [-1.57731622, 0.46259034, 0.02288227],\\n      \\"atomic_number\\": 6\\n    },\\n    {\\n      \\"position\\": [-0.55246934, -0.31349805, -0.78986664],\\n      \\"atomic_number\\": 6\\n    },\\n    {\\n      \\"position\\": [0.65178196, -0.77563238, 0.03104792],\\n      \\"atomic_number\\": 6\\n    },\\n    {\\n      \\"position\\": [1.5013315, 0.37070813, 0.55769072],\\n      \\"atomic_number\\": 6\\n    },\\n    {\\n      \\"position\\": [-1.17009891, 1.41344062, 0.37886292],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [-1.91277475, -0.11690438, 0.88874548],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [-2.45332233, 0.68757176, -0.59399069],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [-0.21575239, 0.30052639, -1.63326648],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [-1.04230601, -1.19688302, -1.21658189],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [0.31558706, -1.39539838, 0.87044712],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [1.28031633, -1.41330121, -0.60197473],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [2.39258685, -0.02154188, 1.05803044],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [0.95227634, 0.97534316, 1.28543953],\\n      \\"atomic_number\\": 1\\n    },\\n    {\\n      \\"position\\": [1.83015992, 1.0229789, -0.25746596],\\n      \\"atomic_number\\": 1\\n    }\\n  ],\\n  \\"charge\\": 0,\\n  \\"dipole\\": null,\\n  \\"energy\\": null,\\n  \\"smiles\\": \\"CCCC\\",\\n  \\"stress\\": null,\\n  \\"elapsed\\": null,\\n  \\"gradient\\": null,\\n  \\"velocities\\": null,\\n  \\"multiplicity\\": 1,\\n  \\"homo_lumo_gap\\": null,\\n  \\"scf_completed\\": null,\\n  \\"scf_iterations\\": null,\\n  \\"mulliken_charges\\": null,\\n  \\"calculation_index\\": null,\\n  \\"vibrational_modes\\": null,\\n  \\"zero_point_energy\\": null,\\n  \\"thermal_energy_corr\\": null,\\n  \\"thermal_enthalpy_corr\\": null,\\n  \\"mulliken_spin_densities\\": null,\\n  \\"thermal_free_energy_corr\\": null\\n}","engine":"xtb","method":"gfn2_xtb","mode":"rapid","tasks":"optimize","name":"Butane Optimization Workflow"},"_meta":{"progressToken":4}},"jsonrpc":"2.0","id":4}'
2025-08-02 14:06:28,521 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': '{\n  "cell": null,\n  "atoms": [\n    {\n      "position": [-1.57731622, 0.46259034, 0.02288227],\n      "atomic_number": 6\n    },\n    {\n      "position": [-0.55246934, -0.31349805, -0.78986664],\n      "atomic_number": 6\n    },\n    {\n      "position": [0.65178196, -0.77563238, 0.03104792],\n      "atomic_number": 6\n    },\n    {\n      "position": [1.5013315, 0.37070813, 0.55769072],\n      "atomic_number": 6\n    },\n    {\n      "position": [-1.17009891, 1.41344062, 0.37886292],\n      "atomic_number": 1\n    },\n    {\n      "position": [-1.91277475, -0.11690438, 0.88874548],\n      "atomic_number": 1\n    },\n    {\n      "position": [-2.45332233, 0.68757176, -0.59399069],\n      "atomic_number": 1\n    },\n    {\n      "position": [-0.21575239, 0.30052639, -1.63326648],\n      "atomic_number": 1\n    },\n    {\n      "position": [-1.04230601, -1.19688302, -1.21658189],\n      "atomic_number": 1\n    },\n    {\n      "position": [0.31558706, -1.39539838, 0.87044712],\n      "atomic_number": 1\n    },\n    {\n      "position": [1.28031633, -1.41330121, -0.60197473],\n      "atomic_number": 1\n    },\n    {\n      "position": [2.39258685, -0.02154188, 1.05803044],\n      "atomic_number": 1\n    },\n    {\n      "position": [0.95227634, 0.97534316, 1.28543953],\n      "atomic_number": 1\n    },\n    {\n      "position": [1.83015992, 1.0229789, -0.25746596],\n      "atomic_number": 1\n    }\n  ],\n  "charge": 0,\n  "dipole": null,\n  "energy": null,\n  "smiles": "CCCC",\n  "stress": null,\n  "elapsed": null,\n  "gradient": null,\n  "velocities": null,\n  "multiplicity": 1,\n  "homo_lumo_gap": null,\n  "scf_completed": null,\n  "scf_iterations": null,\n  "mulliken_charges": null,\n  "calculation_index": null,\n  "vibrational_modes": null,\n  "zero_point_energy": null,\n  "thermal_energy_corr": null,\n  "thermal_enthalpy_corr": null,\n  "mulliken_spin_densities": null,\n  "thermal_free_energy_corr": null\n}', 'engine': 'xtb', 'method': 'gfn2_xtb', 'mode': 'rapid', 'tasks': 'optimize', 'name': 'Butane Optimization Workflow'}, '_meta': {'progressToken': 4}}, jsonrpc='2.0', id=4)
2025-08-02 14:06:28,521 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': '{\n  "cell": null,\n  "atoms": [\n    {\n      "position": [-1.57731622, 0.46259034, 0.02288227],\n      "atomic_number": 6\n    },\n    {\n      "position": [-0.55246934, -0.31349805, -0.78986664],\n      "atomic_number": 6\n    },\n    {\n      "position": [0.65178196, -0.77563238, 0.03104792],\n      "atomic_number": 6\n    },\n    {\n      "position": [1.5013315, 0.37070813, 0.55769072],\n      "atomic_number": 6\n    },\n    {\n      "position": [-1.17009891, 1.41344062, 0.37886292],\n      "atomic_number": 1\n    },\n    {\n      "position": [-1.91277475, -0.11690438, 0.88874548],\n      "atomic_number": 1\n    },\n    {\n      "position": [-2.45332233, 0.68757176, -0.59399069],\n      "atomic_number": 1\n    },\n    {\n      "position": [-0.21575239, 0.30052639, -1.63326648],\n      "atomic_number": 1\n    },\n    {\n      "position": [-1.04230601, -1.19688302, -1.21658189],\n      "atomic_number": 1\n    },\n    {\n      "position": [0.31558706, -1.39539838, 0.87044712],\n      "atomic_number": 1\n    },\n    {\n      "position": [1.28031633, -1.41330121, -0.60197473],\n      "atomic_number": 1\n    },\n    {\n      "position": [2.39258685, -0.02154188, 1.05803044],\n      "atomic_number": 1\n    },\n    {\n      "position": [0.95227634, 0.97534316, 1.28543953],\n      "atomic_number": 1\n    },\n    {\n      "position": [1.83015992, 1.0229789, -0.25746596],\n      "atomic_number": 1\n    }\n  ],\n  "charge": 0,\n  "dipole": null,\n  "energy": null,\n  "smiles": "CCCC",\n  "stress": null,\n  "elapsed": null,\n  "gradient": null,\n  "velocities": null,\n  "multiplicity": 1,\n  "homo_lumo_gap": null,\n  "scf_completed": null,\n  "scf_iterations": null,\n  "mulliken_charges": null,\n  "calculation_index": null,\n  "vibrational_modes": null,\n  "zero_point_energy": null,\n  "thermal_energy_corr": null,\n  "thermal_enthalpy_corr": null,\n  "mulliken_spin_densities": null,\n  "thermal_free_energy_corr": null\n}', 'engine': 'xtb', 'method': 'gfn2_xtb', 'mode': 'rapid', 'tasks': 'optimize', 'name': 'Butane Optimization Workflow'}, '_meta': {'progressToken': 4}}, jsonrpc='2.0', id=4)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10ab2a8d0>))
2025-08-02 14:06:28,522 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10ab99480>
2025-08-02 14:06:28,522 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 14:06:28,522 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type CallToolRequest
2025-08-02 14:06:28,522 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Parsed string tasks '['optimize']' to list: ['optimize']
2025-08-02 14:06:28,523 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 14:06:28,523 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 14:06:28,523 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2_xtb (type: <class 'str'>)
2025-08-02 14:06:28,523 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: ['optimize'] (type: <class 'list'>)
2025-08-02 14:06:28,523 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: rapid
2025-08-02 14:06:28,523 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 14:06:28,523 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Butane Optimization Workflow
2025-08-02 14:06:28,523 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: '{
  "cell": null,
  "atoms": [
    {
      "position": [-1.57731622, 0.46259034, 0.02288227],
      "atomic_number": 6
    },
    {
      "position": [-0.55246934, -0.31349805, -0.78986664],
      "atomic_number": 6
    },
    {
      "position": [0.65178196, -0.77563238, 0.03104792],
      "atomic_number": 6
    },
    {
      "position": [1.5013315, 0.37070813, 0.55769072],
      "atomic_number": 6
    },
    {
      "position": [-1.17009891, 1.41344062, 0.37886292],
      "atomic_number": 1
    },
    {
      "position": [-1.91277475, -0.11690438, 0.88874548],
      "atomic_number": 1
    },
    {
      "position": [-2.45332233, 0.68757176, -0.59399069],
      "atomic_number": 1
    },
    {
      "position": [-0.21575239, 0.30052639, -1.63326648],
      "atomic_number": 1
    },
    {
      "position": [-1.04230601, -1.19688302, -1.21658189],
      "atomic_number": 1
    },
    {
      "position": [0.31558706, -1.39539838, 0.87044712],
      "atomic_number": 1
    },
    {
      "position": [1.28031633, -1.41330121, -0.60197473],
      "atomic_number": 1
    },
    {
      "position": [2.39258685, -0.02154188, 1.05803044],
      "atomic_number": 1
    },
    {
      "position": [0.95227634, 0.97534316, 1.28543953],
      "atomic_number": 1
    },
    {
      "position": [1.83015992, 1.0229789, -0.25746596],
      "atomic_number": 1
    }
  ],
  "charge": 0,
  "dipole": null,
  "energy": null,
  "smiles": "CCCC",
  "stress": null,
  "elapsed": null,
  "gradient": null,
  "velocities": null,
  "multiplicity": 1,
  "homo_lumo_gap": null,
  "scf_completed": null,
  "scf_iterations": null,
  "mulliken_charges": null,
  "calculation_index": null,
  "vibrational_modes": null,
  "zero_point_energy": null,
  "thermal_energy_corr": null,
  "thermal_enthalpy_corr": null,
  "mulliken_spin_densities": null,
  "thermal_free_energy_corr": null
}' (SMILES string)
2025-08-02 14:06:28,523 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 14:06:28,523 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Could not convert to StJamesMolecule: , passing string directly
2025-08-02 14:06:28,523 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 14:06:28,548 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 14:06:28,650 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10ac612b0>
2025-08-02 14:06:28,650 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10ac219a0> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 14:06:28,765 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10ac24a50>
2025-08-02 14:06:28,765 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 14:06:28,765 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 14:06:28,765 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 14:06:28,765 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 14:06:28,765 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 14:06:29,134 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 500, b'Internal Server Error', [(b'Date', b'Sat, 02 Aug 2025 21:06:29 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'57'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 14:06:29,138 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-02 14:06:29,139 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 14:06:29,139 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 14:06:29,139 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 14:06:29,139 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 14:06:29,140 - httpcore.connection - DEBUG - close.started
2025-08-02 14:06:29,140 - httpcore.connection - DEBUG - close.complete
2025-08-02 14:06:29,140 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - ERROR - ERROR in submit_basic_calculation_workflow: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-02 14:06:29,140 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - ERROR - Error type: HTTPStatusError
2025-08-02 14:06:29,145 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - ERROR - Traceback:
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_basic_calculation_workflow.py", line 157, in submit_basic_calculation_workflow
    result = rowan.submit_basic_calculation_workflow(
        initial_molecule=initial_molecule,
    ...<6 lines>...
        max_credits=max_credits
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 410, in submit_basic_calculation_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500

2025-08-02 14:06:29,146 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_basic_calculation_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_basic_calculation_workflow.py", line 157, in submit_basic_calculation_workflow
    result = rowan.submit_basic_calculation_workflow(
        initial_molecule=initial_molecule,
    ...<6 lines>...
        max_credits=max_credits
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 410, in submit_basic_calculation_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-02 14:06:29,263 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:06:29,264 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=4, result={'content': [{'type': 'text', 'text': "Error calling tool 'submit_basic_calculation_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500"}], 'isError': True})), metadata=None)
2025-08-02 14:06:29,264 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":4,"result":{"content":[{"type":"text","text":"Error calling tool \'submit_basic_calculation_workflow\': Server error \'500 Internal Server Error\' for url \'https://api.rowansci.com/workflow\'\\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500"}],"isError":true}}\r\n\r\n'
2025-08-02 14:06:29,448 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:06:29.448572+00:00\r\n\r\n'
2025-08-02 14:06:29,449 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:06:29.449615+00:00\r\n\r\n'
2025-08-02 14:06:32,140 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:06:32.140679+00:00\r\n\r\n'
2025-08-02 14:06:35,563 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:06:35,564 - mcp.server.sse - DEBUG - Parsed session ID: 8885b603-9234-4432-8b71-971721bc7eb2
2025-08-02 14:06:35,564 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/call","params":{"name":"submit_basic_calculation_workflow","arguments":{"initial_molecule":"CCCC","engine":"xtb","method":"gfn2_xtb","mode":"rapid","tasks":"optimize","name":"Butane Optimization Workflow"},"_meta":{"progressToken":5}},"jsonrpc":"2.0","id":5}'
2025-08-02 14:06:35,564 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'engine': 'xtb', 'method': 'gfn2_xtb', 'mode': 'rapid', 'tasks': 'optimize', 'name': 'Butane Optimization Workflow'}, '_meta': {'progressToken': 5}}, jsonrpc='2.0', id=5)
2025-08-02 14:06:35,564 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'engine': 'xtb', 'method': 'gfn2_xtb', 'mode': 'rapid', 'tasks': 'optimize', 'name': 'Butane Optimization Workflow'}, '_meta': {'progressToken': 5}}, jsonrpc='2.0', id=5)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10ac9d400>))
2025-08-02 14:06:35,565 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10ab9b100>
2025-08-02 14:06:35,566 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 14:06:35,566 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type CallToolRequest
2025-08-02 14:06:35,567 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Parsed string tasks '['optimize']' to list: ['optimize']
2025-08-02 14:06:35,567 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 14:06:35,567 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 14:06:35,567 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2_xtb (type: <class 'str'>)
2025-08-02 14:06:35,567 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: ['optimize'] (type: <class 'list'>)
2025-08-02 14:06:35,567 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: rapid
2025-08-02 14:06:35,567 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 14:06:35,567 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Butane Optimization Workflow
2025-08-02 14:06:35,568 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: 'CCCC' (SMILES string)
2025-08-02 14:06:35,568 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 14:06:35,601 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully converted to StJamesMolecule
2025-08-02 14:06:35,601 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 14:06:35,609 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 14:06:35,710 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10ac26fd0>
2025-08-02 14:06:35,710 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10ab2ad50> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 14:06:35,829 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10ab9aea0>
2025-08-02 14:06:35,830 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 14:06:35,830 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 14:06:35,830 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 14:06:35,831 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 14:06:35,831 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 14:06:36,405 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 21:06:36 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2081'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 14:06:36,406 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 14:06:36,407 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 14:06:36,407 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 14:06:36,408 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 14:06:36,408 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 14:06:36,408 - httpcore.connection - DEBUG - close.started
2025-08-02 14:06:36,409 - httpcore.connection - DEBUG - close.complete
2025-08-02 14:06:36,409 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: 002e0eb2-60a6-440b-9f2b-c7e8859d6d82
2025-08-02 14:06:36,410 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:06:36,410 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=5, result={'content': [{'type': 'text', 'text': '{\n  "name": "Butane Optimization Workflow",\n  "uuid": "002e0eb2-60a6-440b-9f2b-c7e8859d6d82",\n  "created_at": "2025-08-02T21:06:35.999439Z",\n  "updated_at": null,\n  "started_at": null,\n  "completed_at": null,\n  "object_status": 0,\n  "parent_uuid": "e5c3ce65-43df-4ab3-90e0-a56f42584cc0",\n  "notes": "",\n  "starred": false,\n  "public": false,\n  "object_type": "basic_calculation",\n  "object_data": {\n    "settings": {\n      "method": "GFN2_XTB",\n      "tasks": [\n        "optimize"\n      ],\n      "mode": "rapid"\n    },\n    "engine": "xtb",\n    "initial_molecule": {\n      "charge": 0,\n      "multiplicity": 1,\n      "atoms": [\n        {\n          "atomic_number": 6,\n          "position": [\n            -1.57731622,\n            0.46259034,\n            0.02288227\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            -0.55246934,\n            -0.31349805,\n            -0.78986664\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            0.65178196,\n            -0.77563238,\n            0.03104792\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            1.5013315,\n            0.37070813,\n            0.55769072\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.17009891,\n            1.41344062,\n            0.37886292\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.91277475,\n            -0.11690438,\n            0.88874548\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -2.45332233,\n            0.68757176,\n            -0.59399069\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -0.21575239,\n            0.30052639,\n            -1.63326648\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.04230601,\n            -1.19688302,\n            -1.21658189\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            0.31558706,\n            -1.39539838,\n            0.87044712\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            1.28031633,\n            -1.41330121,\n            -0.60197473\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            2.39258685,\n            -0.02154188,\n            1.05803044\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            0.95227634,\n            0.97534316,\n            1.28543953\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            1.83015992,\n            1.0229789,\n            -0.25746596\n          ]\n        }\n      ],\n      "cell": null,\n      "energy": null,\n      "scf_iterations": null,\n      "scf_completed": null,\n      "elapsed": null,\n      "homo_lumo_gap": null,\n      "gradient": null,\n      "stress": null,\n      "velocities": null,\n      "mulliken_charges": null,\n      "mulliken_spin_densities": null,\n      "dipole": null,\n      "vibrational_modes": null,\n      "zero_point_energy": null,\n      "thermal_energy_corr": null,\n      "thermal_enthalpy_corr": null,\n      "thermal_free_energy_corr": null,\n      "smiles": "CCCC",\n      "calculation_index": null\n    }\n  },\n  "email_when_complete": false,\n  "max_credits": null,\n  "elapsed": 0.0,\n  "credits_charged": 0.0\n}'}], 'isError': False})), metadata=None)
2025-08-02 14:06:36,411 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":5,"result":{"content":[{"type":"text","text":"{\\n  \\"name\\": \\"Butane Optimization Workflow\\",\\n  \\"uuid\\": \\"002e0eb2-60a6-440b-9f2b-c7e8859d6d82\\",\\n  \\"created_at\\": \\"2025-08-02T21:06:35.999439Z\\",\\n  \\"updated_at\\": null,\\n  \\"started_at\\": null,\\n  \\"completed_at\\": null,\\n  \\"object_status\\": 0,\\n  \\"parent_uuid\\": \\"e5c3ce65-43df-4ab3-90e0-a56f42584cc0\\",\\n  \\"notes\\": \\"\\",\\n  \\"starred\\": false,\\n  \\"public\\": false,\\n  \\"object_type\\": \\"basic_calculation\\",\\n  \\"object_data\\": {\\n    \\"settings\\": {\\n      \\"method\\": \\"GFN2_XTB\\",\\n      \\"tasks\\": [\\n        \\"optimize\\"\\n      ],\\n      \\"mode\\": \\"rapid\\"\\n    },\\n    \\"engine\\": \\"xtb\\",\\n    \\"initial_molecule\\": {\\n      \\"charge\\": 0,\\n      \\"multiplicity\\": 1,\\n      \\"atoms\\": [\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -1.57731622,\\n            0.46259034,\\n            0.02288227\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -0.55246934,\\n            -0.31349805,\\n            -0.78986664\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            0.65178196,\\n            -0.77563238,\\n            0.03104792\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            1.5013315,\\n            0.37070813,\\n            0.55769072\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.17009891,\\n            1.41344062,\\n            0.37886292\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.91277475,\\n            -0.11690438,\\n            0.88874548\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -2.45332233,\\n            0.68757176,\\n            -0.59399069\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -0.21575239,\\n            0.30052639,\\n            -1.63326648\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.04230601,\\n            -1.19688302,\\n            -1.21658189\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            0.31558706,\\n            -1.39539838,\\n            0.87044712\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            1.28031633,\\n            -1.41330121,\\n            -0.60197473\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            2.39258685,\\n            -0.02154188,\\n            1.05803044\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            0.95227634,\\n            0.97534316,\\n            1.28543953\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            1.83015992,\\n            1.0229789,\\n            -0.25746596\\n          ]\\n        }\\n      ],\\n      \\"cell\\": null,\\n      \\"energy\\": null,\\n      \\"scf_iterations\\": null,\\n      \\"scf_completed\\": null,\\n      \\"elapsed\\": null,\\n      \\"homo_lumo_gap\\": null,\\n      \\"gradient\\": null,\\n      \\"stress\\": null,\\n      \\"velocities\\": null,\\n      \\"mulliken_charges\\": null,\\n      \\"mulliken_spin_densities\\": null,\\n      \\"dipole\\": null,\\n      \\"vibrational_modes\\": null,\\n      \\"zero_point_energy\\": null,\\n      \\"thermal_energy_corr\\": null,\\n      \\"thermal_enthalpy_corr\\": null,\\n      \\"thermal_free_energy_corr\\": null,\\n      \\"smiles\\": \\"CCCC\\",\\n      \\"calculation_index\\": null\\n    }\\n  },\\n  \\"email_when_complete\\": false,\\n  \\"max_credits\\": null,\\n  \\"elapsed\\": 0.0,\\n  \\"credits_charged\\": 0.0\\n}"}],"isError":false}}\r\n\r\n'
2025-08-02 14:06:44,449 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:06:44.449269+00:00\r\n\r\n'
2025-08-02 14:06:44,451 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:06:44.451520+00:00\r\n\r\n'
2025-08-02 14:06:47,141 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:06:47.141348+00:00\r\n\r\n'
2025-08-02 14:06:59,452 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:06:59.452506+00:00\r\n\r\n'
2025-08-02 14:06:59,455 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:06:59.455907+00:00\r\n\r\n'
2025-08-02 14:07:02,144 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:07:02.143871+00:00\r\n\r\n'
2025-08-02 14:07:14,457 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:07:14.457828+00:00\r\n\r\n'
2025-08-02 14:07:14,458 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:07:14.458198+00:00\r\n\r\n'
2025-08-02 14:07:17,146 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:07:17.146009+00:00\r\n\r\n'
2025-08-02 14:07:29,459 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:07:29.459598+00:00\r\n\r\n'
2025-08-02 14:07:29,460 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:07:29.460694+00:00\r\n\r\n'
2025-08-02 14:07:32,147 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:07:32.147510+00:00\r\n\r\n'
2025-08-02 14:07:44,464 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:07:44.464113+00:00\r\n\r\n'
2025-08-02 14:07:44,466 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:07:44.466545+00:00\r\n\r\n'
2025-08-02 14:07:47,148 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:07:47.148708+00:00\r\n\r\n'
2025-08-02 14:07:59,468 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:07:59.468603+00:00\r\n\r\n'
2025-08-02 14:07:59,468 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:07:59.468977+00:00\r\n\r\n'
2025-08-02 14:08:02,150 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:08:02.150418+00:00\r\n\r\n'
2025-08-02 14:08:14,470 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:08:14.470266+00:00\r\n\r\n'
2025-08-02 14:08:14,471 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:08:14.471941+00:00\r\n\r\n'
2025-08-02 14:08:17,152 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:08:17.152618+00:00\r\n\r\n'
2025-08-02 14:08:29,473 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:08:29.473105+00:00\r\n\r\n'
2025-08-02 14:08:29,473 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:08:29.473267+00:00\r\n\r\n'
2025-08-02 14:08:32,155 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:08:32.155338+00:00\r\n\r\n'
2025-08-02 14:08:44,474 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:08:44.474459+00:00\r\n\r\n'
2025-08-02 14:08:44,475 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:08:44.475600+00:00\r\n\r\n'
2025-08-02 14:08:47,157 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:08:47.157511+00:00\r\n\r\n'
2025-08-02 14:08:59,477 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:08:59.477404+00:00\r\n\r\n'
2025-08-02 14:08:59,478 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:08:59.478001+00:00\r\n\r\n'
2025-08-02 14:09:02,160 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:09:02.160226+00:00\r\n\r\n'
2025-08-02 14:09:14,479 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:09:14.478749+00:00\r\n\r\n'
2025-08-02 14:09:14,482 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:09:14.482153+00:00\r\n\r\n'
2025-08-02 14:09:17,166 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:09:17.166000+00:00\r\n\r\n'
2025-08-02 14:09:29,484 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:09:29.483901+00:00\r\n\r\n'
2025-08-02 14:09:29,485 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:09:29.485052+00:00\r\n\r\n'
2025-08-02 14:09:32,169 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:09:32.168834+00:00\r\n\r\n'
2025-08-02 14:09:44,487 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:09:44.486916+00:00\r\n\r\n'
2025-08-02 14:09:44,490 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:09:44.490548+00:00\r\n\r\n'
2025-08-02 14:09:47,171 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:09:47.171361+00:00\r\n\r\n'
2025-08-02 14:09:59,491 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:09:59.491436+00:00\r\n\r\n'
2025-08-02 14:09:59,492 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:09:59.492552+00:00\r\n\r\n'
2025-08-02 14:10:02,172 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:10:02.172028+00:00\r\n\r\n'
2025-08-02 14:10:14,493 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:10:14.493479+00:00\r\n\r\n'
2025-08-02 14:10:14,495 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:10:14.494989+00:00\r\n\r\n'
2025-08-02 14:10:17,173 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:10:17.173513+00:00\r\n\r\n'
2025-08-02 14:10:29,495 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:10:29.495682+00:00\r\n\r\n'
2025-08-02 14:10:29,499 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:10:29.499536+00:00\r\n\r\n'
2025-08-02 14:10:32,175 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:10:32.175458+00:00\r\n\r\n'
2025-08-02 14:10:44,501 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:10:44.501328+00:00\r\n\r\n'
2025-08-02 14:10:44,505 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:10:44.505018+00:00\r\n\r\n'
2025-08-02 14:10:47,177 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:10:47.177572+00:00\r\n\r\n'
2025-08-02 14:11:02,368 - mcp.server.lowlevel.server - DEBUG - Initializing server 'Rowan MCP Server'
2025-08-02 14:11:02,369 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListToolsRequest
2025-08-02 14:11:02,369 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListResourcesRequest
2025-08-02 14:11:02,369 - mcp.server.lowlevel.server - DEBUG - Registering handler for ListResourceTemplatesRequest
2025-08-02 14:11:02,369 - mcp.server.lowlevel.server - DEBUG - Registering handler for PromptListRequest
2025-08-02 14:11:02,369 - mcp.server.lowlevel.server - DEBUG - Registering handler for CallToolRequest
2025-08-02 14:11:02,369 - mcp.server.lowlevel.server - DEBUG - Registering handler for ReadResourceRequest
2025-08-02 14:11:02,369 - mcp.server.lowlevel.server - DEBUG - Registering handler for GetPromptRequest
2025-08-02 14:11:02,385 - asyncio - DEBUG - Using selector: KqueueSelector
2025-08-02 14:11:02,385 - mcp.server.sse - DEBUG - SseServerTransport initialized with endpoint: /messages/
2025-08-02 14:11:02,386 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-02 14:11:03,365 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 14:11:03,367 - mcp.server.sse - DEBUG - Created new session with ID: 63b1b003-2a42-4e10-9373-a42f8907b175
2025-08-02 14:11:03,367 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 14:11:03,367 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 14:11:03,371 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 14:11:03,372 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=63b1b0032a424e109373a42f8907b175
2025-08-02 14:11:03,372 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=63b1b0032a424e109373a42f8907b175\r\n\r\n'
2025-08-02 14:11:03,373 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 14:11:03,374 - mcp.server.sse - DEBUG - Created new session with ID: f57c3b67-d2ae-43a6-b332-48d6de342bd6
2025-08-02 14:11:03,374 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 14:11:03,375 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 14:11:03,377 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 14:11:03,377 - mcp.server.sse - DEBUG - Created new session with ID: 973bbfa0-fea7-4937-99c1-e7435b1c7e13
2025-08-02 14:11:03,377 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 14:11:03,377 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 14:11:03,380 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 14:11:03,380 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 14:11:03,381 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=f57c3b67d2ae43a6b33248d6de342bd6
2025-08-02 14:11:03,381 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=973bbfa0fea7493799c1e7435b1c7e13
2025-08-02 14:11:03,381 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=f57c3b67d2ae43a6b33248d6de342bd6\r\n\r\n'
2025-08-02 14:11:03,381 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=973bbfa0fea7493799c1e7435b1c7e13\r\n\r\n'
2025-08-02 14:11:06,082 - sse_starlette.sse - DEBUG - Got event: http.disconnect. Stop streaming.
2025-08-02 14:11:06,083 - root - DEBUG - Client session disconnected 973bbfa0-fea7-4937-99c1-e7435b1c7e13
2025-08-02 14:11:06,544 - mcp.server.sse - DEBUG - Setting up SSE connection
2025-08-02 14:11:06,545 - mcp.server.sse - DEBUG - Created new session with ID: 049901af-d6f5-4643-b2c0-abf61b4cca46
2025-08-02 14:11:06,545 - mcp.server.sse - DEBUG - Starting SSE response task
2025-08-02 14:11:06,545 - mcp.server.sse - DEBUG - Yielding read and write streams
2025-08-02 14:11:06,548 - mcp.server.sse - DEBUG - Starting SSE writer
2025-08-02 14:11:06,548 - mcp.server.sse - DEBUG - Sent endpoint event: /messages/?session_id=049901afd6f54643b2c0abf61b4cca46
2025-08-02 14:11:06,548 - sse_starlette.sse - DEBUG - chunk: b'event: endpoint\r\ndata: /messages/?session_id=049901afd6f54643b2c0abf61b4cca46\r\n\r\n'
2025-08-02 14:11:06,552 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:11:06,552 - mcp.server.sse - DEBUG - Parsed session ID: 049901af-d6f5-4643-b2c0-abf61b4cca46
2025-08-02 14:11:06,552 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"initialize","params":{"protocolVersion":"2025-06-18","capabilities":{"tools":true,"prompts":true,"resources":false,"logging":false,"roots":{"listChanged":false}},"clientInfo":{"name":"cursor-vscode","version":"1.0.0"}},"jsonrpc":"2.0","id":1}'
2025-08-02 14:11:06,553 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'tools': True, 'prompts': True, 'resources': False, 'logging': False, 'roots': {'listChanged': False}}, 'clientInfo': {'name': 'cursor-vscode', 'version': '1.0.0'}}, jsonrpc='2.0', id=1)
2025-08-02 14:11:06,553 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='initialize', params={'protocolVersion': '2025-06-18', 'capabilities': {'tools': True, 'prompts': True, 'resources': False, 'logging': False, 'roots': {'listChanged': False}}, 'clientInfo': {'name': 'cursor-vscode', 'version': '1.0.0'}}, jsonrpc='2.0', id=1)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10bf11610>))
2025-08-02 14:11:06,554 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=1, result={'protocolVersion': '2025-03-26', 'capabilities': {'experimental': {}, 'prompts': {'listChanged': False}, 'resources': {'subscribe': False, 'listChanged': False}, 'tools': {'listChanged': False}}, 'serverInfo': {'name': 'Rowan MCP Server', 'version': '1.9.3'}})), metadata=None)
2025-08-02 14:11:06,555 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":1,"result":{"protocolVersion":"2025-03-26","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"Rowan MCP Server","version":"1.9.3"}}}\r\n\r\n'
2025-08-02 14:11:06,558 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:11:06,558 - mcp.server.sse - DEBUG - Parsed session ID: 049901af-d6f5-4643-b2c0-abf61b4cca46
2025-08-02 14:11:06,558 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"notifications/initialized","jsonrpc":"2.0"}'
2025-08-02 14:11:06,558 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 14:11:06,558 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCNotification(method='notifications/initialized', params=None, jsonrpc='2.0')), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10bf1ce10>))
2025-08-02 14:11:06,559 - mcp.server.lowlevel.server - DEBUG - Received message: root=InitializedNotification(method='notifications/initialized', params=None, jsonrpc='2.0')
2025-08-02 14:11:06,563 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:11:06,563 - mcp.server.sse - DEBUG - Parsed session ID: 049901af-d6f5-4643-b2c0-abf61b4cca46
2025-08-02 14:11:06,564 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/list","jsonrpc":"2.0","id":2}'
2025-08-02 14:11:06,564 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=2)
2025-08-02 14:11:06,564 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/list', params=None, jsonrpc='2.0', id=2)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10be7ad50>))
2025-08-02 14:11:06,565 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10be8b890>
2025-08-02 14:11:06,565 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 14:11:06,566 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListToolsRequest
2025-08-02 14:11:06,567 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:11:06,567 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=2, result={'tools': [{'name': 'submit_basic_calculation_workflow', 'description': 'Submit a basic calculation workflow using Rowan v2 API.\n\nPerforms fundamental quantum chemistry calculations with configurable methods\nand computational tasks. Returns a workflow object for tracking progress.\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'type': 'string'}, {'additionalProperties': True, 'type': 'object'}, {}], 'description': 'The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object', 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'description': "The method to use for the calculation (e.g., 'uma_m_omol', 'gfn2-xtb', 'r2scan_3c')", 'title': 'Method', 'type': 'string'}, 'tasks': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'string'}, {'type': 'null'}], 'default': None, 'description': "Tasks to perform: list ['optimize'], string 'optimize', or comma-separated 'optimize,frequencies'. Defaults to None", 'title': 'Tasks'}, 'mode': {'default': 'auto', 'description': "The mode to run the calculation in ('auto', 'rapid', 'careful', 'meticulous')", 'title': 'Mode', 'type': 'string'}, 'engine': {'default': 'omol25', 'description': "The computational engine to use ('omol25', 'xtb', 'psi4')", 'title': 'Engine', 'type': 'string'}, 'name': {'default': 'Basic Calculation Workflow', 'description': 'The name of the workflow for identification', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'UUID of the folder to place the workflow in (optional)', 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'description': 'Maximum number of credits to use for the workflow (optional)', 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_conformer_search_workflow', 'description': 'Submit a conformer search workflow using Rowan v2 API.\n\nExplores the conformational space of a molecule to find low-energy structures.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    conf_gen_mode: default to "rapid"\n        Options: "rapid", "careful", "meticulous"\n    final_method: default: "aimnet2_wb97md3"\n        Try other options, if user specifies\n    solvent: Optional solvent for implicit solvation (e.g., "water", "ethanol")\n    transition_state: Whether searching for transition state conformers (default: False)\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic conformer search\n    result = submit_conformer_search_workflow(\n        initial_molecule="CCCC",\n        conf_gen_mode="rapid"\n    )\n    \n    # Careful search with solvent\n    result = submit_conformer_search_workflow(\n        initial_molecule="CC(C)CC(=O)O",\n        conf_gen_mode="careful",\n        solvent="water",\n        final_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'conf_gen_mode': {'default': 'rapid', 'title': 'Conf Gen Mode', 'type': 'string'}, 'final_method': {'default': 'aimnet2_wb97md3', 'title': 'Final Method', 'type': 'string'}, 'solvent': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Solvent'}, 'transition_state': {'default': False, 'title': 'Transition State', 'type': 'boolean'}, 'name': {'default': 'Conformer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_solubility_workflow', 'description': 'Submit a solubility prediction workflow using Rowan v2 API.\n\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\nusing machine learning models.\n\nArgs:\n    initial_smiles: SMILES string of the molecule\n    solvents: List of solvents as SMILES or common names (e.g., ["water", "ethanol"])\n        If None, uses default solvents\n    temperatures: List of temperatures in Kelvin\n        If None, uses default temperature range\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic solubility prediction\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)Nc1ccc(O)cc1",\n        solvents=["water", "ethanol"],\n        temperatures=[298.15, 310.15]\n    )\n    \n    # With SMILES solvents\n    result = submit_solubility_workflow(\n        initial_smiles="CC(=O)O",\n        solvents=["O", "CCO", "CCCCCC"],\n        temperatures=[273.15, 298.15, 323.15]\n    )\n', 'inputSchema': {'properties': {'initial_smiles': {'title': 'Initial Smiles', 'type': 'string'}, 'solvents': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Solvents'}, 'temperatures': {'anyOf': [{'items': {'type': 'number'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Temperatures'}, 'name': {'default': 'Solubility Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_smiles'], 'type': 'object'}}, {'name': 'submit_pka_workflow', 'description': 'Submit a pKa prediction workflow using Rowan v2 API.\n\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\nusing quantum chemistry calculations.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\n    deprotonate_elements: List of elements to consider for deprotonation\n        (e.g., ["N", "O", "S"]). If None, uses defaults\n    protonate_elements: List of elements to consider for protonation\n        (e.g., ["N", "O"]). If None, uses defaults\n    mode: Calculation mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic pKa prediction\n    result = submit_pka_workflow(\n        initial_molecule="CC(=O)O",\n        pka_range=(2, 8)\n    )\n    \n    # Specific elements with meticulous mode\n    result = submit_pka_workflow(\n        initial_molecule="NC(C)C(=O)O",\n        pka_range=(1, 14),\n        deprotonate_elements=["N", "O"],\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'pka_range': {'default': [2, 12], 'maxItems': 2, 'minItems': 2, 'prefixItems': [{'type': 'number'}, {'type': 'number'}], 'title': 'Pka Range', 'type': 'array'}, 'deprotonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Deprotonate Elements'}, 'protonate_elements': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Protonate Elements'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'pKa Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_redox_potential_workflow', 'description': 'Submit a redox potential calculation workflow using Rowan v2 API.\n\nCalculates reduction and/or oxidation potentials for a molecule using\nquantum chemistry methods.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    reduction: Whether to calculate reduction potential (default: False)\n    oxidization: Whether to calculate oxidation potential (default: True)\n    mode: Calculation mode (default: "rapid")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic oxidation potential\n    result = submit_redox_potential_workflow(\n        initial_molecule="CC1=CC=CC=C1",\n        oxidization=True\n    )\n    \n    # Both reduction and oxidation with careful mode\n    result = submit_redox_potential_workflow(\n        initial_molecule="c1ccccc1",\n        reduction=True,\n        oxidization=True,\n        mode="careful"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'reduction': {'default': False, 'title': 'Reduction', 'type': 'boolean'}, 'oxidization': {'default': True, 'title': 'Oxidization', 'type': 'boolean'}, 'mode': {'default': 'rapid', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Redox Potential Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_fukui_workflow', 'description': 'Submit a Fukui indices calculation workflow using Rowan v2 API.\n\nCalculates Fukui indices to predict molecular reactivity at different sites.\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    optimization_method: Method for geometry optimization (default: "gfn2_xtb")\n        Common options: "gfn2_xtb", "r2scan_3c", "aimnet2_wb97md3"\n    fukui_method: Method for Fukui calculation (default: "gfn1_xtb")\n        Common options: "gfn1_xtb", "gfn2_xtb"\n    solvent_settings: Optional solvent configuration dictionary\n        Example: {"solvent": "water", "model": "alpb"}\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic Fukui indices\n    result = submit_fukui_workflow(\n        initial_molecule="CC(=O)O"\n    )\n    \n    # With solvent and advanced methods\n    result = submit_fukui_workflow(\n        initial_molecule="c1ccccc1N",\n        optimization_method="r2scan_3c",\n        fukui_method="gfn2_xtb",\n        solvent_settings={"solvent": "water", "model": "alpb"}\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'optimization_method': {'default': 'gfn2_xtb', 'title': 'Optimization Method', 'type': 'string'}, 'fukui_method': {'default': 'gfn1_xtb', 'title': 'Fukui Method', 'type': 'string'}, 'solvent_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Solvent Settings'}, 'name': {'default': 'Fukui Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_tautomer_search_workflow', 'description': 'Submit a tautomer search workflow using Rowan v2 API.\n\nSearches for different tautomeric forms of a molecule and evaluates their\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    mode: Search mode (default: "careful")\n        Options: "rapid", "careful", "meticulous"\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic tautomer search\n    result = submit_tautomer_search_workflow(\n        initial_molecule="CC(=O)CC(=O)C"\n    )\n    \n    # Meticulous search for complex molecule\n    result = submit_tautomer_search_workflow(\n        initial_molecule="c1ccc2c(c1)ncc(=O)[nH]2",\n        mode="meticulous"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'mode': {'default': 'careful', 'title': 'Mode', 'type': 'string'}, 'name': {'default': 'Tautomer Search Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_descriptors_workflow', 'description': 'Submit a molecular descriptors calculation workflow using Rowan v2 API.\n\nCalculates a comprehensive set of molecular descriptors including:\n- Physical properties (MW, logP, TPSA, etc.)\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\n- Topological indices\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic descriptor calculation\n    result = submit_descriptors_workflow(\n        initial_molecule="CC(=O)Nc1ccc(O)cc1"\n    )\n    \n    # For complex molecule\n    result = submit_descriptors_workflow(\n        initial_molecule="CN1C=NC2=C1C(=O)N(C(=O)N2C)C",\n        name="Caffeine Descriptors"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'name': {'default': 'Descriptors Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_scan_workflow', 'description': 'Submit a potential energy surface scan workflow using Rowan v2 API.\n\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\nor dihedrals) to map the potential energy surface.\n\nArgs:\n    initial_molecule: SMILES string or molecule object\n    scan_settings: Dictionary specifying scan parameters\n        Example: {\n            "type": "dihedral",  # or "bond", "angle"\n            "atoms": [0, 1, 2, 3],  # atom indices\n            "start": -180,\n            "stop": 180,\n            "step": 10\n        }\n    calculation_engine: Computational engine (default: "omol25")\n        Options: "omol25", "xtb", "psi4"\n    calculation_method: Method for calculations (default: "uma_m_omol")\n        Options depend on engine\n    wavefront_propagation: Use wavefront optimization (default: True)\n        Speeds up scans by using previous geometries as starting points\n    name: Workflow name for tracking\n    folder_uuid: Optional folder UUID for organization\n    max_credits: Optional credit limit for the calculation\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Dihedral scan\n    result = submit_scan_workflow(\n        initial_molecule="CC(C)CC",\n        scan_settings={\n            "type": "dihedral",\n            "atoms": [0, 1, 2, 3],\n            "start": -180,\n            "stop": 180,\n            "step": 15\n        }\n    )\n    \n    # Bond scan with advanced method\n    result = submit_scan_workflow(\n        initial_molecule="CC",\n        scan_settings={\n            "type": "bond",\n            "atoms": [0, 1],\n            "start": 1.0,\n            "stop": 2.5,\n            "step": 0.1\n        },\n        calculation_method="r2scan_3c"\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'title': 'Initial Molecule', 'type': 'string'}, 'scan_settings': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Scan Settings'}, 'calculation_engine': {'default': 'omol25', 'title': 'Calculation Engine', 'type': 'string'}, 'calculation_method': {'default': 'uma_m_omol', 'title': 'Calculation Method', 'type': 'string'}, 'wavefront_propagation': {'default': True, 'title': 'Wavefront Propagation', 'type': 'boolean'}, 'name': {'default': 'Scan Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_molecule'], 'type': 'object'}}, {'name': 'submit_irc_workflow', 'description': 'Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\n\nArgs:\n    initial_molecule: The initial molecule to perform the IRC calculation on.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    method: The computational method to use for the IRC calculation (default: "uma_m_omol")\n        See list of available methods for options\n    engine: The computational engine to use for the calculation (default: "omol25")\n        See list of available engines\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\n    step_size: The step size to use for the IRC calculation (default: 0.05)\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted IRC workflow\n    \nExample:\n    # Basic IRC calculation\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "[CH3].[CH3]"},\n        method="gfn2_xtb",\n        max_irc_steps=50\n    )\n    \n    # IRC with specific method and engine\n    result = submit_irc_workflow(\n        initial_molecule={"smiles": "CC(O)=CC"},\n        method="r2scan_3c",\n        engine="psi4",\n        step_size=0.03\n    )\n', 'inputSchema': {'properties': {'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'method': {'default': 'uma_m_omol', 'title': 'Method', 'type': 'string'}, 'engine': {'default': 'omol25', 'title': 'Engine', 'type': 'string'}, 'preopt': {'default': True, 'title': 'Preopt', 'type': 'boolean'}, 'step_size': {'default': 0.05, 'title': 'Step Size', 'type': 'number'}, 'max_irc_steps': {'default': 30, 'title': 'Max Irc Steps', 'type': 'integer'}, 'name': {'default': 'IRC Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'type': 'object'}}, {'name': 'submit_protein_cofolding_workflow', 'description': 'Submits a protein cofolding workflow to the API.\n\nArgs:\n    initial_protein_sequences: The sequences of the proteins to be cofolded\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\n    use_msa_server: Whether to use the MSA server for the computation\n    use_potentials: Whether to use potentials for the computation\n    name: The name of the workflow\n    model: The model to use for the computation\n    folder_uuid: The UUID of the folder to store the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Protein dimer cofolding\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=[\n            "MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK",\n            "MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF"\n        ]\n    )\n    \n    # Protein-ligand complex\n    result = submit_protein_cofolding_workflow(\n        initial_protein_sequences=["MGSSHHHHHHSSGLVPRGSH"],\n        initial_smiles_list=["CC(=O)O", "CCO"],\n        ligand_binding_affinity_index=0,\n        use_msa_server=True\n    )\n', 'inputSchema': {'properties': {'initial_protein_sequences': {'items': {'type': 'string'}, 'title': 'Initial Protein Sequences', 'type': 'array'}, 'initial_smiles_list': {'anyOf': [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}], 'default': None, 'title': 'Initial Smiles List'}, 'ligand_binding_affinity_index': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Ligand Binding Affinity Index'}, 'use_msa_server': {'default': True, 'title': 'Use Msa Server', 'type': 'boolean'}, 'use_potentials': {'default': False, 'title': 'Use Potentials', 'type': 'boolean'}, 'name': {'default': 'Cofolding Workflow', 'title': 'Name', 'type': 'string'}, 'model': {'default': 'boltz_2', 'title': 'Model', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['initial_protein_sequences'], 'type': 'object'}}, {'name': 'submit_docking_workflow', 'description': 'Submits a Docking workflow to the API.\n\nArgs:\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\n    pocket: The pocket to dock into\n    initial_molecule: The initial molecule to be docked.\n        Can be a dict, StJamesMolecule, or RdkitMol object\n    do_csearch: Whether to perform a conformational search on the ligand\n    do_optimization: Whether to perform an optimization on the ligand\n    name: The name of the workflow\n    folder_uuid: The UUID of the folder to place the workflow in\n    max_credits: The maximum number of credits to use for the workflow\n    \nReturns:\n    Workflow object representing the submitted workflow\n    \nExample:\n    # Basic docking with protein UUID\n    result = submit_docking_workflow(\n        protein="protein-uuid-123",\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CC(=O)Oc1ccccc1C(=O)O"}\n    )\n    \n    # Docking with optimization disabled\n    result = submit_docking_workflow(\n        protein=protein_obj,\n        pocket=pocket_obj,\n        initial_molecule={"smiles": "CCO"},\n        do_csearch=False,\n        do_optimization=False\n    )\n', 'inputSchema': {'properties': {'protein': {'anyOf': [{'type': 'string'}, {}], 'title': 'Protein'}, 'pocket': {'title': 'Pocket'}, 'initial_molecule': {'anyOf': [{'additionalProperties': True, 'type': 'object'}, {}, {'type': 'null'}], 'default': None, 'title': 'Initial Molecule'}, 'do_csearch': {'default': True, 'title': 'Do Csearch', 'type': 'boolean'}, 'do_optimization': {'default': True, 'title': 'Do Optimization', 'type': 'boolean'}, 'name': {'default': 'Docking Workflow', 'title': 'Name', 'type': 'string'}, 'folder_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Folder Uuid'}, 'max_credits': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Max Credits'}}, 'required': ['protein', 'pocket'], 'type': 'object'}}, {'name': 'workflow_fetch_latest', 'description': 'Fetch the latest workflow data from the database.\n\nUpdates the workflow object with the most recent status and results.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to fetch\n    in_place: Whether to update the workflow object in place (default: False)\n    \nReturns:\n    Dictionary containing the updated workflow data including status and results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'in_place': {'default': False, 'title': 'In Place', 'type': 'boolean'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_wait_for_result', 'description': 'Wait for a workflow to complete and return the result.\n\nBlocks until the workflow completes, polling at specified intervals.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to wait for\n    poll_interval: Time in seconds between status checks (default: 5)\n    \nReturns:\n    Dictionary containing the completed workflow data including results\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'poll_interval': {'default': 5, 'title': 'Poll Interval', 'type': 'integer'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_get_status', 'description': 'Get the current status of a workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with status information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_stop', 'description': 'Stop a running workflow.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to stop\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete', 'description': 'Delete a workflow.\n\nThis permanently removes the workflow and its results from the database.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to delete\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'retrieve_workflow', 'description': 'Retrieve a workflow from the API.\n\nArgs:\n    uuid: The UUID of the workflow to retrieve\n    \nReturns:\n    Dictionary containing the complete workflow data\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'retrieve_calculation_molecules', 'description': 'Retrieve a list of molecules from a calculation.\n\nArgs:\n    uuid: The UUID of the calculation to retrieve molecules from\n    \nReturns:\n    List of dictionaries representing the molecules in the calculation\n    \nRaises:\n    HTTPError: If the API request fails\n', 'inputSchema': {'properties': {'uuid': {'title': 'Uuid', 'type': 'string'}}, 'required': ['uuid'], 'type': 'object'}}, {'name': 'list_workflows', 'description': 'List workflows subject to the specified criteria.\n\nArgs:\n    parent_uuid: The UUID of the parent folder\n    name_contains: Substring to search for in workflow names\n    public: Filter workflows by their public status\n    starred: Filter workflows by their starred status\n    status: Filter workflows by their status\n    workflow_type: Filter workflows by their type\n    page: The page number to retrieve (default: 0)\n    size: The number of items per page (default: 10)\n    \nReturns:\n    List of workflow dictionaries that match the search criteria\n    \nRaises:\n    HTTPError: If the request to the API fails\n', 'inputSchema': {'properties': {'parent_uuid': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Parent Uuid'}, 'name_contains': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name Contains'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'status': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Status'}, 'workflow_type': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Workflow Type'}, 'page': {'default': 0, 'title': 'Page', 'type': 'integer'}, 'size': {'default': 10, 'title': 'Size', 'type': 'integer'}}, 'type': 'object'}}, {'name': 'workflow_update', 'description': 'Update workflow details.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to update\n    name: New name for the workflow (optional)\n    notes: New notes for the workflow (optional)\n    starred: Whether to star/unstar the workflow (optional)\n    public: Whether to make the workflow public/private (optional)\n    \nReturns:\n    Dictionary with updated workflow information\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}, 'name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Name'}, 'notes': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Notes'}, 'starred': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Starred'}, 'public': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': None, 'title': 'Public'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_is_finished', 'description': 'Check if a workflow is finished.\n\nArgs:\n    workflow_uuid: The UUID of the workflow to check\n    \nReturns:\n    Dictionary with workflow completion status\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}, {'name': 'workflow_delete_data', 'description': 'Delete workflow data while keeping the workflow record.\n\nArgs:\n    workflow_uuid: The UUID of the workflow\n    \nReturns:\n    Dictionary with confirmation message\n', 'inputSchema': {'properties': {'workflow_uuid': {'title': 'Workflow Uuid', 'type': 'string'}}, 'required': ['workflow_uuid'], 'type': 'object'}}]})), metadata=None)
2025-08-02 14:11:06,569 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":2,"result":{"tools":[{"name":"submit_basic_calculation_workflow","description":"Submit a basic calculation workflow using Rowan v2 API.\\n\\nPerforms fundamental quantum chemistry calculations with configurable methods\\nand computational tasks. Returns a workflow object for tracking progress.\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"type":"string"},{"additionalProperties":true,"type":"object"},{}],"description":"The molecule to perform the calculation on. Can be a SMILES string, dict, StJamesMolecule, or RdkitMol object","title":"Initial Molecule"},"method":{"default":"uma_m_omol","description":"The method to use for the calculation (e.g., \'uma_m_omol\', \'gfn2-xtb\', \'r2scan_3c\')","title":"Method","type":"string"},"tasks":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"string"},{"type":"null"}],"default":null,"description":"Tasks to perform: list [\'optimize\'], string \'optimize\', or comma-separated \'optimize,frequencies\'. Defaults to None","title":"Tasks"},"mode":{"default":"auto","description":"The mode to run the calculation in (\'auto\', \'rapid\', \'careful\', \'meticulous\')","title":"Mode","type":"string"},"engine":{"default":"omol25","description":"The computational engine to use (\'omol25\', \'xtb\', \'psi4\')","title":"Engine","type":"string"},"name":{"default":"Basic Calculation Workflow","description":"The name of the workflow for identification","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"UUID of the folder to place the workflow in (optional)","title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"description":"Maximum number of credits to use for the workflow (optional)","title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_conformer_search_workflow","description":"Submit a conformer search workflow using Rowan v2 API.\\n\\nExplores the conformational space of a molecule to find low-energy structures.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    conf_gen_mode: default to \\"rapid\\"\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    final_method: default: \\"aimnet2_wb97md3\\"\\n        Try other options, if user specifies\\n    solvent: Optional solvent for implicit solvation (e.g., \\"water\\", \\"ethanol\\")\\n    transition_state: Whether searching for transition state conformers (default: False)\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic conformer search\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CCCC\\",\\n        conf_gen_mode=\\"rapid\\"\\n    )\\n    \\n    # Careful search with solvent\\n    result = submit_conformer_search_workflow(\\n        initial_molecule=\\"CC(C)CC(=O)O\\",\\n        conf_gen_mode=\\"careful\\",\\n        solvent=\\"water\\",\\n        final_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"conf_gen_mode":{"default":"rapid","title":"Conf Gen Mode","type":"string"},"final_method":{"default":"aimnet2_wb97md3","title":"Final Method","type":"string"},"solvent":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Solvent"},"transition_state":{"default":false,"title":"Transition State","type":"boolean"},"name":{"default":"Conformer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_solubility_workflow","description":"Submit a solubility prediction workflow using Rowan v2 API.\\n\\nPredicts solubility (log S) of a molecule in multiple solvents at various temperatures\\nusing machine learning models.\\n\\nArgs:\\n    initial_smiles: SMILES string of the molecule\\n    solvents: List of solvents as SMILES or common names (e.g., [\\"water\\", \\"ethanol\\"])\\n        If None, uses default solvents\\n    temperatures: List of temperatures in Kelvin\\n        If None, uses default temperature range\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic solubility prediction\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)Nc1ccc(O)cc1\\",\\n        solvents=[\\"water\\", \\"ethanol\\"],\\n        temperatures=[298.15, 310.15]\\n    )\\n    \\n    # With SMILES solvents\\n    result = submit_solubility_workflow(\\n        initial_smiles=\\"CC(=O)O\\",\\n        solvents=[\\"O\\", \\"CCO\\", \\"CCCCCC\\"],\\n        temperatures=[273.15, 298.15, 323.15]\\n    )\\n","inputSchema":{"properties":{"initial_smiles":{"title":"Initial Smiles","type":"string"},"solvents":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Solvents"},"temperatures":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"default":null,"title":"Temperatures"},"name":{"default":"Solubility Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_smiles"],"type":"object"}},{"name":"submit_pka_workflow","description":"Submit a pKa prediction workflow using Rowan v2 API.\\n\\nPredicts acid dissociation constants (pKa) for ionizable groups in a molecule\\nusing quantum chemistry calculations.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    pka_range: Tuple of (min, max) pKa values to search (default: (2, 12))\\n    deprotonate_elements: List of elements to consider for deprotonation\\n        (e.g., [\\"N\\", \\"O\\", \\"S\\"]). If None, uses defaults\\n    protonate_elements: List of elements to consider for protonation\\n        (e.g., [\\"N\\", \\"O\\"]). If None, uses defaults\\n    mode: Calculation mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic pKa prediction\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"CC(=O)O\\",\\n        pka_range=(2, 8)\\n    )\\n    \\n    # Specific elements with meticulous mode\\n    result = submit_pka_workflow(\\n        initial_molecule=\\"NC(C)C(=O)O\\",\\n        pka_range=(1, 14),\\n        deprotonate_elements=[\\"N\\", \\"O\\"],\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"pka_range":{"default":[2,12],"maxItems":2,"minItems":2,"prefixItems":[{"type":"number"},{"type":"number"}],"title":"Pka Range","type":"array"},"deprotonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Deprotonate Elements"},"protonate_elements":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Protonate Elements"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"pKa Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_redox_potential_workflow","description":"Submit a redox potential calculation workflow using Rowan v2 API.\\n\\nCalculates reduction and/or oxidation potentials for a molecule using\\nquantum chemistry methods.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    reduction: Whether to calculate reduction potential (default: False)\\n    oxidization: Whether to calculate oxidation potential (default: True)\\n    mode: Calculation mode (default: \\"rapid\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic oxidation potential\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"CC1=CC=CC=C1\\",\\n        oxidization=True\\n    )\\n    \\n    # Both reduction and oxidation with careful mode\\n    result = submit_redox_potential_workflow(\\n        initial_molecule=\\"c1ccccc1\\",\\n        reduction=True,\\n        oxidization=True,\\n        mode=\\"careful\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"reduction":{"default":false,"title":"Reduction","type":"boolean"},"oxidization":{"default":true,"title":"Oxidization","type":"boolean"},"mode":{"default":"rapid","title":"Mode","type":"string"},"name":{"default":"Redox Potential Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_fukui_workflow","description":"Submit a Fukui indices calculation workflow using Rowan v2 API.\\n\\nCalculates Fukui indices to predict molecular reactivity at different sites.\\nFukui indices indicate susceptibility to nucleophilic/electrophilic attack.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    optimization_method: Method for geometry optimization (default: \\"gfn2_xtb\\")\\n        Common options: \\"gfn2_xtb\\", \\"r2scan_3c\\", \\"aimnet2_wb97md3\\"\\n    fukui_method: Method for Fukui calculation (default: \\"gfn1_xtb\\")\\n        Common options: \\"gfn1_xtb\\", \\"gfn2_xtb\\"\\n    solvent_settings: Optional solvent configuration dictionary\\n        Example: {\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic Fukui indices\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"CC(=O)O\\"\\n    )\\n    \\n    # With solvent and advanced methods\\n    result = submit_fukui_workflow(\\n        initial_molecule=\\"c1ccccc1N\\",\\n        optimization_method=\\"r2scan_3c\\",\\n        fukui_method=\\"gfn2_xtb\\",\\n        solvent_settings={\\"solvent\\": \\"water\\", \\"model\\": \\"alpb\\"}\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"optimization_method":{"default":"gfn2_xtb","title":"Optimization Method","type":"string"},"fukui_method":{"default":"gfn1_xtb","title":"Fukui Method","type":"string"},"solvent_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Solvent Settings"},"name":{"default":"Fukui Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_tautomer_search_workflow","description":"Submit a tautomer search workflow using Rowan v2 API.\\n\\nSearches for different tautomeric forms of a molecule and evaluates their\\nrelative stabilities. Tautomers are structural isomers that readily interconvert.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    mode: Search mode (default: \\"careful\\")\\n        Options: \\"rapid\\", \\"careful\\", \\"meticulous\\"\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic tautomer search\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"CC(=O)CC(=O)C\\"\\n    )\\n    \\n    # Meticulous search for complex molecule\\n    result = submit_tautomer_search_workflow(\\n        initial_molecule=\\"c1ccc2c(c1)ncc(=O)[nH]2\\",\\n        mode=\\"meticulous\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"mode":{"default":"careful","title":"Mode","type":"string"},"name":{"default":"Tautomer Search Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_descriptors_workflow","description":"Submit a molecular descriptors calculation workflow using Rowan v2 API.\\n\\nCalculates a comprehensive set of molecular descriptors including:\\n- Physical properties (MW, logP, TPSA, etc.)\\n- Electronic properties (HOMO/LUMO, dipole moment, etc.)\\n- Structural features (rotatable bonds, H-bond donors/acceptors, etc.)\\n- Topological indices\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic descriptor calculation\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CC(=O)Nc1ccc(O)cc1\\"\\n    )\\n    \\n    # For complex molecule\\n    result = submit_descriptors_workflow(\\n        initial_molecule=\\"CN1C=NC2=C1C(=O)N(C(=O)N2C)C\\",\\n        name=\\"Caffeine Descriptors\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"name":{"default":"Descriptors Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_scan_workflow","description":"Submit a potential energy surface scan workflow using Rowan v2 API.\\n\\nPerforms systematic scans along specified molecular coordinates (bonds, angles,\\nor dihedrals) to map the potential energy surface.\\n\\nArgs:\\n    initial_molecule: SMILES string or molecule object\\n    scan_settings: Dictionary specifying scan parameters\\n        Example: {\\n            \\"type\\": \\"dihedral\\",  # or \\"bond\\", \\"angle\\"\\n            \\"atoms\\": [0, 1, 2, 3],  # atom indices\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 10\\n        }\\n    calculation_engine: Computational engine (default: \\"omol25\\")\\n        Options: \\"omol25\\", \\"xtb\\", \\"psi4\\"\\n    calculation_method: Method for calculations (default: \\"uma_m_omol\\")\\n        Options depend on engine\\n    wavefront_propagation: Use wavefront optimization (default: True)\\n        Speeds up scans by using previous geometries as starting points\\n    name: Workflow name for tracking\\n    folder_uuid: Optional folder UUID for organization\\n    max_credits: Optional credit limit for the calculation\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Dihedral scan\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC(C)CC\\",\\n        scan_settings={\\n            \\"type\\": \\"dihedral\\",\\n            \\"atoms\\": [0, 1, 2, 3],\\n            \\"start\\": -180,\\n            \\"stop\\": 180,\\n            \\"step\\": 15\\n        }\\n    )\\n    \\n    # Bond scan with advanced method\\n    result = submit_scan_workflow(\\n        initial_molecule=\\"CC\\",\\n        scan_settings={\\n            \\"type\\": \\"bond\\",\\n            \\"atoms\\": [0, 1],\\n            \\"start\\": 1.0,\\n            \\"stop\\": 2.5,\\n            \\"step\\": 0.1\\n        },\\n        calculation_method=\\"r2scan_3c\\"\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"title":"Initial Molecule","type":"string"},"scan_settings":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"default":null,"title":"Scan Settings"},"calculation_engine":{"default":"omol25","title":"Calculation Engine","type":"string"},"calculation_method":{"default":"uma_m_omol","title":"Calculation Method","type":"string"},"wavefront_propagation":{"default":true,"title":"Wavefront Propagation","type":"boolean"},"name":{"default":"Scan Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_molecule"],"type":"object"}},{"name":"submit_irc_workflow","description":"Submits an Intrinsic Reaction Coordinate (IRC) workflow to the API.\\n\\nArgs:\\n    initial_molecule: The initial molecule to perform the IRC calculation on.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    method: The computational method to use for the IRC calculation (default: \\"uma_m_omol\\")\\n        See list of available methods for options\\n    engine: The computational engine to use for the calculation (default: \\"omol25\\")\\n        See list of available engines\\n    preopt: Whether to perform a pre-optimization of the molecule (default: True)\\n    step_size: The step size to use for the IRC calculation (default: 0.05)\\n    max_irc_steps: The maximum number of IRC steps to perform (default: 30)\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted IRC workflow\\n    \\nExample:\\n    # Basic IRC calculation\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"[CH3].[CH3]\\"},\\n        method=\\"gfn2_xtb\\",\\n        max_irc_steps=50\\n    )\\n    \\n    # IRC with specific method and engine\\n    result = submit_irc_workflow(\\n        initial_molecule={\\"smiles\\": \\"CC(O)=CC\\"},\\n        method=\\"r2scan_3c\\",\\n        engine=\\"psi4\\",\\n        step_size=0.03\\n    )\\n","inputSchema":{"properties":{"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"method":{"default":"uma_m_omol","title":"Method","type":"string"},"engine":{"default":"omol25","title":"Engine","type":"string"},"preopt":{"default":true,"title":"Preopt","type":"boolean"},"step_size":{"default":0.05,"title":"Step Size","type":"number"},"max_irc_steps":{"default":30,"title":"Max Irc Steps","type":"integer"},"name":{"default":"IRC Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"type":"object"}},{"name":"submit_protein_cofolding_workflow","description":"Submits a protein cofolding workflow to the API.\\n\\nArgs:\\n    initial_protein_sequences: The sequences of the proteins to be cofolded\\n    initial_smiles_list: A list of SMILES strings for the ligands to be cofolded with\\n    ligand_binding_affinity_index: The index of the ligand for which to compute the binding affinity\\n    use_msa_server: Whether to use the MSA server for the computation\\n    use_potentials: Whether to use potentials for the computation\\n    name: The name of the workflow\\n    model: The model to use for the computation\\n    folder_uuid: The UUID of the folder to store the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Protein dimer cofolding\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\n            \\"MKTAYIAKQRQISFVKSHFSRQLEERLGLIEVQAPILSRVGDGTQDNLSGAEK\\",\\n            \\"MKQHKAMIVALIVICITAVVAALVTRKDLCEVHIRTGQTEVAVF\\"\\n        ]\\n    )\\n    \\n    # Protein-ligand complex\\n    result = submit_protein_cofolding_workflow(\\n        initial_protein_sequences=[\\"MGSSHHHHHHSSGLVPRGSH\\"],\\n        initial_smiles_list=[\\"CC(=O)O\\", \\"CCO\\"],\\n        ligand_binding_affinity_index=0,\\n        use_msa_server=True\\n    )\\n","inputSchema":{"properties":{"initial_protein_sequences":{"items":{"type":"string"},"title":"Initial Protein Sequences","type":"array"},"initial_smiles_list":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"default":null,"title":"Initial Smiles List"},"ligand_binding_affinity_index":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Ligand Binding Affinity Index"},"use_msa_server":{"default":true,"title":"Use Msa Server","type":"boolean"},"use_potentials":{"default":false,"title":"Use Potentials","type":"boolean"},"name":{"default":"Cofolding Workflow","title":"Name","type":"string"},"model":{"default":"boltz_2","title":"Model","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["initial_protein_sequences"],"type":"object"}},{"name":"submit_docking_workflow","description":"Submits a Docking workflow to the API.\\n\\nArgs:\\n    protein: The protein to dock. Can be fed as a uuid or a Protein object\\n    pocket: The pocket to dock into\\n    initial_molecule: The initial molecule to be docked.\\n        Can be a dict, StJamesMolecule, or RdkitMol object\\n    do_csearch: Whether to perform a conformational search on the ligand\\n    do_optimization: Whether to perform an optimization on the ligand\\n    name: The name of the workflow\\n    folder_uuid: The UUID of the folder to place the workflow in\\n    max_credits: The maximum number of credits to use for the workflow\\n    \\nReturns:\\n    Workflow object representing the submitted workflow\\n    \\nExample:\\n    # Basic docking with protein UUID\\n    result = submit_docking_workflow(\\n        protein=\\"protein-uuid-123\\",\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CC(=O)Oc1ccccc1C(=O)O\\"}\\n    )\\n    \\n    # Docking with optimization disabled\\n    result = submit_docking_workflow(\\n        protein=protein_obj,\\n        pocket=pocket_obj,\\n        initial_molecule={\\"smiles\\": \\"CCO\\"},\\n        do_csearch=False,\\n        do_optimization=False\\n    )\\n","inputSchema":{"properties":{"protein":{"anyOf":[{"type":"string"},{}],"title":"Protein"},"pocket":{"title":"Pocket"},"initial_molecule":{"anyOf":[{"additionalProperties":true,"type":"object"},{},{"type":"null"}],"default":null,"title":"Initial Molecule"},"do_csearch":{"default":true,"title":"Do Csearch","type":"boolean"},"do_optimization":{"default":true,"title":"Do Optimization","type":"boolean"},"name":{"default":"Docking Workflow","title":"Name","type":"string"},"folder_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Folder Uuid"},"max_credits":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Max Credits"}},"required":["protein","pocket"],"type":"object"}},{"name":"workflow_fetch_latest","description":"Fetch the latest workflow data from the database.\\n\\nUpdates the workflow object with the most recent status and results.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to fetch\\n    in_place: Whether to update the workflow object in place (default: False)\\n    \\nReturns:\\n    Dictionary containing the updated workflow data including status and results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"in_place":{"default":false,"title":"In Place","type":"boolean"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_wait_for_result","description":"Wait for a workflow to complete and return the result.\\n\\nBlocks until the workflow completes, polling at specified intervals.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to wait for\\n    poll_interval: Time in seconds between status checks (default: 5)\\n    \\nReturns:\\n    Dictionary containing the completed workflow data including results\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"poll_interval":{"default":5,"title":"Poll Interval","type":"integer"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_get_status","description":"Get the current status of a workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with status information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_stop","description":"Stop a running workflow.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to stop\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete","description":"Delete a workflow.\\n\\nThis permanently removes the workflow and its results from the database.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to delete\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"retrieve_workflow","description":"Retrieve a workflow from the API.\\n\\nArgs:\\n    uuid: The UUID of the workflow to retrieve\\n    \\nReturns:\\n    Dictionary containing the complete workflow data\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"retrieve_calculation_molecules","description":"Retrieve a list of molecules from a calculation.\\n\\nArgs:\\n    uuid: The UUID of the calculation to retrieve molecules from\\n    \\nReturns:\\n    List of dictionaries representing the molecules in the calculation\\n    \\nRaises:\\n    HTTPError: If the API request fails\\n","inputSchema":{"properties":{"uuid":{"title":"Uuid","type":"string"}},"required":["uuid"],"type":"object"}},{"name":"list_workflows","description":"List workflows subject to the specified criteria.\\n\\nArgs:\\n    parent_uuid: The UUID of the parent folder\\n    name_contains: Substring to search for in workflow names\\n    public: Filter workflows by their public status\\n    starred: Filter workflows by their starred status\\n    status: Filter workflows by their status\\n    workflow_type: Filter workflows by their type\\n    page: The page number to retrieve (default: 0)\\n    size: The number of items per page (default: 10)\\n    \\nReturns:\\n    List of workflow dictionaries that match the search criteria\\n    \\nRaises:\\n    HTTPError: If the request to the API fails\\n","inputSchema":{"properties":{"parent_uuid":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Parent Uuid"},"name_contains":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name Contains"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"status":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Status"},"workflow_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Workflow Type"},"page":{"default":0,"title":"Page","type":"integer"},"size":{"default":10,"title":"Size","type":"integer"}},"type":"object"}},{"name":"workflow_update","description":"Update workflow details.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to update\\n    name: New name for the workflow (optional)\\n    notes: New notes for the workflow (optional)\\n    starred: Whether to star/unstar the workflow (optional)\\n    public: Whether to make the workflow public/private (optional)\\n    \\nReturns:\\n    Dictionary with updated workflow information\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Name"},"notes":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Notes"},"starred":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Starred"},"public":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":null,"title":"Public"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_is_finished","description":"Check if a workflow is finished.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow to check\\n    \\nReturns:\\n    Dictionary with workflow completion status\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}},{"name":"workflow_delete_data","description":"Delete workflow data while keeping the workflow record.\\n\\nArgs:\\n    workflow_uuid: The UUID of the workflow\\n    \\nReturns:\\n    Dictionary with confirmation message\\n","inputSchema":{"properties":{"workflow_uuid":{"title":"Workflow Uuid","type":"string"}},"required":["workflow_uuid"],"type":"object"}}]}}\r\n\r\n'
2025-08-02 14:11:06,575 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:11:06,575 - mcp.server.sse - DEBUG - Parsed session ID: 049901af-d6f5-4643-b2c0-abf61b4cca46
2025-08-02 14:11:06,575 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"prompts/list","jsonrpc":"2.0","id":3}'
2025-08-02 14:11:06,575 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=3)
2025-08-02 14:11:06,575 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='prompts/list', params=None, jsonrpc='2.0', id=3)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10be7a570>))
2025-08-02 14:11:06,575 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10be8bd90>
2025-08-02 14:11:06,575 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 14:11:06,575 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type ListPromptsRequest
2025-08-02 14:11:06,576 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:11:06,576 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=3, result={'prompts': []})), metadata=None)
2025-08-02 14:11:06,576 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":3,"result":{"prompts":[]}}\r\n\r\n'
2025-08-02 14:11:18,372 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:11:18.372376+00:00\r\n\r\n'
2025-08-02 14:11:18,380 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:11:18.380422+00:00\r\n\r\n'
2025-08-02 14:11:21,550 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:11:21.550067+00:00\r\n\r\n'
2025-08-02 14:11:23,615 - mcp.server.sse - DEBUG - Handling POST message
2025-08-02 14:11:23,615 - mcp.server.sse - DEBUG - Parsed session ID: 049901af-d6f5-4643-b2c0-abf61b4cca46
2025-08-02 14:11:23,616 - mcp.server.sse - DEBUG - Received JSON: b'{"method":"tools/call","params":{"name":"submit_basic_calculation_workflow","arguments":{"initial_molecule":"CCCC","engine":"xtb","method":"gfn2_xtb","mode":"rapid","tasks":"optimize","name":"Basic Calculation Workflow from data.json"},"_meta":{"progressToken":4}},"jsonrpc":"2.0","id":4}'
2025-08-02 14:11:23,616 - mcp.server.sse - DEBUG - Validated client message: root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'engine': 'xtb', 'method': 'gfn2_xtb', 'mode': 'rapid', 'tasks': 'optimize', 'name': 'Basic Calculation Workflow from data.json'}, '_meta': {'progressToken': 4}}, jsonrpc='2.0', id=4)
2025-08-02 14:11:23,616 - mcp.server.sse - DEBUG - Sending session message to writer: SessionMessage(message=JSONRPCMessage(root=JSONRPCRequest(method='tools/call', params={'name': 'submit_basic_calculation_workflow', 'arguments': {'initial_molecule': 'CCCC', 'engine': 'xtb', 'method': 'gfn2_xtb', 'mode': 'rapid', 'tasks': 'optimize', 'name': 'Basic Calculation Workflow from data.json'}, '_meta': {'progressToken': 4}}, jsonrpc='2.0', id=4)), metadata=ServerMessageMetadata(related_request_id=None, request_context=<starlette.requests.Request object at 0x10be7a600>))
2025-08-02 14:11:23,617 - mcp.server.lowlevel.server - DEBUG - Received message: <mcp.shared.session.RequestResponder object at 0x10beee190>
2025-08-02 14:11:23,617 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 14:11:23,617 - mcp.server.lowlevel.server - DEBUG - Dispatching request of type CallToolRequest
2025-08-02 14:11:23,618 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Parsed string tasks '['optimize']' to list: ['optimize']
2025-08-02 14:11:23,618 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - ============================================================
2025-08-02 14:11:23,618 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - submit_basic_calculation_workflow called with:
2025-08-02 14:11:23,618 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   method: gfn2_xtb (type: <class 'str'>)
2025-08-02 14:11:23,618 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   tasks: ['optimize'] (type: <class 'list'>)
2025-08-02 14:11:23,618 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   mode: rapid
2025-08-02 14:11:23,618 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   engine: xtb
2025-08-02 14:11:23,618 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   name: Basic Calculation Workflow from data.json
2025-08-02 14:11:23,619 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO -   initial_molecule: 'CCCC' (SMILES string)
2025-08-02 14:11:23,619 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Converting SMILES string to StJamesMolecule
2025-08-02 14:11:23,651 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - DEBUG - Successfully converted to StJamesMolecule
2025-08-02 14:11:23,651 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - Calling rowan.submit_basic_calculation_workflow...
2025-08-02 14:11:23,677 - httpcore.connection - DEBUG - connect_tcp.started host='api.rowansci.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-02 14:11:23,773 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10bf99400>
2025-08-02 14:11:23,773 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10bf759a0> server_hostname='api.rowansci.com' timeout=5.0
2025-08-02 14:11:23,893 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10bf70a50>
2025-08-02 14:11:23,894 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-02 14:11:23,894 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-02 14:11:23,894 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-02 14:11:23,894 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-02 14:11:23,894 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-02 14:11:24,473 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 02 Aug 2025 21:11:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2094'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains')])
2025-08-02 14:11:24,474 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 14:11:24,474 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-02 14:11:24,478 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-02 14:11:24,478 - httpcore.http11 - DEBUG - response_closed.started
2025-08-02 14:11:24,478 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-02 14:11:24,479 - httpcore.connection - DEBUG - close.started
2025-08-02 14:11:24,479 - httpcore.connection - DEBUG - close.complete
2025-08-02 14:11:24,479 - rowan_mcp.functions_v2.submit_basic_calculation_workflow - INFO - SUCCESS: Workflow submitted with UUID: aaff5016-58e1-41bf-b383-5dc35f5f1228
2025-08-02 14:11:24,480 - mcp.server.lowlevel.server - DEBUG - Response sent
2025-08-02 14:11:24,480 - mcp.server.sse - DEBUG - Sending message via SSE: SessionMessage(message=JSONRPCMessage(root=JSONRPCResponse(jsonrpc='2.0', id=4, result={'content': [{'type': 'text', 'text': '{\n  "name": "Basic Calculation Workflow from data.json",\n  "uuid": "aaff5016-58e1-41bf-b383-5dc35f5f1228",\n  "created_at": "2025-08-02T21:11:24.068435Z",\n  "updated_at": null,\n  "started_at": null,\n  "completed_at": null,\n  "object_status": 0,\n  "parent_uuid": "e5c3ce65-43df-4ab3-90e0-a56f42584cc0",\n  "notes": "",\n  "starred": false,\n  "public": false,\n  "object_type": "basic_calculation",\n  "object_data": {\n    "settings": {\n      "method": "GFN2_XTB",\n      "tasks": [\n        "optimize"\n      ],\n      "mode": "rapid"\n    },\n    "engine": "xtb",\n    "initial_molecule": {\n      "charge": 0,\n      "multiplicity": 1,\n      "atoms": [\n        {\n          "atomic_number": 6,\n          "position": [\n            -1.57731622,\n            0.46259034,\n            0.02288227\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            -0.55246934,\n            -0.31349805,\n            -0.78986664\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            0.65178196,\n            -0.77563238,\n            0.03104792\n          ]\n        },\n        {\n          "atomic_number": 6,\n          "position": [\n            1.5013315,\n            0.37070813,\n            0.55769072\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.17009891,\n            1.41344062,\n            0.37886292\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.91277475,\n            -0.11690438,\n            0.88874548\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -2.45332233,\n            0.68757176,\n            -0.59399069\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -0.21575239,\n            0.30052639,\n            -1.63326648\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            -1.04230601,\n            -1.19688302,\n            -1.21658189\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            0.31558706,\n            -1.39539838,\n            0.87044712\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            1.28031633,\n            -1.41330121,\n            -0.60197473\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            2.39258685,\n            -0.02154188,\n            1.05803044\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            0.95227634,\n            0.97534316,\n            1.28543953\n          ]\n        },\n        {\n          "atomic_number": 1,\n          "position": [\n            1.83015992,\n            1.0229789,\n            -0.25746596\n          ]\n        }\n      ],\n      "cell": null,\n      "energy": null,\n      "scf_iterations": null,\n      "scf_completed": null,\n      "elapsed": null,\n      "homo_lumo_gap": null,\n      "gradient": null,\n      "stress": null,\n      "velocities": null,\n      "mulliken_charges": null,\n      "mulliken_spin_densities": null,\n      "dipole": null,\n      "vibrational_modes": null,\n      "zero_point_energy": null,\n      "thermal_energy_corr": null,\n      "thermal_enthalpy_corr": null,\n      "thermal_free_energy_corr": null,\n      "smiles": "CCCC",\n      "calculation_index": null\n    }\n  },\n  "email_when_complete": false,\n  "max_credits": null,\n  "elapsed": 0.0,\n  "credits_charged": 0.0\n}'}], 'isError': False})), metadata=None)
2025-08-02 14:11:24,480 - sse_starlette.sse - DEBUG - chunk: b'event: message\r\ndata: {"jsonrpc":"2.0","id":4,"result":{"content":[{"type":"text","text":"{\\n  \\"name\\": \\"Basic Calculation Workflow from data.json\\",\\n  \\"uuid\\": \\"aaff5016-58e1-41bf-b383-5dc35f5f1228\\",\\n  \\"created_at\\": \\"2025-08-02T21:11:24.068435Z\\",\\n  \\"updated_at\\": null,\\n  \\"started_at\\": null,\\n  \\"completed_at\\": null,\\n  \\"object_status\\": 0,\\n  \\"parent_uuid\\": \\"e5c3ce65-43df-4ab3-90e0-a56f42584cc0\\",\\n  \\"notes\\": \\"\\",\\n  \\"starred\\": false,\\n  \\"public\\": false,\\n  \\"object_type\\": \\"basic_calculation\\",\\n  \\"object_data\\": {\\n    \\"settings\\": {\\n      \\"method\\": \\"GFN2_XTB\\",\\n      \\"tasks\\": [\\n        \\"optimize\\"\\n      ],\\n      \\"mode\\": \\"rapid\\"\\n    },\\n    \\"engine\\": \\"xtb\\",\\n    \\"initial_molecule\\": {\\n      \\"charge\\": 0,\\n      \\"multiplicity\\": 1,\\n      \\"atoms\\": [\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -1.57731622,\\n            0.46259034,\\n            0.02288227\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            -0.55246934,\\n            -0.31349805,\\n            -0.78986664\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            0.65178196,\\n            -0.77563238,\\n            0.03104792\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 6,\\n          \\"position\\": [\\n            1.5013315,\\n            0.37070813,\\n            0.55769072\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.17009891,\\n            1.41344062,\\n            0.37886292\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.91277475,\\n            -0.11690438,\\n            0.88874548\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -2.45332233,\\n            0.68757176,\\n            -0.59399069\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -0.21575239,\\n            0.30052639,\\n            -1.63326648\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            -1.04230601,\\n            -1.19688302,\\n            -1.21658189\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            0.31558706,\\n            -1.39539838,\\n            0.87044712\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            1.28031633,\\n            -1.41330121,\\n            -0.60197473\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            2.39258685,\\n            -0.02154188,\\n            1.05803044\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            0.95227634,\\n            0.97534316,\\n            1.28543953\\n          ]\\n        },\\n        {\\n          \\"atomic_number\\": 1,\\n          \\"position\\": [\\n            1.83015992,\\n            1.0229789,\\n            -0.25746596\\n          ]\\n        }\\n      ],\\n      \\"cell\\": null,\\n      \\"energy\\": null,\\n      \\"scf_iterations\\": null,\\n      \\"scf_completed\\": null,\\n      \\"elapsed\\": null,\\n      \\"homo_lumo_gap\\": null,\\n      \\"gradient\\": null,\\n      \\"stress\\": null,\\n      \\"velocities\\": null,\\n      \\"mulliken_charges\\": null,\\n      \\"mulliken_spin_densities\\": null,\\n      \\"dipole\\": null,\\n      \\"vibrational_modes\\": null,\\n      \\"zero_point_energy\\": null,\\n      \\"thermal_energy_corr\\": null,\\n      \\"thermal_enthalpy_corr\\": null,\\n      \\"thermal_free_energy_corr\\": null,\\n      \\"smiles\\": \\"CCCC\\",\\n      \\"calculation_index\\": null\\n    }\\n  },\\n  \\"email_when_complete\\": false,\\n  \\"max_credits\\": null,\\n  \\"elapsed\\": 0.0,\\n  \\"credits_charged\\": 0.0\\n}"}],"isError":false}}\r\n\r\n'
2025-08-02 14:11:33,374 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:11:33.373929+00:00\r\n\r\n'
2025-08-02 14:11:33,383 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:11:33.383269+00:00\r\n\r\n'
2025-08-02 14:11:36,552 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:11:36.551935+00:00\r\n\r\n'
2025-08-02 14:11:48,375 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:11:48.375506+00:00\r\n\r\n'
2025-08-02 14:11:48,384 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:11:48.384223+00:00\r\n\r\n'
2025-08-02 14:11:51,555 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:11:51.554950+00:00\r\n\r\n'
2025-08-02 14:12:03,377 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:12:03.377230+00:00\r\n\r\n'
2025-08-02 14:12:03,386 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:12:03.386651+00:00\r\n\r\n'
2025-08-02 14:12:06,558 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:12:06.558230+00:00\r\n\r\n'
2025-08-02 14:12:18,383 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:12:18.383648+00:00\r\n\r\n'
2025-08-02 14:12:18,389 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:12:18.388858+00:00\r\n\r\n'
2025-08-02 14:12:21,560 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:12:21.560874+00:00\r\n\r\n'
2025-08-02 14:12:33,386 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:12:33.386411+00:00\r\n\r\n'
2025-08-02 14:12:33,393 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:12:33.393325+00:00\r\n\r\n'
2025-08-02 14:12:36,562 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:12:36.562628+00:00\r\n\r\n'
2025-08-02 14:12:48,388 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:12:48.387963+00:00\r\n\r\n'
2025-08-02 14:12:48,393 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:12:48.393921+00:00\r\n\r\n'
2025-08-02 14:12:51,564 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:12:51.564270+00:00\r\n\r\n'
2025-08-02 14:13:03,392 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:13:03.392438+00:00\r\n\r\n'
2025-08-02 14:13:03,394 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:13:03.394322+00:00\r\n\r\n'
2025-08-02 14:13:06,567 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:13:06.567192+00:00\r\n\r\n'
2025-08-02 14:13:18,395 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:13:18.395343+00:00\r\n\r\n'
2025-08-02 14:13:18,399 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:13:18.399819+00:00\r\n\r\n'
2025-08-02 14:13:21,569 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:13:21.569547+00:00\r\n\r\n'
2025-08-02 14:13:33,401 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:13:33.401419+00:00\r\n\r\n'
2025-08-02 14:13:33,404 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:13:33.404036+00:00\r\n\r\n'
2025-08-02 14:13:36,571 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:13:36.571541+00:00\r\n\r\n'
2025-08-02 14:13:48,406 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:13:48.405925+00:00\r\n\r\n'
2025-08-02 14:13:48,409 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:13:48.409518+00:00\r\n\r\n'
2025-08-02 14:13:51,573 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:13:51.573204+00:00\r\n\r\n'
2025-08-02 14:14:03,411 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:14:03.411713+00:00\r\n\r\n'
2025-08-02 14:14:03,411 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:14:03.411896+00:00\r\n\r\n'
2025-08-02 14:14:06,575 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:14:06.575006+00:00\r\n\r\n'
2025-08-02 14:14:18,412 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:14:18.412471+00:00\r\n\r\n'
2025-08-02 14:14:18,413 - sse_starlette.sse - DEBUG - ping: b': ping - 2025-08-02 21:14:18.413598+00:00\r\n\r\n'
2025-08-02 14:14:21,876 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-02 14:18:40,439 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-02 14:20:36,092 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-02 14:20:41,571 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 14:20:41,577 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 14:21:07,216 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 14:21:08,210 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 14:22:28,175 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-02 14:22:29,844 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 14:22:29,849 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 14:22:30,360 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 14:22:30,365 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 14:23:27,975 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 14:23:28,866 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-02 19:50:03,905 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-02 19:50:08,086 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 19:50:08,087 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 19:50:08,093 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 19:50:08,094 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 19:50:10,303 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 19:50:10,304 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-02 19:50:10,312 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 19:50:10,312 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-02 19:51:12,984 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-02 19:51:13,853 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 16:25:05,503 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 16:25:05,514 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 16:26:27,035 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 16:26:28,569 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 16:26:28,576 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 16:27:48,178 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 16:27:49,665 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 16:27:49,671 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 16:29:06,077 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 16:29:10,320 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 16:29:10,327 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 16:32:26,579 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 16:32:29,416 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 16:32:29,421 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 16:36:00,057 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 16:36:02,524 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 16:36:02,531 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 16:38:35,094 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 16:38:36,163 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 16:38:36,170 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 16:40:24,816 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 16:40:26,274 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 16:40:26,280 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 17:08:13,769 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 17:08:16,476 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 17:08:16,483 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 17:27:50,827 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 17:27:51,405 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 17:27:51,411 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 17:28:38,908 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 17:28:39,785 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 17:28:46,563 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 17:28:46,952 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31e3a8fc-f5f4-4731-a318-073a041c0707 "HTTP/1.1 200 OK"
2025-08-03 17:28:47,343 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31e3a8fc-f5f4-4731-a318-073a041c0707 "HTTP/1.1 200 OK"
2025-08-03 17:28:52,729 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31e3a8fc-f5f4-4731-a318-073a041c0707 "HTTP/1.1 200 OK"
2025-08-03 17:28:58,119 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31e3a8fc-f5f4-4731-a318-073a041c0707 "HTTP/1.1 200 OK"
2025-08-03 17:29:03,488 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31e3a8fc-f5f4-4731-a318-073a041c0707 "HTTP/1.1 200 OK"
2025-08-03 17:29:10,377 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31e3a8fc-f5f4-4731-a318-073a041c0707 "HTTP/1.1 200 OK"
2025-08-03 17:29:15,774 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31e3a8fc-f5f4-4731-a318-073a041c0707 "HTTP/1.1 200 OK"
2025-08-03 17:29:21,193 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31e3a8fc-f5f4-4731-a318-073a041c0707 "HTTP/1.1 200 OK"
2025-08-03 17:29:26,560 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31e3a8fc-f5f4-4731-a318-073a041c0707 "HTTP/1.1 200 OK"
2025-08-03 17:29:31,954 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31e3a8fc-f5f4-4731-a318-073a041c0707 "HTTP/1.1 200 OK"
2025-08-03 17:29:37,366 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31e3a8fc-f5f4-4731-a318-073a041c0707 "HTTP/1.1 200 OK"
2025-08-03 17:29:42,740 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31e3a8fc-f5f4-4731-a318-073a041c0707 "HTTP/1.1 200 OK"
2025-08-03 17:29:48,116 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31e3a8fc-f5f4-4731-a318-073a041c0707 "HTTP/1.1 200 OK"
2025-08-03 17:29:53,504 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31e3a8fc-f5f4-4731-a318-073a041c0707 "HTTP/1.1 200 OK"
2025-08-03 17:29:53,577 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 17:29:53,578 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 17:29:53,586 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 17:29:53,586 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 17:30:00,923 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 17:30:01,338 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31e3a8fc-f5f4-4731-a318-073a041c0707 "HTTP/1.1 200 OK"
2025-08-03 17:30:09,750 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 17:30:10,167 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/184ac0c2-f3c7-4a3b-a865-7522f8a406c0/molecules "HTTP/1.1 200 OK"
2025-08-03 17:59:34,042 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 17:59:42,694 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 17:59:42,701 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 18:00:40,070 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 18:00:40,945 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 18:00:49,220 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 18:00:49,615 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9d448442-ae3a-469c-b98a-56e06a612bbe "HTTP/1.1 200 OK"
2025-08-03 18:00:49,987 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9d448442-ae3a-469c-b98a-56e06a612bbe "HTTP/1.1 200 OK"
2025-08-03 18:00:53,378 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9d448442-ae3a-469c-b98a-56e06a612bbe "HTTP/1.1 200 OK"
2025-08-03 18:00:56,783 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9d448442-ae3a-469c-b98a-56e06a612bbe "HTTP/1.1 200 OK"
2025-08-03 18:01:00,233 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9d448442-ae3a-469c-b98a-56e06a612bbe "HTTP/1.1 200 OK"
2025-08-03 18:01:03,649 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9d448442-ae3a-469c-b98a-56e06a612bbe "HTTP/1.1 200 OK"
2025-08-03 18:01:07,090 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9d448442-ae3a-469c-b98a-56e06a612bbe "HTTP/1.1 200 OK"
2025-08-03 18:01:11,363 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 18:01:11,756 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9d448442-ae3a-469c-b98a-56e06a612bbe "HTTP/1.1 200 OK"
2025-08-03 18:01:12,234 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9d448442-ae3a-469c-b98a-56e06a612bbe "HTTP/1.1 200 OK"
2025-08-03 18:01:18,724 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 18:01:19,168 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/1d1e796f-d81b-4664-8b86-058f4e30c361/molecules "HTTP/1.1 200 OK"
2025-08-03 18:01:26,356 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 18:01:26,765 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9d448442-ae3a-469c-b98a-56e06a612bbe "HTTP/1.1 200 OK"
2025-08-03 18:29:46,870 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 18:29:47,672 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 18:29:59,097 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 18:29:59,509 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1e8b1bf2-ef1d-4316-8432-2544db6826de "HTTP/1.1 200 OK"
2025-08-03 18:29:59,931 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1e8b1bf2-ef1d-4316-8432-2544db6826de "HTTP/1.1 200 OK"
2025-08-03 18:30:03,412 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1e8b1bf2-ef1d-4316-8432-2544db6826de "HTTP/1.1 200 OK"
2025-08-03 18:30:06,837 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1e8b1bf2-ef1d-4316-8432-2544db6826de "HTTP/1.1 200 OK"
2025-08-03 18:30:10,288 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1e8b1bf2-ef1d-4316-8432-2544db6826de "HTTP/1.1 200 OK"
2025-08-03 18:30:13,719 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1e8b1bf2-ef1d-4316-8432-2544db6826de "HTTP/1.1 200 OK"
2025-08-03 18:30:19,348 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 18:30:19,745 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1e8b1bf2-ef1d-4316-8432-2544db6826de "HTTP/1.1 200 OK"
2025-08-03 18:30:20,150 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1e8b1bf2-ef1d-4316-8432-2544db6826de "HTTP/1.1 200 OK"
2025-08-03 18:30:28,513 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 18:30:28,909 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/e0c71d19-976d-498c-985f-6133cfe406eb/molecules "HTTP/1.1 200 OK"
2025-08-03 18:30:37,344 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 18:30:37,714 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1e8b1bf2-ef1d-4316-8432-2544db6826de "HTTP/1.1 200 OK"
2025-08-03 20:59:06,691 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 20:59:07,319 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 20:59:07,322 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 78, in submit_conformer_search_workflow
    return rowan.submit_conformer_search_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 488, in submit_conformer_search_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 20:59:12,705 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 20:59:13,190 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow?page=0&size=5 "HTTP/1.1 200 OK"
2025-08-03 20:59:13,616 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'list_workflows': 1 validation error for Workflow
object_data
  Input should be a valid dictionary [type=dict_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/dict_type
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/workflow_management_v2.py", line 251, in list_workflows
    workflows = rowan.list_workflows(
        parent_uuid=parent_uuid,
    ...<6 lines>...
        size=size
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 349, in list_workflows
    return [Workflow(**item) for item in response.json()["workflows"]]
            ~~~~~~~~^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for Workflow
object_data
  Input should be a valid dictionary [type=dict_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/dict_type
2025-08-03 20:59:54,504 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 20:59:55,045 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 20:59:55,046 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 78, in submit_conformer_search_workflow
    return rowan.submit_conformer_search_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 488, in submit_conformer_search_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 21:00:03,095 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:00:04,246 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 21:00:11,715 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:00:12,132 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/735deec8-f128-496c-b5c9-85a4eb69e7fa "HTTP/1.1 200 OK"
2025-08-03 21:00:12,569 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/735deec8-f128-496c-b5c9-85a4eb69e7fa "HTTP/1.1 200 OK"
2025-08-03 21:00:17,988 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/735deec8-f128-496c-b5c9-85a4eb69e7fa "HTTP/1.1 200 OK"
2025-08-03 21:00:23,529 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/735deec8-f128-496c-b5c9-85a4eb69e7fa "HTTP/1.1 200 OK"
2025-08-03 21:00:28,951 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/735deec8-f128-496c-b5c9-85a4eb69e7fa "HTTP/1.1 200 OK"
2025-08-03 21:00:35,445 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:00:36,156 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 21:00:36,157 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 78, in submit_conformer_search_workflow
    return rowan.submit_conformer_search_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 488, in submit_conformer_search_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 21:00:42,921 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:00:43,324 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/735deec8-f128-496c-b5c9-85a4eb69e7fa "HTTP/1.1 200 OK"
2025-08-03 21:00:43,751 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/735deec8-f128-496c-b5c9-85a4eb69e7fa "HTTP/1.1 200 OK"
2025-08-03 21:00:44,129 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/735deec8-f128-496c-b5c9-85a4eb69e7fa "HTTP/1.1 200 OK"
2025-08-03 21:00:49,865 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:00:50,249 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/735deec8-f128-496c-b5c9-85a4eb69e7fa "HTTP/1.1 200 OK"
2025-08-03 21:00:50,665 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/735deec8-f128-496c-b5c9-85a4eb69e7fa "HTTP/1.1 200 OK"
2025-08-03 21:00:56,860 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:00:57,410 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/cc901ac4-d891-43ff-8962-abb914d19f27/molecules "HTTP/1.1 200 OK"
2025-08-03 21:05:13,481 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 21:05:30,764 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 21:05:30,770 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 21:05:43,149 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:05:43,150 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': submit_conformer_search_workflow() got an unexpected keyword argument 'transition_state'. Did you mean 'transistion_state'?
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 78, in submit_conformer_search_workflow
    return rowan.submit_conformer_search_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: submit_conformer_search_workflow() got an unexpected keyword argument 'transition_state'. Did you mean 'transistion_state'?
2025-08-03 21:05:47,515 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:05:47,516 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': submit_conformer_search_workflow() got an unexpected keyword argument 'transition_state'. Did you mean 'transistion_state'?
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 78, in submit_conformer_search_workflow
    return rowan.submit_conformer_search_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: submit_conformer_search_workflow() got an unexpected keyword argument 'transition_state'. Did you mean 'transistion_state'?
2025-08-03 21:05:53,092 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:05:53,972 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 21:06:01,993 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:06:02,428 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/42109a31-ed9e-49ce-8b0c-f0a2e5ee1aad "HTTP/1.1 200 OK"
2025-08-03 21:06:02,837 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/42109a31-ed9e-49ce-8b0c-f0a2e5ee1aad "HTTP/1.1 200 OK"
2025-08-03 21:06:08,256 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/42109a31-ed9e-49ce-8b0c-f0a2e5ee1aad "HTTP/1.1 200 OK"
2025-08-03 21:06:13,641 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/42109a31-ed9e-49ce-8b0c-f0a2e5ee1aad "HTTP/1.1 200 OK"
2025-08-03 21:06:19,050 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/42109a31-ed9e-49ce-8b0c-f0a2e5ee1aad "HTTP/1.1 200 OK"
2025-08-03 21:20:29,529 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 21:20:44,192 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 21:20:44,198 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 21:20:55,018 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:20:55,661 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 21:20:55,662 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 78, in submit_conformer_search_workflow
    return rowan.submit_conformer_search_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 488, in submit_conformer_search_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 21:21:00,976 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:21:01,450 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow?page=0&size=5 "HTTP/1.1 200 OK"
2025-08-03 21:21:01,593 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'list_workflows': 1 validation error for Workflow
object_data
  Input should be a valid dictionary [type=dict_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/dict_type
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/workflow_management_v2.py", line 251, in list_workflows
    workflows = rowan.list_workflows(
        parent_uuid=parent_uuid,
    ...<6 lines>...
        size=size
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 349, in list_workflows
    return [Workflow(**item) for item in response.json()["workflows"]]
            ~~~~~~~~^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for Workflow
object_data
  Input should be a valid dictionary [type=dict_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/dict_type
2025-08-03 21:21:31,881 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:21:32,371 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 21:21:32,373 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 78, in submit_conformer_search_workflow
    return rowan.submit_conformer_search_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 488, in submit_conformer_search_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 21:21:40,774 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:21:41,549 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 21:21:49,054 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:21:49,440 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7e166214-97ab-42d0-8718-4ca2e7a98f9b "HTTP/1.1 200 OK"
2025-08-03 21:21:49,829 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7e166214-97ab-42d0-8718-4ca2e7a98f9b "HTTP/1.1 200 OK"
2025-08-03 21:21:55,225 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7e166214-97ab-42d0-8718-4ca2e7a98f9b "HTTP/1.1 200 OK"
2025-08-03 21:22:00,614 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7e166214-97ab-42d0-8718-4ca2e7a98f9b "HTTP/1.1 200 OK"
2025-08-03 21:22:06,050 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7e166214-97ab-42d0-8718-4ca2e7a98f9b "HTTP/1.1 200 OK"
2025-08-03 21:22:12,001 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:22:12,379 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7e166214-97ab-42d0-8718-4ca2e7a98f9b "HTTP/1.1 200 OK"
2025-08-03 21:22:12,768 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7e166214-97ab-42d0-8718-4ca2e7a98f9b "HTTP/1.1 200 OK"
2025-08-03 21:22:19,774 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:22:20,289 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 21:22:20,289 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 78, in submit_conformer_search_workflow
    return rowan.submit_conformer_search_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 488, in submit_conformer_search_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 21:22:26,482 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:22:26,885 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/8442f1c2-8807-4244-b285-dab449510e1b/molecules "HTTP/1.1 200 OK"
2025-08-03 21:22:35,095 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:22:35,474 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7e166214-97ab-42d0-8718-4ca2e7a98f9b "HTTP/1.1 200 OK"
2025-08-03 21:23:04,446 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 21:36:27,317 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 21:36:38,558 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:36:39,251 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 21:36:39,253 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 78, in submit_conformer_search_workflow
    
    
    ...<8 lines>...
        final_method=final_method,
        ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 488, in submit_conformer_search_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 21:36:46,854 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:36:47,448 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 21:36:47,450 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 78, in submit_conformer_search_workflow
    
    
    ...<8 lines>...
        final_method=final_method,
        ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 488, in submit_conformer_search_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 21:36:59,662 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:37:00,244 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 21:37:00,245 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 78, in submit_conformer_search_workflow
    
    
    ...<8 lines>...
        final_method=final_method,
        ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 488, in submit_conformer_search_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 21:37:15,409 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-03 21:37:16,323 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-03 21:37:16,324 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: caffeine
2025-08-03 21:37:16,866 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'caffeine' to SMILES: Cn1cnc2N(C)C(=O)N(C)C(=O)c12
2025-08-03 21:37:16,866 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: benzene
2025-08-03 21:37:17,405 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'benzene' to SMILES: c1ccccc1
2025-08-03 21:37:17,405 - rowan_mcp.functions_v2.molecule_lookup - INFO - Input '50-78-2' appears to be SMILES, returning as-is
2025-08-03 21:37:17,405 - rowan_mcp.functions_v2.molecule_lookup - INFO - Input '2-acetoxybenzoic acid' appears to be SMILES, returning as-is
2025-08-03 21:37:17,405 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: paracetamol
2025-08-03 21:37:17,952 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'paracetamol' to SMILES: CC(=O)Nc1ccc(O)cc1
2025-08-03 21:37:17,952 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: glucose
2025-08-03 21:37:18,503 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'glucose' to SMILES: OC[C@@H](O)[C@@H](O)[C@H](O)[C@@H](O)C=O
2025-08-03 21:37:18,504 - rowan_mcp.functions_v2.molecule_lookup - INFO - Input 'CC(=O)O' appears to be SMILES, returning as-is
2025-08-03 21:37:18,504 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: invalid_molecule_xyz
2025-08-03 21:37:19,196 - rowan_mcp.functions_v2.molecule_lookup - WARNING - Failed to lookup 'invalid_molecule_xyz': HTTP Error 500: INTERNAL SERVER ERROR
2025-08-03 21:37:19,196 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-03 21:37:19,750 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-03 21:37:19,750 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: ibuprofen
2025-08-03 21:37:20,318 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'ibuprofen' to SMILES: CC(C)Cc1ccc(cc1)C(C)C(O)=O
2025-08-03 21:37:20,318 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: paracetamol
2025-08-03 21:37:20,864 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'paracetamol' to SMILES: CC(=O)Nc1ccc(O)cc1
2025-08-03 21:37:20,865 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: caffeine
2025-08-03 21:37:21,412 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'caffeine' to SMILES: Cn1cnc2N(C)C(=O)N(C)C(=O)c12
2025-08-03 21:37:21,412 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: penicillin
2025-08-03 21:37:22,360 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'penicillin' to SMILES: [Na].CC1(C)SC2C(NC(=O)Cc3ccccc3)C(=O)N2C1C(O)=O
2025-08-03 21:37:47,531 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 21:37:52,405 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-03 21:37:52,990 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-03 21:37:53,444 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 21:37:53,450 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 21:37:53,793 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 21:37:53,794 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: ibuprofen
2025-08-03 21:37:54,341 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'ibuprofen' to SMILES: CC(C)Cc1ccc(cc1)C(C)C(O)=O
2025-08-03 21:37:55,086 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 21:38:02,612 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 21:38:07,690 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:38:08,511 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 21:44:00,933 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 21:44:02,390 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 21:44:02,395 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 21:44:21,525 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:44:21,526 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'molecule_lookup': 1 validation error for call[molecule_lookup]
explanation
  Unexpected keyword argument [type=unexpected_keyword_argument, input_value='Getting the SMILES repre...e optimization workflow', input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/unexpected_keyword_argument
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
pydantic_core._pydantic_core.ValidationError: 1 validation error for call[molecule_lookup]
explanation
  Unexpected keyword argument [type=unexpected_keyword_argument, input_value='Getting the SMILES repre...e optimization workflow', input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/unexpected_keyword_argument
2025-08-03 21:44:25,075 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:44:25,075 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: water
2025-08-03 21:44:25,672 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'water' to SMILES: O
2025-08-03 21:44:31,118 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:44:32,326 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 21:44:32,327 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_basic_calculation_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_basic_calculation_workflow.py", line 108, in submit_basic_calculation_workflow
    return rowan.submit_basic_calculation_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 410, in submit_basic_calculation_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 21:44:51,703 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:44:52,294 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 21:44:52,295 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_basic_calculation_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_basic_calculation_workflow.py", line 108, in submit_basic_calculation_workflow
    return rowan.submit_basic_calculation_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 410, in submit_basic_calculation_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 21:46:52,224 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 21:46:53,351 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 21:46:53,357 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 21:47:04,782 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:47:05,618 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 21:47:13,511 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:47:14,009 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/ddbbaabc-8372-4eef-8f35-30c8f276fccb "HTTP/1.1 200 OK"
2025-08-03 21:47:14,393 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/ddbbaabc-8372-4eef-8f35-30c8f276fccb "HTTP/1.1 200 OK"
2025-08-03 21:47:19,768 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/ddbbaabc-8372-4eef-8f35-30c8f276fccb "HTTP/1.1 200 OK"
2025-08-03 21:47:25,205 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/ddbbaabc-8372-4eef-8f35-30c8f276fccb "HTTP/1.1 200 OK"
2025-08-03 21:47:29,967 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:47:30,370 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/ddbbaabc-8372-4eef-8f35-30c8f276fccb "HTTP/1.1 200 OK"
2025-08-03 21:47:30,762 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/ddbbaabc-8372-4eef-8f35-30c8f276fccb "HTTP/1.1 200 OK"
2025-08-03 21:47:37,439 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:47:37,835 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/d0243088-cbd7-4655-8b73-046969691498/molecules "HTTP/1.1 200 OK"
2025-08-03 21:47:45,365 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:47:45,787 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/ddbbaabc-8372-4eef-8f35-30c8f276fccb "HTTP/1.1 200 OK"
2025-08-03 21:51:58,615 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 21:52:00,839 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 21:52:00,845 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 21:52:19,311 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:52:20,936 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 21:52:20,938 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_basic_calculation_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_basic_calculation_workflow.py", line 127, in submit_basic_calculation_workflow
    return rowan.submit_basic_calculation_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=molecule_to_submit,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 410, in submit_basic_calculation_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 21:52:41,499 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:52:42,217 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 21:52:42,219 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_basic_calculation_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_basic_calculation_workflow.py", line 127, in submit_basic_calculation_workflow
    return rowan.submit_basic_calculation_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=molecule_to_submit,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 410, in submit_basic_calculation_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 21:52:47,386 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:52:52,154 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:52:52,847 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 21:52:53,366 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 77, in submit_conformer_search_workflow
    return rowan.submit_conformer_search_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 488, in submit_conformer_search_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 21:53:25,374 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 21:53:27,359 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 21:53:27,364 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 21:53:37,067 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:53:37,842 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 21:54:43,889 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:54:43,892 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: diethyl ether
2025-08-03 21:54:44,450 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'diethyl ether' to SMILES: CCOCC
2025-08-03 21:54:51,375 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:54:52,038 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 21:54:52,038 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 77, in submit_conformer_search_workflow
    return rowan.submit_conformer_search_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 488, in submit_conformer_search_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 21:58:56,291 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 21:59:01,315 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 21:59:01,322 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 21:59:08,992 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:59:08,992 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: diethyl ether
2025-08-03 21:59:09,572 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'diethyl ether' to SMILES: CCOCC
2025-08-03 21:59:14,636 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:59:15,449 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 21:59:24,986 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:59:25,356 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d6ed2154-8df5-4236-9eba-ad9bd07f97d3 "HTTP/1.1 200 OK"
2025-08-03 21:59:25,719 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d6ed2154-8df5-4236-9eba-ad9bd07f97d3 "HTTP/1.1 200 OK"
2025-08-03 21:59:36,106 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d6ed2154-8df5-4236-9eba-ad9bd07f97d3 "HTTP/1.1 200 OK"
2025-08-03 21:59:46,509 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d6ed2154-8df5-4236-9eba-ad9bd07f97d3 "HTTP/1.1 200 OK"
2025-08-03 21:59:53,070 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 21:59:53,449 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d6ed2154-8df5-4236-9eba-ad9bd07f97d3 "HTTP/1.1 200 OK"
2025-08-03 21:59:53,945 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d6ed2154-8df5-4236-9eba-ad9bd07f97d3 "HTTP/1.1 200 OK"
2025-08-03 22:00:08,571 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:00:08,947 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/dea7a2b4-4265-4a3e-ba57-3a790456b5ed/molecules "HTTP/1.1 200 OK"
2025-08-03 22:00:09,711 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:00:10,084 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/d956c260-5f61-4cdf-b309-95de14ddcf3f/molecules "HTTP/1.1 200 OK"
2025-08-03 22:00:10,661 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:00:11,027 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/1b489c5a-abbe-41e2-b993-99f063667d11/molecules "HTTP/1.1 200 OK"
2025-08-03 22:00:32,457 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:00:32,457 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-03 22:00:33,469 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-03 22:00:53,670 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:00:54,264 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 22:00:54,266 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_pka_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_pka_workflow.py", line 69, in submit_pka_workflow
    return rowan.submit_pka_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 588, in submit_pka_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 22:00:58,270 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:00:58,849 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 22:00:58,850 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_pka_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_pka_workflow.py", line 69, in submit_pka_workflow
    return rowan.submit_pka_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 588, in submit_pka_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 22:01:56,590 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:02:12,084 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:02:12,093 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:02:23,618 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:02:23,619 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-03 22:02:24,295 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-03 22:02:42,314 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:02:42,987 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 22:02:42,987 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_pka_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_pka_workflow.py", line 71, in submit_pka_workflow
    return rowan.submit_pka_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 588, in submit_pka_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 22:02:46,968 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:02:47,608 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 22:02:47,609 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_pka_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_pka_workflow.py", line 71, in submit_pka_workflow
    return rowan.submit_pka_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 588, in submit_pka_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 22:04:48,087 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:05:08,739 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:05:08,746 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:05:15,815 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:05:15,815 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-03 22:05:16,410 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-03 22:05:57,679 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:05:59,754 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:05:59,762 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:06:07,947 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:06:07,947 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-03 22:06:08,533 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-03 22:06:28,052 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:06:28,907 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:06:39,002 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:06:39,388 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0134ef2-eb25-44ba-9852-92388a00262a "HTTP/1.1 200 OK"
2025-08-03 22:06:39,784 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0134ef2-eb25-44ba-9852-92388a00262a "HTTP/1.1 200 OK"
2025-08-03 22:06:50,188 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0134ef2-eb25-44ba-9852-92388a00262a "HTTP/1.1 200 OK"
2025-08-03 22:07:00,570 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0134ef2-eb25-44ba-9852-92388a00262a "HTTP/1.1 200 OK"
2025-08-03 22:07:10,975 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0134ef2-eb25-44ba-9852-92388a00262a "HTTP/1.1 200 OK"
2025-08-03 22:07:17,568 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:07:17,940 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0134ef2-eb25-44ba-9852-92388a00262a "HTTP/1.1 200 OK"
2025-08-03 22:07:18,336 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0134ef2-eb25-44ba-9852-92388a00262a "HTTP/1.1 200 OK"
2025-08-03 22:08:01,277 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:08:02,807 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:08:02,815 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:08:11,296 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:08:11,296 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-03 22:08:11,823 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-03 22:08:33,672 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:08:34,471 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:08:45,726 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:08:46,139 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/39887382-88b8-4e9f-a232-44fba0d96f3e "HTTP/1.1 200 OK"
2025-08-03 22:08:46,487 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/39887382-88b8-4e9f-a232-44fba0d96f3e "HTTP/1.1 200 OK"
2025-08-03 22:08:54,675 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:08:57,063 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:08:57,068 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:09:43,088 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:09:44,130 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:09:44,136 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:09:52,786 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:09:52,787 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-03 22:09:53,343 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-03 22:10:00,488 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:10:01,279 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:10:08,919 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:10:09,527 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/608741dd-e77b-4294-a383-6ea3f4e811b0 "HTTP/1.1 200 OK"
2025-08-03 22:10:09,899 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/608741dd-e77b-4294-a383-6ea3f4e811b0 "HTTP/1.1 200 OK"
2025-08-03 22:10:20,280 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/608741dd-e77b-4294-a383-6ea3f4e811b0 "HTTP/1.1 200 OK"
2025-08-03 22:10:30,710 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/608741dd-e77b-4294-a383-6ea3f4e811b0 "HTTP/1.1 200 OK"
2025-08-03 22:10:41,100 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/608741dd-e77b-4294-a383-6ea3f4e811b0 "HTTP/1.1 200 OK"
2025-08-03 22:10:46,479 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:10:46,862 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/608741dd-e77b-4294-a383-6ea3f4e811b0 "HTTP/1.1 200 OK"
2025-08-03 22:10:47,252 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/608741dd-e77b-4294-a383-6ea3f4e811b0 "HTTP/1.1 200 OK"
2025-08-03 22:10:47,616 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/608741dd-e77b-4294-a383-6ea3f4e811b0 "HTTP/1.1 200 OK"
2025-08-03 22:10:51,771 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:10:52,160 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/608741dd-e77b-4294-a383-6ea3f4e811b0 "HTTP/1.1 200 OK"
2025-08-03 22:10:52,523 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/608741dd-e77b-4294-a383-6ea3f4e811b0 "HTTP/1.1 200 OK"
2025-08-03 22:11:06,318 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:11:11,638 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:11:12,446 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:11:18,406 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:11:18,839 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a572ebd9-1669-46f4-bbe4-9a3f86afff8b "HTTP/1.1 200 OK"
2025-08-03 22:11:19,234 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a572ebd9-1669-46f4-bbe4-9a3f86afff8b "HTTP/1.1 200 OK"
2025-08-03 22:11:29,650 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a572ebd9-1669-46f4-bbe4-9a3f86afff8b "HTTP/1.1 200 OK"
2025-08-03 22:11:40,062 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a572ebd9-1669-46f4-bbe4-9a3f86afff8b "HTTP/1.1 200 OK"
2025-08-03 22:11:50,513 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a572ebd9-1669-46f4-bbe4-9a3f86afff8b "HTTP/1.1 200 OK"
2025-08-03 22:12:00,925 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a572ebd9-1669-46f4-bbe4-9a3f86afff8b "HTTP/1.1 200 OK"
2025-08-03 22:12:06,309 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:12:06,701 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a572ebd9-1669-46f4-bbe4-9a3f86afff8b "HTTP/1.1 200 OK"
2025-08-03 22:12:07,130 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a572ebd9-1669-46f4-bbe4-9a3f86afff8b "HTTP/1.1 200 OK"
2025-08-03 22:12:07,553 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a572ebd9-1669-46f4-bbe4-9a3f86afff8b "HTTP/1.1 200 OK"
2025-08-03 22:12:11,372 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:12:11,761 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a572ebd9-1669-46f4-bbe4-9a3f86afff8b "HTTP/1.1 200 OK"
2025-08-03 22:12:12,778 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a572ebd9-1669-46f4-bbe4-9a3f86afff8b "HTTP/1.1 200 OK"
2025-08-03 22:13:26,341 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:13:29,207 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:13:29,213 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:13:41,336 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:13:41,336 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-03 22:13:41,986 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-03 22:13:52,719 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:13:53,535 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:16:54,736 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:16:57,180 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:16:57,186 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:17:07,748 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:17:07,748 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-03 22:17:08,355 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-03 22:23:26,930 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:23:28,337 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:23:28,345 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:23:41,740 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:23:41,740 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-03 22:23:42,336 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-03 22:24:03,718 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:24:04,744 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:24:16,150 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:24:16,529 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1c300beb-ae91-4b36-8e2b-f4a48c81b60f "HTTP/1.1 200 OK"
2025-08-03 22:24:16,912 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1c300beb-ae91-4b36-8e2b-f4a48c81b60f "HTTP/1.1 200 OK"
2025-08-03 22:24:22,359 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1c300beb-ae91-4b36-8e2b-f4a48c81b60f "HTTP/1.1 200 OK"
2025-08-03 22:24:27,743 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1c300beb-ae91-4b36-8e2b-f4a48c81b60f "HTTP/1.1 200 OK"
2025-08-03 22:24:33,171 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1c300beb-ae91-4b36-8e2b-f4a48c81b60f "HTTP/1.1 200 OK"
2025-08-03 22:24:38,601 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1c300beb-ae91-4b36-8e2b-f4a48c81b60f "HTTP/1.1 200 OK"
2025-08-03 22:24:44,847 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:24:45,216 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1c300beb-ae91-4b36-8e2b-f4a48c81b60f "HTTP/1.1 200 OK"
2025-08-03 22:24:45,571 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1c300beb-ae91-4b36-8e2b-f4a48c81b60f "HTTP/1.1 200 OK"
2025-08-03 22:28:30,750 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:28:32,675 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:28:32,680 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:28:47,732 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:28:47,732 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-03 22:28:48,320 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-03 22:29:08,340 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:29:09,211 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:29:19,454 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:29:19,822 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/388098f4-d954-466e-b6b4-e3e549c0dcc6 "HTTP/1.1 200 OK"
2025-08-03 22:29:20,190 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/388098f4-d954-466e-b6b4-e3e549c0dcc6 "HTTP/1.1 200 OK"
2025-08-03 22:29:30,601 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/388098f4-d954-466e-b6b4-e3e549c0dcc6 "HTTP/1.1 200 OK"
2025-08-03 22:29:41,030 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/388098f4-d954-466e-b6b4-e3e549c0dcc6 "HTTP/1.1 200 OK"
2025-08-03 22:29:51,360 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/388098f4-d954-466e-b6b4-e3e549c0dcc6 "HTTP/1.1 200 OK"
2025-08-03 22:29:58,001 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:29:58,359 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/388098f4-d954-466e-b6b4-e3e549c0dcc6 "HTTP/1.1 200 OK"
2025-08-03 22:29:58,733 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/388098f4-d954-466e-b6b4-e3e549c0dcc6 "HTTP/1.1 200 OK"
2025-08-03 22:32:02,105 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:32:03,229 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:32:03,237 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:32:14,575 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:32:14,576 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-03 22:32:15,172 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-03 22:32:21,126 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:32:21,932 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:32:29,792 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:32:30,202 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b1f40e72-9a3d-4890-ac9f-3178f0847a2e "HTTP/1.1 200 OK"
2025-08-03 22:32:30,609 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b1f40e72-9a3d-4890-ac9f-3178f0847a2e "HTTP/1.1 200 OK"
2025-08-03 22:32:41,015 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b1f40e72-9a3d-4890-ac9f-3178f0847a2e "HTTP/1.1 200 OK"
2025-08-03 22:32:51,422 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b1f40e72-9a3d-4890-ac9f-3178f0847a2e "HTTP/1.1 200 OK"
2025-08-03 22:33:01,846 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b1f40e72-9a3d-4890-ac9f-3178f0847a2e "HTTP/1.1 200 OK"
2025-08-03 22:33:06,996 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:33:07,408 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b1f40e72-9a3d-4890-ac9f-3178f0847a2e "HTTP/1.1 200 OK"
2025-08-03 22:33:07,788 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b1f40e72-9a3d-4890-ac9f-3178f0847a2e "HTTP/1.1 200 OK"
2025-08-03 22:33:08,177 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b1f40e72-9a3d-4890-ac9f-3178f0847a2e "HTTP/1.1 200 OK"
2025-08-03 22:33:12,013 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:33:12,403 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b1f40e72-9a3d-4890-ac9f-3178f0847a2e "HTTP/1.1 200 OK"
2025-08-03 22:33:12,764 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b1f40e72-9a3d-4890-ac9f-3178f0847a2e "HTTP/1.1 200 OK"
2025-08-03 22:34:48,424 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:34:49,383 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:34:49,390 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:35:00,345 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:35:00,346 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-03 22:35:00,919 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-03 22:35:07,322 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:35:08,208 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:36:24,244 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:36:26,539 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:36:26,546 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:36:35,627 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:36:35,632 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-03 22:36:36,204 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-03 22:36:44,771 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:36:45,815 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:36:55,361 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:36:55,726 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/42fcfb58-85a9-49f7-8cdc-1890875caeca "HTTP/1.1 200 OK"
2025-08-03 22:36:56,106 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/42fcfb58-85a9-49f7-8cdc-1890875caeca "HTTP/1.1 200 OK"
2025-08-03 22:37:06,483 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/42fcfb58-85a9-49f7-8cdc-1890875caeca "HTTP/1.1 200 OK"
2025-08-03 22:37:16,870 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/42fcfb58-85a9-49f7-8cdc-1890875caeca "HTTP/1.1 200 OK"
2025-08-03 22:37:23,136 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:37:23,486 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/42fcfb58-85a9-49f7-8cdc-1890875caeca "HTTP/1.1 200 OK"
2025-08-03 22:37:23,859 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/42fcfb58-85a9-49f7-8cdc-1890875caeca "HTTP/1.1 200 OK"
2025-08-03 22:37:32,159 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:37:32,917 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:37:40,206 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:37:40,587 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/55345d91-6319-4b5e-b95c-c74277e0d7a1 "HTTP/1.1 200 OK"
2025-08-03 22:37:40,950 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/55345d91-6319-4b5e-b95c-c74277e0d7a1 "HTTP/1.1 200 OK"
2025-08-03 22:37:51,332 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/55345d91-6319-4b5e-b95c-c74277e0d7a1 "HTTP/1.1 200 OK"
2025-08-03 22:37:57,303 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:37:57,709 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/55345d91-6319-4b5e-b95c-c74277e0d7a1 "HTTP/1.1 200 OK"
2025-08-03 22:37:58,106 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/55345d91-6319-4b5e-b95c-c74277e0d7a1 "HTTP/1.1 200 OK"
2025-08-03 22:38:09,180 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:38:09,926 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:38:19,218 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:38:19,624 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/016df0ab-eec2-4b37-8777-087adffc32f5 "HTTP/1.1 200 OK"
2025-08-03 22:38:20,045 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/016df0ab-eec2-4b37-8777-087adffc32f5 "HTTP/1.1 200 OK"
2025-08-03 22:38:35,454 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/016df0ab-eec2-4b37-8777-087adffc32f5 "HTTP/1.1 200 OK"
2025-08-03 22:38:50,862 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/016df0ab-eec2-4b37-8777-087adffc32f5 "HTTP/1.1 200 OK"
2025-08-03 22:38:57,212 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:38:57,594 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/016df0ab-eec2-4b37-8777-087adffc32f5 "HTTP/1.1 200 OK"
2025-08-03 22:38:57,975 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/016df0ab-eec2-4b37-8777-087adffc32f5 "HTTP/1.1 200 OK"
2025-08-03 22:48:07,237 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:48:07,251 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: benzene
2025-08-03 22:48:07,781 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'benzene' to SMILES: c1ccccc1
2025-08-03 22:48:12,831 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:48:13,372 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 22:48:13,372 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_redox_potential_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_redox_potential_workflow.py", line 67, in submit_redox_potential_workflow
    return rowan.submit_redox_potential_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 638, in submit_redox_potential_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 22:48:19,161 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:48:19,764 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-03 22:48:19,765 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_redox_potential_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_redox_potential_workflow.py", line 67, in submit_redox_potential_workflow
    return rowan.submit_redox_potential_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=initial_molecule,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 638, in submit_redox_potential_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-03 22:48:25,861 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:49:00,677 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:49:05,373 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:49:05,379 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:49:16,372 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:49:16,373 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: benzene
2025-08-03 22:49:16,913 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'benzene' to SMILES: c1ccccc1
2025-08-03 22:49:22,496 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:49:23,058 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:49:30,346 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:49:30,737 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3a77e40-11b5-4867-9fd0-e58091e82ace "HTTP/1.1 200 OK"
2025-08-03 22:49:31,131 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3a77e40-11b5-4867-9fd0-e58091e82ace "HTTP/1.1 200 OK"
2025-08-03 22:49:41,491 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3a77e40-11b5-4867-9fd0-e58091e82ace "HTTP/1.1 200 OK"
2025-08-03 22:49:51,911 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3a77e40-11b5-4867-9fd0-e58091e82ace "HTTP/1.1 200 OK"
2025-08-03 22:50:02,417 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3a77e40-11b5-4867-9fd0-e58091e82ace "HTTP/1.1 200 OK"
2025-08-03 22:50:12,837 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3a77e40-11b5-4867-9fd0-e58091e82ace "HTTP/1.1 200 OK"
2025-08-03 22:50:23,260 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3a77e40-11b5-4867-9fd0-e58091e82ace "HTTP/1.1 200 OK"
2025-08-03 22:50:33,622 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3a77e40-11b5-4867-9fd0-e58091e82ace "HTTP/1.1 200 OK"
2025-08-03 22:50:43,987 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3a77e40-11b5-4867-9fd0-e58091e82ace "HTTP/1.1 200 OK"
2025-08-03 22:50:54,390 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3a77e40-11b5-4867-9fd0-e58091e82ace "HTTP/1.1 200 OK"
2025-08-03 22:51:04,767 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3a77e40-11b5-4867-9fd0-e58091e82ace "HTTP/1.1 200 OK"
2025-08-03 22:51:15,131 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3a77e40-11b5-4867-9fd0-e58091e82ace "HTTP/1.1 200 OK"
2025-08-03 22:51:53,119 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:51:59,052 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:51:59,059 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:52:04,028 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:52:04,430 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3a77e40-11b5-4867-9fd0-e58091e82ace "HTTP/1.1 200 OK"
2025-08-03 22:52:04,784 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3a77e40-11b5-4867-9fd0-e58091e82ace "HTTP/1.1 200 OK"
2025-08-03 22:52:05,181 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3a77e40-11b5-4867-9fd0-e58091e82ace "HTTP/1.1 200 OK"
2025-08-03 22:52:17,433 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:52:17,433 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-03 22:52:17,996 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-03 22:52:23,809 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:52:23,809 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_solubility_workflow': name 'initial_molecule' is not defined
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_solubility_workflow.py", line 104, in submit_solubility_workflow
    initial_smiles=stjames.Molecule.from_smiles(initial_molecule),
                                                ^^^^^^^^^^^^^^^^
NameError: name 'initial_molecule' is not defined
2025-08-03 22:52:29,306 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:52:29,307 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_solubility_workflow': name 'initial_molecule' is not defined
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_solubility_workflow.py", line 104, in submit_solubility_workflow
    initial_smiles=stjames.Molecule.from_smiles(initial_molecule),
                                                ^^^^^^^^^^^^^^^^
NameError: name 'initial_molecule' is not defined
2025-08-03 22:52:34,845 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:52:35,673 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:52:42,092 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:52:42,501 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/142800b3-43f2-4687-8553-36f8045be3b2 "HTTP/1.1 200 OK"
2025-08-03 22:52:42,859 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/142800b3-43f2-4687-8553-36f8045be3b2 "HTTP/1.1 200 OK"
2025-08-03 22:52:53,269 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/142800b3-43f2-4687-8553-36f8045be3b2 "HTTP/1.1 200 OK"
2025-08-03 22:53:03,722 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/142800b3-43f2-4687-8553-36f8045be3b2 "HTTP/1.1 200 OK"
2025-08-03 22:53:15,004 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:53:17,534 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:53:17,542 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:53:26,851 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:53:26,851 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-03 22:53:27,449 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-03 22:53:33,178 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:53:33,946 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:53:42,420 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:53:42,813 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/ac054b87-4c13-44df-a3e6-882d3eb4a4b6 "HTTP/1.1 200 OK"
2025-08-03 22:53:43,194 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/ac054b87-4c13-44df-a3e6-882d3eb4a4b6 "HTTP/1.1 200 OK"
2025-08-03 22:53:53,560 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/ac054b87-4c13-44df-a3e6-882d3eb4a4b6 "HTTP/1.1 200 OK"
2025-08-03 22:54:03,947 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/ac054b87-4c13-44df-a3e6-882d3eb4a4b6 "HTTP/1.1 200 OK"
2025-08-03 22:54:03,951 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:54:03,951 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: ibuprofen
2025-08-03 22:54:04,496 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'ibuprofen' to SMILES: CC(C)Cc1ccc(cc1)C(C)C(O)=O
2025-08-03 22:54:07,495 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:54:07,877 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/ac054b87-4c13-44df-a3e6-882d3eb4a4b6 "HTTP/1.1 200 OK"
2025-08-03 22:54:08,265 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/ac054b87-4c13-44df-a3e6-882d3eb4a4b6 "HTTP/1.1 200 OK"
2025-08-03 22:54:08,690 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:54:09,541 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:54:13,671 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:54:14,092 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:54:14,092 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: acetylsalicylic acid
2025-08-03 22:54:15,116 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'acetylsalicylic acid' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-03 22:54:18,713 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:54:19,098 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/64871957-4a19-4c50-9b65-901bde347169 "HTTP/1.1 200 OK"
2025-08-03 22:54:19,462 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/64871957-4a19-4c50-9b65-901bde347169 "HTTP/1.1 200 OK"
2025-08-03 22:54:24,843 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/64871957-4a19-4c50-9b65-901bde347169 "HTTP/1.1 200 OK"
2025-08-03 22:54:30,265 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/64871957-4a19-4c50-9b65-901bde347169 "HTTP/1.1 200 OK"
2025-08-03 22:54:35,650 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/64871957-4a19-4c50-9b65-901bde347169 "HTTP/1.1 200 OK"
2025-08-03 22:54:41,046 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/64871957-4a19-4c50-9b65-901bde347169 "HTTP/1.1 200 OK"
2025-08-03 22:54:41,179 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:54:41,916 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:54:41,920 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:54:41,920 - rowan_mcp.functions_v2.molecule_lookup - INFO - Input '2-hydroxypyridine' appears to be SMILES, returning as-is
2025-08-03 22:54:46,597 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:54:46,963 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f77863c0-5b18-454c-be53-0e4fd64ffadc "HTTP/1.1 200 OK"
2025-08-03 22:54:47,334 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f77863c0-5b18-454c-be53-0e4fd64ffadc "HTTP/1.1 200 OK"
2025-08-03 22:54:57,743 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f77863c0-5b18-454c-be53-0e4fd64ffadc "HTTP/1.1 200 OK"
2025-08-03 22:55:08,139 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f77863c0-5b18-454c-be53-0e4fd64ffadc "HTTP/1.1 200 OK"
2025-08-03 22:55:08,147 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:55:08,147 - rowan_mcp.functions_v2.molecule_lookup - INFO - Input '2-pyridinol' appears to be SMILES, returning as-is
2025-08-03 22:55:08,147 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:55:08,516 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/64871957-4a19-4c50-9b65-901bde347169 "HTTP/1.1 200 OK"
2025-08-03 22:55:09,031 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/64871957-4a19-4c50-9b65-901bde347169 "HTTP/1.1 200 OK"
2025-08-03 22:55:09,265 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:55:09,265 - rowan_mcp.functions_v2.molecule_lookup - INFO - Input 'pyridin-2-ol' appears to be SMILES, returning as-is
2025-08-03 22:55:09,371 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:55:11,316 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:55:11,713 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f77863c0-5b18-454c-be53-0e4fd64ffadc "HTTP/1.1 200 OK"
2025-08-03 22:55:12,161 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f77863c0-5b18-454c-be53-0e4fd64ffadc "HTTP/1.1 200 OK"
2025-08-03 22:55:15,556 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:55:16,304 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:55:17,430 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:55:17,432 - rowan_mcp.functions_v2.molecule_lookup - INFO - Input '50-78-2' appears to be SMILES, returning as-is
2025-08-03 22:55:17,576 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:55:17,577 - rowan_mcp.functions_v2.molecule_lookup - INFO - Input '2-acetoxybenzoic acid' appears to be SMILES, returning as-is
2025-08-03 22:55:22,784 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:55:23,126 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:55:23,493 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8c3bfcf6-176e-4d74-af83-4bee8c220f9d "HTTP/1.1 200 OK"
2025-08-03 22:55:23,873 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8c3bfcf6-176e-4d74-af83-4bee8c220f9d "HTTP/1.1 200 OK"
2025-08-03 22:55:34,254 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8c3bfcf6-176e-4d74-af83-4bee8c220f9d "HTTP/1.1 200 OK"
2025-08-03 22:55:44,656 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8c3bfcf6-176e-4d74-af83-4bee8c220f9d "HTTP/1.1 200 OK"
2025-08-03 22:55:55,040 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8c3bfcf6-176e-4d74-af83-4bee8c220f9d "HTTP/1.1 200 OK"
2025-08-03 22:55:55,048 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:55:55,748 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 22:56:00,349 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:56:00,747 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8c3bfcf6-176e-4d74-af83-4bee8c220f9d "HTTP/1.1 200 OK"
2025-08-03 22:56:01,127 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8c3bfcf6-176e-4d74-af83-4bee8c220f9d "HTTP/1.1 200 OK"
2025-08-03 22:56:01,777 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:56:02,176 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a8525da-d519-4b73-bb3e-a547e45658d8 "HTTP/1.1 200 OK"
2025-08-03 22:56:02,580 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a8525da-d519-4b73-bb3e-a547e45658d8 "HTTP/1.1 200 OK"
2025-08-03 22:56:12,978 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a8525da-d519-4b73-bb3e-a547e45658d8 "HTTP/1.1 200 OK"
2025-08-03 22:56:23,378 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a8525da-d519-4b73-bb3e-a547e45658d8 "HTTP/1.1 200 OK"
2025-08-03 22:56:23,497 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:56:23,865 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/89663bb3-e705-4533-825c-1db6d20b7926/molecules "HTTP/1.1 200 OK"
2025-08-03 22:56:24,002 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:56:24,397 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/bb0013aa-4daa-46fd-af8a-923466d45039/molecules "HTTP/1.1 200 OK"
2025-08-03 22:56:28,134 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:56:28,546 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a8525da-d519-4b73-bb3e-a547e45658d8 "HTTP/1.1 200 OK"
2025-08-03 22:56:29,069 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a8525da-d519-4b73-bb3e-a547e45658d8 "HTTP/1.1 200 OK"
2025-08-03 22:58:44,261 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 22:58:49,068 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 22:58:49,076 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 22:59:28,966 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 22:59:29,773 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:00:13,210 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:00:13,210 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: HNCO
2025-08-03 23:00:14,485 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'HNCO' to SMILES: N=C=O
2025-08-03 23:00:29,758 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:00:30,766 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:00:37,222 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:00:37,630 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2f32f810-f69f-4d30-b3a8-3f1f5b0f6541 "HTTP/1.1 200 OK"
2025-08-03 23:00:38,013 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2f32f810-f69f-4d30-b3a8-3f1f5b0f6541 "HTTP/1.1 200 OK"
2025-08-03 23:00:44,074 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:00:48,493 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:00:48,498 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:01:02,527 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:01:03,134 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:01:33,879 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:01:33,879 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aniline
2025-08-03 23:01:34,906 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aniline' to SMILES: Nc1ccccc1
2025-08-03 23:01:39,036 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:01:39,117 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 64, in submit_fukui_workflow
    return rowan.submit_fukui_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=stjames.Molecule.from_smiles(initial_molecule),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:01:44,760 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:01:44,776 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 64, in submit_fukui_workflow
    return rowan.submit_fukui_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=stjames.Molecule.from_smiles(initial_molecule),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:01:48,804 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:01:48,804 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aniline
2025-08-03 23:01:49,339 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aniline' to SMILES: Nc1ccccc1
2025-08-03 23:01:50,440 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:01:52,918 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:01:52,936 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 64, in submit_fukui_workflow
    return rowan.submit_fukui_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=stjames.Molecule.from_smiles(initial_molecule),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:01:58,294 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:01:58,307 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 64, in submit_fukui_workflow
    return rowan.submit_fukui_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=stjames.Molecule.from_smiles(initial_molecule),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:02:04,577 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:02:05,586 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:02:13,674 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:02:14,081 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/441f883a-2c4f-4126-8229-84095dc2607a "HTTP/1.1 200 OK"
2025-08-03 23:02:14,490 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/441f883a-2c4f-4126-8229-84095dc2607a "HTTP/1.1 200 OK"
2025-08-03 23:02:24,949 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/441f883a-2c4f-4126-8229-84095dc2607a "HTTP/1.1 200 OK"
2025-08-03 23:02:35,344 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/441f883a-2c4f-4126-8229-84095dc2607a "HTTP/1.1 200 OK"
2025-08-03 23:04:37,417 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:04:46,034 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:04:46,041 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:04:53,339 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:04:53,339 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aniline
2025-08-03 23:04:53,906 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aniline' to SMILES: Nc1ccccc1
2025-08-03 23:04:58,115 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:04:58,170 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 65, in submit_fukui_workflow
    return rowan.submit_fukui_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=stjames.Molecule.from_smiles(initial_molecule),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:05:02,795 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:05:02,807 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 65, in submit_fukui_workflow
    return rowan.submit_fukui_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=stjames.Molecule.from_smiles(initial_molecule),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:05:09,846 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:05:10,662 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:05:16,945 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:05:16,960 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 65, in submit_fukui_workflow
    return rowan.submit_fukui_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=stjames.Molecule.from_smiles(initial_molecule),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:05:23,261 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:05:24,183 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/690a0175-7ecb-4792-9cda-3b98dd834518 "HTTP/1.1 200 OK"
2025-08-03 23:05:24,691 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/690a0175-7ecb-4792-9cda-3b98dd834518 "HTTP/1.1 200 OK"
2025-08-03 23:05:25,071 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/690a0175-7ecb-4792-9cda-3b98dd834518 "HTTP/1.1 200 OK"
2025-08-03 23:05:25,200 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:05:25,947 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:05:36,135 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:05:36,520 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/690a0175-7ecb-4792-9cda-3b98dd834518 "HTTP/1.1 200 OK"
2025-08-03 23:05:36,939 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/690a0175-7ecb-4792-9cda-3b98dd834518 "HTTP/1.1 200 OK"
2025-08-03 23:05:42,727 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:05:43,174 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/ef0370f4-efdc-4083-9efd-18204aa2ec2b/molecules "HTTP/1.1 200 OK"
2025-08-03 23:05:43,746 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:05:44,153 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/18169fd7-b32e-4bbf-b81d-5bf72ce06563 "HTTP/1.1 200 OK"
2025-08-03 23:05:44,565 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/18169fd7-b32e-4bbf-b81d-5bf72ce06563 "HTTP/1.1 200 OK"
2025-08-03 23:05:44,975 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/18169fd7-b32e-4bbf-b81d-5bf72ce06563 "HTTP/1.1 200 OK"
2025-08-03 23:05:54,568 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:05:55,370 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:05:55,524 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:05:55,929 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/18169fd7-b32e-4bbf-b81d-5bf72ce06563 "HTTP/1.1 200 OK"
2025-08-03 23:05:56,438 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/18169fd7-b32e-4bbf-b81d-5bf72ce06563 "HTTP/1.1 200 OK"
2025-08-03 23:07:20,768 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:07:24,383 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:07:24,391 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:07:33,109 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:07:33,109 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aniline
2025-08-03 23:07:33,657 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aniline' to SMILES: Nc1ccccc1
2025-08-03 23:07:37,580 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:07:37,634 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 66, in submit_fukui_workflow
    return rowan.submit_fukui_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=stjames.Molecule.from_smiles(initial_molecule),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:07:43,044 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:07:43,065 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 66, in submit_fukui_workflow
    return rowan.submit_fukui_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=stjames.Molecule.from_smiles(initial_molecule),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:07:51,201 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:07:52,106 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:08:02,155 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:08:02,582 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e0841d5a-eee4-4079-a492-9e2899865778 "HTTP/1.1 200 OK"
2025-08-03 23:08:03,043 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e0841d5a-eee4-4079-a492-9e2899865778 "HTTP/1.1 200 OK"
2025-08-03 23:08:03,428 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e0841d5a-eee4-4079-a492-9e2899865778 "HTTP/1.1 200 OK"
2025-08-03 23:10:00,723 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:10:01,770 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:10:01,777 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:10:12,101 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:10:12,102 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aniline
2025-08-03 23:10:12,674 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aniline' to SMILES: Nc1ccccc1
2025-08-03 23:10:18,252 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:12:52,348 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:12:53,995 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:12:54,002 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:13:02,151 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:13:02,152 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aniline
2025-08-03 23:13:02,692 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aniline' to SMILES: Nc1ccccc1
2025-08-03 23:13:09,256 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:13:09,318 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 66, in submit_fukui_workflow
    return rowan.submit_fukui_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=stjames.Molecule.from_smiles(initial_molecule),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:13:14,259 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:13:14,273 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 66, in submit_fukui_workflow
    return rowan.submit_fukui_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=stjames.Molecule.from_smiles(initial_molecule),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:13:23,416 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:13:24,388 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:13:31,371 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:13:31,389 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 66, in submit_fukui_workflow
    return rowan.submit_fukui_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=stjames.Molecule.from_smiles(initial_molecule),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:13:36,786 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:13:37,180 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/deca44a1-a17d-43ea-a926-878454f58ca0 "HTTP/1.1 200 OK"
2025-08-03 23:13:37,576 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/deca44a1-a17d-43ea-a926-878454f58ca0 "HTTP/1.1 200 OK"
2025-08-03 23:13:47,960 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/deca44a1-a17d-43ea-a926-878454f58ca0 "HTTP/1.1 200 OK"
2025-08-03 23:13:50,281 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:13:52,778 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:13:52,784 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:14:03,434 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:14:03,437 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aniline
2025-08-03 23:14:04,001 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aniline' to SMILES: Nc1ccccc1
2025-08-03 23:14:11,117 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:14:11,164 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 81, in submit_fukui_workflow
    result = rowan.submit_fukui_workflow(**kwargs)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:14:16,604 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:14:16,618 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 81, in submit_fukui_workflow
    result = rowan.submit_fukui_workflow(**kwargs)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:14:23,252 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:14:23,954 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:14:31,525 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:14:31,925 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13da97cf-14c6-4f50-a6af-da7343d5f572 "HTTP/1.1 200 OK"
2025-08-03 23:14:32,320 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13da97cf-14c6-4f50-a6af-da7343d5f572 "HTTP/1.1 200 OK"
2025-08-03 23:14:42,710 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13da97cf-14c6-4f50-a6af-da7343d5f572 "HTTP/1.1 200 OK"
2025-08-03 23:14:53,133 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13da97cf-14c6-4f50-a6af-da7343d5f572 "HTTP/1.1 200 OK"
2025-08-03 23:14:58,412 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:14:58,788 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13da97cf-14c6-4f50-a6af-da7343d5f572 "HTTP/1.1 200 OK"
2025-08-03 23:14:59,215 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13da97cf-14c6-4f50-a6af-da7343d5f572 "HTTP/1.1 200 OK"
2025-08-03 23:14:59,603 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13da97cf-14c6-4f50-a6af-da7343d5f572 "HTTP/1.1 200 OK"
2025-08-03 23:15:04,042 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:15:04,483 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13da97cf-14c6-4f50-a6af-da7343d5f572 "HTTP/1.1 200 OK"
2025-08-03 23:15:09,509 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:15:09,876 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/6457d320-0167-45a3-b7da-7325bcd71141/molecules "HTTP/1.1 200 OK"
2025-08-03 23:15:10,139 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:15:10,151 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 81, in submit_fukui_workflow
    result = rowan.submit_fukui_workflow(**kwargs)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:15:17,046 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:15:18,155 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:15:23,670 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:15:24,095 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/516ec61b-aac0-47c9-b92d-a5cfb03d0682 "HTTP/1.1 200 OK"
2025-08-03 23:15:24,491 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/516ec61b-aac0-47c9-b92d-a5cfb03d0682 "HTTP/1.1 200 OK"
2025-08-03 23:15:34,870 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/516ec61b-aac0-47c9-b92d-a5cfb03d0682 "HTTP/1.1 200 OK"
2025-08-03 23:15:45,294 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/516ec61b-aac0-47c9-b92d-a5cfb03d0682 "HTTP/1.1 200 OK"
2025-08-03 23:15:50,020 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:15:50,415 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/516ec61b-aac0-47c9-b92d-a5cfb03d0682 "HTTP/1.1 200 OK"
2025-08-03 23:15:50,896 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/516ec61b-aac0-47c9-b92d-a5cfb03d0682 "HTTP/1.1 200 OK"
2025-08-03 23:15:51,351 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/516ec61b-aac0-47c9-b92d-a5cfb03d0682 "HTTP/1.1 200 OK"
2025-08-03 23:15:55,541 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:15:55,928 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/516ec61b-aac0-47c9-b92d-a5cfb03d0682 "HTTP/1.1 200 OK"
2025-08-03 23:18:16,941 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:18:18,114 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:18:18,119 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:18:27,771 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:18:27,771 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aniline
2025-08-03 23:18:28,324 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aniline' to SMILES: Nc1ccccc1
2025-08-03 23:18:33,529 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:18:33,579 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 88, in submit_fukui_workflow
    result = rowan.submit_fukui_workflow(**kwargs)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:18:38,713 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:18:38,724 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 88, in submit_fukui_workflow
    result = rowan.submit_fukui_workflow(**kwargs)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:19:01,001 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:20:05,011 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:20:06,012 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:20:06,020 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:20:16,127 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:20:16,128 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aniline
2025-08-03 23:20:16,692 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aniline' to SMILES: Nc1ccccc1
2025-08-03 23:20:22,427 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:23:55,449 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:24:03,847 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:24:03,856 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:24:15,681 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:24:15,681 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aniline
2025-08-03 23:24:16,245 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aniline' to SMILES: Nc1ccccc1
2025-08-03 23:24:20,963 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:24:21,022 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 95, in submit_fukui_workflow
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 91, in submit_fukui_workflow
    result = rowan.submit_fukui_workflow(**kwargs)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:24:24,961 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:24:24,980 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 95, in submit_fukui_workflow
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 91, in submit_fukui_workflow
    result = rowan.submit_fukui_workflow(**kwargs)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:27:38,962 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:28:13,855 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:28:13,863 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:28:22,802 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:28:22,803 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aniline
2025-08-03 23:28:23,361 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aniline' to SMILES: Nc1ccccc1
2025-08-03 23:28:29,232 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:28:29,291 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 103, in submit_fukui_workflow
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 91, in submit_fukui_workflow
    result = rowan.submit_fukui_workflow(**kwargs)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:28:33,477 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:28:33,491 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 103, in submit_fukui_workflow
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 91, in submit_fukui_workflow
    result = rowan.submit_fukui_workflow(**kwargs)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-03 23:33:09,178 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:33:09,727 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:33:10,511 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:33:40,962 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:34:08,409 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:34:08,417 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:34:17,663 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:34:17,663 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aniline
2025-08-03 23:34:18,218 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aniline' to SMILES: Nc1ccccc1
2025-08-03 23:34:21,955 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:34:22,703 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:34:30,722 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:34:31,111 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/29b66101-732f-4c64-a634-6794aadaa35b "HTTP/1.1 200 OK"
2025-08-03 23:34:31,510 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/29b66101-732f-4c64-a634-6794aadaa35b "HTTP/1.1 200 OK"
2025-08-03 23:34:41,904 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/29b66101-732f-4c64-a634-6794aadaa35b "HTTP/1.1 200 OK"
2025-08-03 23:34:52,312 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/29b66101-732f-4c64-a634-6794aadaa35b "HTTP/1.1 200 OK"
2025-08-03 23:34:57,435 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:34:57,840 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/29b66101-732f-4c64-a634-6794aadaa35b "HTTP/1.1 200 OK"
2025-08-03 23:34:58,260 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/29b66101-732f-4c64-a634-6794aadaa35b "HTTP/1.1 200 OK"
2025-08-03 23:37:31,030 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:37:31,031 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-03 23:37:31,557 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-03 23:43:11,843 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:43:16,963 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:43:16,969 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:43:40,383 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:43:40,383 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-03 23:43:40,963 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-03 23:44:14,064 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:44:20,736 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:44:21,619 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:44:27,654 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:44:28,056 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bec3e137-43bc-442e-9595-3c5afd50c020 "HTTP/1.1 200 OK"
2025-08-03 23:44:28,435 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bec3e137-43bc-442e-9595-3c5afd50c020 "HTTP/1.1 200 OK"
2025-08-03 23:45:05,596 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:45:08,080 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:45:08,086 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:45:17,957 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:45:17,958 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-03 23:45:18,531 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-03 23:45:32,829 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:45:34,245 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-03 23:45:35,625 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-03 23:45:36,306 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:45:50,806 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:45:51,183 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/80598384-f014-49f2-8b24-130e9ab357e7 "HTTP/1.1 200 OK"
2025-08-03 23:45:51,532 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/80598384-f014-49f2-8b24-130e9ab357e7 "HTTP/1.1 200 OK"
2025-08-03 23:45:51,904 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/80598384-f014-49f2-8b24-130e9ab357e7 "HTTP/1.1 200 OK"
2025-08-03 23:47:16,781 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:47:19,467 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:47:19,503 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:47:36,134 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:47:36,137 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-03 23:47:36,730 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-03 23:47:46,724 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:47:47,238 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-03 23:47:48,834 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-03 23:47:49,490 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:48:02,153 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:48:02,575 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/270ff3ce-4e00-406a-9a92-12509d3329b2 "HTTP/1.1 200 OK"
2025-08-03 23:48:03,029 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/270ff3ce-4e00-406a-9a92-12509d3329b2 "HTTP/1.1 200 OK"
2025-08-03 23:48:03,501 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/270ff3ce-4e00-406a-9a92-12509d3329b2 "HTTP/1.1 200 OK"
2025-08-03 23:49:50,034 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:49:51,263 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:49:51,270 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:50:05,777 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:50:05,777 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-03 23:50:06,370 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-03 23:50:22,209 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:50:22,209 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': create_protein_from_pdb_id() missing 1 required positional argument: 'code'
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_docking_workflow.py", line 72, in submit_docking_workflow
    protein=rowan.create_protein_from_pdb_id(protein),
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
TypeError: create_protein_from_pdb_id() missing 1 required positional argument: 'code'
2025-08-03 23:50:33,698 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:50:33,699 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': create_protein_from_pdb_id() missing 1 required positional argument: 'code'
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_docking_workflow.py", line 72, in submit_docking_workflow
    protein=rowan.create_protein_from_pdb_id(protein),
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
TypeError: create_protein_from_pdb_id() missing 1 required positional argument: 'code'
2025-08-03 23:50:51,894 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:50:56,783 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:50:56,788 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:51:09,239 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:51:09,239 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-03 23:51:09,790 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-03 23:51:21,632 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:51:22,208 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:51:35,652 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:51:36,009 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/658b62fb-6a5f-4c14-8550-1e837864b28a "HTTP/1.1 200 OK"
2025-08-03 23:51:36,383 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/658b62fb-6a5f-4c14-8550-1e837864b28a "HTTP/1.1 200 OK"
2025-08-03 23:51:36,767 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/658b62fb-6a5f-4c14-8550-1e837864b28a "HTTP/1.1 200 OK"
2025-08-03 23:55:22,697 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HEW "HTTP/1.1 200 OK"
2025-08-03 23:55:23,714 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-03 23:55:38,635 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein?page=0&size=5 "HTTP/1.1 200 OK"
2025-08-03 23:55:39,067 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/02230edd-2074-44d8-9fc9-f3adbf756bc0 "HTTP/1.1 200 OK"
2025-08-03 23:55:57,642 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-03 23:56:00,087 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-03 23:56:00,659 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein?page=0&size=10 "HTTP/1.1 200 OK"
2025-08-03 23:56:01,100 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/ea41b54a-b044-4e7b-b640-005d3ec9bbb5 "HTTP/1.1 200 OK"
2025-08-03 23:56:02,035 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/ea41b54a-b044-4e7b-b640-005d3ec9bbb5 "HTTP/1.1 200 OK"
2025-08-03 23:56:03,011 - httpx - INFO - HTTP Request: DELETE https://api.rowansci.com/protein/ea41b54a-b044-4e7b-b640-005d3ec9bbb5 "HTTP/1.1 200 OK"
2025-08-03 23:56:03,398 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/ea41b54a-b044-4e7b-b640-005d3ec9bbb5 "HTTP/1.1 404 Not Found"
2025-08-03 23:56:05,456 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-03 23:56:07,984 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-03 23:56:07,989 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-03 23:56:20,988 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:56:20,988 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-03 23:56:21,572 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-03 23:56:21,897 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:56:22,426 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-03 23:56:23,907 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-03 23:56:36,697 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:56:37,387 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-03 23:56:49,895 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-03 23:56:50,272 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/de0ce140-b8ce-4022-a0cc-4b895da26723 "HTTP/1.1 200 OK"
2025-08-03 23:56:50,653 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/de0ce140-b8ce-4022-a0cc-4b895da26723 "HTTP/1.1 200 OK"
2025-08-03 23:56:51,033 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/de0ce140-b8ce-4022-a0cc-4b895da26723 "HTTP/1.1 200 OK"
2025-08-04 00:02:02,745 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 00:02:03,593 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 00:02:04,448 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 00:02:24,785 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-04 00:02:55,902 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-04 00:02:55,912 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-04 00:03:21,029 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 00:03:21,866 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 18:53:58,982 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 18:54:09,540 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-04 18:54:20,575 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-04 18:54:20,581 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-04 18:54:48,506 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 18:54:49,354 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 18:56:49,413 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 18:56:49,414 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-04 18:56:50,104 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-04 18:56:50,232 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 18:56:52,848 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-04 18:56:54,748 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-04 18:57:06,621 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 18:57:07,220 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 19:04:39,510 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 19:04:40,160 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 19:04:58,320 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 19:04:58,743 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:05:04,216 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:05:09,646 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:05:15,037 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:05:20,429 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:05:25,827 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:05:31,231 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:05:36,618 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:05:42,022 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:05:47,467 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:05:52,870 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:05:58,277 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:06:03,682 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:06:09,089 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:06:14,514 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:06:19,943 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:06:25,371 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:06:30,842 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:06:36,248 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:06:41,672 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:06:47,070 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:06:52,475 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7b717e5f-7e3f-4779-828c-770c8845f353 "HTTP/1.1 200 OK"
2025-08-04 19:07:12,614 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/fd535fe7-02fa-401b-9ca1-cc3da892abd9 "HTTP/1.1 200 OK"
2025-08-04 19:25:04,947 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/a12378ae-52c2-485f-b2e2-2a9db687f06c "HTTP/1.1 200 OK"
2025-08-04 19:25:07,517 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein/sanitize/a12378ae-52c2-485f-b2e2-2a9db687f06c "HTTP/1.1 200 OK"
2025-08-04 19:25:22,634 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 19:36:03,312 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 19:36:19,006 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 19:48:38,832 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-04 19:48:41,957 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-04 19:48:41,963 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-04 19:48:52,982 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 19:48:52,983 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-04 19:48:53,933 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-04 19:48:54,063 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 19:48:54,640 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-04 19:48:56,603 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-04 19:49:03,021 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 19:49:03,448 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/64f35c8b-da74-426b-b13a-1ec3d7ed9837 "HTTP/1.1 200 OK"
2025-08-04 19:49:04,558 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein/sanitize/64f35c8b-da74-426b-b13a-1ec3d7ed9837 "HTTP/1.1 200 OK"
2025-08-04 19:49:14,222 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 19:49:14,834 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 19:50:13,220 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 19:50:13,646 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:50:14,068 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:50:24,474 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:50:34,864 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:50:45,271 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:50:55,675 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:51:06,106 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:51:16,811 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:51:27,249 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:51:37,686 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:51:48,080 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:51:58,507 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:52:08,928 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:52:19,346 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:52:29,752 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:52:40,159 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:52:50,593 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:53:01,040 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:53:11,466 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:53:21,967 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:53:32,684 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:53:43,703 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:53:49,366 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 19:53:49,790 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:53:50,975 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:53:52,103 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:53:56,852 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 19:53:57,285 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e95110b8-527f-4ed1-87ef-b27093fbe77d "HTTP/1.1 200 OK"
2025-08-04 19:58:00,559 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 19:58:00,561 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: hydrogen peroxide
2025-08-04 19:58:01,105 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'hydrogen peroxide' to SMILES: OO
2025-08-04 19:59:01,970 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 19:59:01,971 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: hydrogen peroxide
2025-08-04 19:59:02,565 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'hydrogen peroxide' to SMILES: OO
2025-08-04 20:01:31,461 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 20:01:32,093 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 20:04:17,168 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-04 20:04:23,731 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-04 20:04:23,737 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-04 20:04:31,679 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 20:04:31,679 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: hydrogen peroxide
2025-08-04 20:04:32,218 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'hydrogen peroxide' to SMILES: OO
2025-08-04 20:04:38,513 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 20:04:39,278 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 20:04:40,603 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 20:04:41,132 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 20:04:49,355 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 20:04:49,730 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:04:50,109 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:04:55,508 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:05:00,909 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:05:06,585 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:05:11,974 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:05:17,498 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:05:23,008 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:05:28,528 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:05:34,033 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:05:39,560 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:05:45,112 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:05:50,648 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:05:56,184 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:06:01,761 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:06:07,312 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:06:12,861 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:06:18,351 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:06:23,908 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:06:29,433 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:06:34,971 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:06:40,522 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:06:46,053 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:06:51,605 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:06:57,151 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:07:02,704 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:07:08,238 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:07:13,800 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:07:19,360 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:07:24,876 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:07:30,408 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:07:35,958 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:07:36,259 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 20:07:36,646 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0827329-e0ba-4363-bfec-eca0a731f9bc "HTTP/1.1 200 OK"
2025-08-04 20:07:37,016 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0827329-e0ba-4363-bfec-eca0a731f9bc "HTTP/1.1 200 OK"
2025-08-04 20:07:42,435 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0827329-e0ba-4363-bfec-eca0a731f9bc "HTTP/1.1 200 OK"
2025-08-04 20:07:47,859 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0827329-e0ba-4363-bfec-eca0a731f9bc "HTTP/1.1 200 OK"
2025-08-04 20:07:53,301 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0827329-e0ba-4363-bfec-eca0a731f9bc "HTTP/1.1 200 OK"
2025-08-04 20:08:00,522 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 20:08:00,976 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e8ec9f50-c05a-47ab-8971-024082672c93 "HTTP/1.1 200 OK"
2025-08-04 20:08:08,596 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 20:08:09,028 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/9230ed66-64e0-4e31-ab22-af0b74a3eac7/molecules "HTTP/1.1 200 OK"
2025-08-04 20:08:09,723 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 20:08:10,146 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0827329-e0ba-4363-bfec-eca0a731f9bc "HTTP/1.1 200 OK"
2025-08-04 20:08:10,585 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0827329-e0ba-4363-bfec-eca0a731f9bc "HTTP/1.1 200 OK"
2025-08-04 20:08:11,026 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0827329-e0ba-4363-bfec-eca0a731f9bc "HTTP/1.1 200 OK"
2025-08-04 20:08:15,441 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-04 20:08:15,892 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a0827329-e0ba-4363-bfec-eca0a731f9bc "HTTP/1.1 200 OK"
2025-08-04 20:21:19,802 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-04 20:21:20,498 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-05 20:12:46,593 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:12:47,371 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-05 20:12:51,905 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:12:52,286 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/db952c8a-a009-4ef2-9c39-c339babd0838 "HTTP/1.1 200 OK"
2025-08-05 20:12:52,654 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/db952c8a-a009-4ef2-9c39-c339babd0838 "HTTP/1.1 200 OK"
2025-08-05 20:13:03,131 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/db952c8a-a009-4ef2-9c39-c339babd0838 "HTTP/1.1 200 OK"
2025-08-05 20:13:06,178 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:13:06,578 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/db952c8a-a009-4ef2-9c39-c339babd0838 "HTTP/1.1 200 OK"
2025-08-05 20:13:07,033 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/db952c8a-a009-4ef2-9c39-c339babd0838 "HTTP/1.1 200 OK"
2025-08-05 20:13:07,441 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/db952c8a-a009-4ef2-9c39-c339babd0838 "HTTP/1.1 200 OK"
2025-08-05 20:13:11,278 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:13:11,739 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/db952c8a-a009-4ef2-9c39-c339babd0838 "HTTP/1.1 200 OK"
2025-08-05 20:13:12,250 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/db952c8a-a009-4ef2-9c39-c339babd0838 "HTTP/1.1 200 OK"
2025-08-05 20:13:18,451 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:13:19,055 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-05 20:13:22,845 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:13:23,282 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/deda082c-4e38-40b5-9926-f29432a8ca35 "HTTP/1.1 200 OK"
2025-08-05 20:13:23,685 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/deda082c-4e38-40b5-9926-f29432a8ca35 "HTTP/1.1 200 OK"
2025-08-05 20:13:34,138 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/deda082c-4e38-40b5-9926-f29432a8ca35 "HTTP/1.1 200 OK"
2025-08-05 20:13:44,536 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/deda082c-4e38-40b5-9926-f29432a8ca35 "HTTP/1.1 200 OK"
2025-08-05 20:13:54,952 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/deda082c-4e38-40b5-9926-f29432a8ca35 "HTTP/1.1 200 OK"
2025-08-05 20:14:05,395 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/deda082c-4e38-40b5-9926-f29432a8ca35 "HTTP/1.1 200 OK"
2025-08-05 20:14:15,814 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/deda082c-4e38-40b5-9926-f29432a8ca35 "HTTP/1.1 200 OK"
2025-08-05 20:14:19,429 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:14:19,819 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/deda082c-4e38-40b5-9926-f29432a8ca35 "HTTP/1.1 200 OK"
2025-08-05 20:14:20,214 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/deda082c-4e38-40b5-9926-f29432a8ca35 "HTTP/1.1 200 OK"
2025-08-05 20:14:20,624 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/deda082c-4e38-40b5-9926-f29432a8ca35 "HTTP/1.1 200 OK"
2025-08-05 20:14:24,402 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:14:24,799 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/deda082c-4e38-40b5-9926-f29432a8ca35 "HTTP/1.1 200 OK"
2025-08-05 20:14:25,188 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/deda082c-4e38-40b5-9926-f29432a8ca35 "HTTP/1.1 200 OK"
2025-08-05 20:14:30,010 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:14:30,414 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/ce30b898-0bcf-4e2f-9246-9a338b19b386/molecules "HTTP/1.1 200 OK"
2025-08-05 20:14:31,142 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:14:31,547 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/96652bd9-3aba-4284-892a-201f152f5973/molecules "HTTP/1.1 200 OK"
2025-08-05 20:14:32,237 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:14:32,629 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/f4e8394a-3050-4c6d-8dac-569e2a9f922d/molecules "HTTP/1.1 200 OK"
2025-08-05 20:14:36,773 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:14:37,165 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/9b718769-4a5e-492b-850a-6789cff3e7e1/molecules "HTTP/1.1 200 OK"
2025-08-05 20:14:38,077 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:14:38,490 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/1e60e991-9eb3-4435-a46a-d5cec573204c/molecules "HTTP/1.1 200 OK"
2025-08-05 20:14:39,268 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:14:39,662 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/cb3f43a4-88f0-4ba8-b2fd-cc2e3d51ad4f/molecules "HTTP/1.1 200 OK"
2025-08-05 20:49:59,127 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-05 20:50:12,389 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-05 20:50:12,397 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-05 20:50:30,388 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:50:30,389 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: psilocybin
2025-08-05 20:50:31,360 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'psilocybin' to SMILES: CN(C)CCc1c[nH]c2cccc(O[P](O)(O)=O)c12
2025-08-05 20:50:31,360 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: serotonin
2025-08-05 20:50:32,312 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'serotonin' to SMILES: NCCc1c[nH]c2ccc(O)cc12
2025-08-05 20:50:37,650 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:50:38,393 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-05 20:50:46,416 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:50:47,076 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-05 20:50:52,706 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:50:54,523 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=6A93 "HTTP/1.1 200 OK"
2025-08-05 20:50:59,042 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-05 20:51:03,946 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:51:04,570 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/3b0f69aa-23d4-45bf-8190-fe52c07500a0 "HTTP/1.1 200 OK"
2025-08-05 20:51:05,818 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein/sanitize/3b0f69aa-23d4-45bf-8190-fe52c07500a0 "HTTP/1.1 200 OK"
2025-08-05 20:51:05,954 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:51:06,393 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:51:06,897 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:51:07,303 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:51:07,447 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:51:07,850 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/be98b9ce-8ede-4606-a8e7-9e9f4f5f5b39 "HTTP/1.1 200 OK"
2025-08-05 20:51:08,242 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/be98b9ce-8ede-4606-a8e7-9e9f4f5f5b39 "HTTP/1.1 200 OK"
2025-08-05 20:51:08,627 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/be98b9ce-8ede-4606-a8e7-9e9f4f5f5b39 "HTTP/1.1 200 OK"
2025-08-05 20:51:16,527 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:51:16,930 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:51:17,362 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:51:27,826 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:51:38,237 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:51:48,632 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:51:59,024 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:52:09,442 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:52:19,853 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:52:30,269 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:52:40,712 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:52:51,112 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:53:01,590 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:53:12,021 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:53:22,462 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:53:32,870 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:53:43,242 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:53:53,642 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:54:04,032 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:54:14,443 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:54:24,861 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:54:35,279 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:54:41,415 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:54:41,848 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/be98b9ce-8ede-4606-a8e7-9e9f4f5f5b39 "HTTP/1.1 200 OK"
2025-08-05 20:54:42,322 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/be98b9ce-8ede-4606-a8e7-9e9f4f5f5b39 "HTTP/1.1 200 OK"
2025-08-05 20:54:42,724 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/be98b9ce-8ede-4606-a8e7-9e9f4f5f5b39 "HTTP/1.1 200 OK"
2025-08-05 20:54:49,128 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:54:49,788 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-05 20:54:59,477 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:55:00,017 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-05 20:55:04,713 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:55:05,127 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:55:05,503 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:55:05,901 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:55:06,140 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:55:06,520 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/be98b9ce-8ede-4606-a8e7-9e9f4f5f5b39 "HTTP/1.1 200 OK"
2025-08-05 20:55:06,909 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/be98b9ce-8ede-4606-a8e7-9e9f4f5f5b39 "HTTP/1.1 200 OK"
2025-08-05 20:55:07,284 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/be98b9ce-8ede-4606-a8e7-9e9f4f5f5b39 "HTTP/1.1 200 OK"
2025-08-05 20:55:07,400 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:55:07,762 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:55:08,140 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:55:08,526 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:55:12,587 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:55:12,953 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0664a949-9ff4-4d4d-9b6f-b2c47a65570f "HTTP/1.1 200 OK"
2025-08-05 20:55:20,169 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:55:20,553 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/be98b9ce-8ede-4606-a8e7-9e9f4f5f5b39 "HTTP/1.1 200 OK"
2025-08-05 20:55:20,925 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/be98b9ce-8ede-4606-a8e7-9e9f4f5f5b39 "HTTP/1.1 200 OK"
2025-08-05 20:55:27,253 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:55:27,843 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-05 20:55:32,256 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:55:32,684 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:55:33,100 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:55:33,522 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:55:33,728 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:55:34,150 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/4d069464-1e6e-49d0-bdeb-a7a5a352b70f "HTTP/1.1 200 OK"
2025-08-05 20:55:34,654 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/4d069464-1e6e-49d0-bdeb-a7a5a352b70f "HTTP/1.1 200 OK"
2025-08-05 20:55:35,094 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/4d069464-1e6e-49d0-bdeb-a7a5a352b70f "HTTP/1.1 200 OK"
2025-08-05 20:55:35,256 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:55:35,660 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e20572d9-ee2f-47aa-b097-67ca2b2de5f1 "HTTP/1.1 200 OK"
2025-08-05 20:55:36,095 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e20572d9-ee2f-47aa-b097-67ca2b2de5f1 "HTTP/1.1 200 OK"
2025-08-05 20:55:36,530 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e20572d9-ee2f-47aa-b097-67ca2b2de5f1 "HTTP/1.1 200 OK"
2025-08-05 20:55:40,385 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-05 20:55:40,824 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:55:41,276 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:56:01,661 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:56:22,283 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:56:42,907 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:57:03,583 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:57:24,264 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:57:44,922 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:58:05,588 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:58:26,187 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:58:46,786 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:59:07,433 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:59:28,085 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 20:59:48,708 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:00:09,428 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:00:30,102 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:00:50,732 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:01:11,375 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:01:31,998 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:01:52,636 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:02:13,290 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:02:33,934 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:02:54,579 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:03:15,207 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:03:35,825 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:03:56,495 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:04:17,145 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:04:37,778 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:04:58,421 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:05:19,076 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:05:39,762 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:06:00,463 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:06:21,142 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:06:41,814 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:07:02,544 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-05 21:07:23,227 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f94ccf2b-827e-4fb1-8867-dd05ffd9a9c8 "HTTP/1.1 200 OK"
2025-08-06 21:25:15,859 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-06 21:26:26,360 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-06 21:26:26,370 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-06 21:26:29,179 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:26:29,181 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: ibuprofen
2025-08-06 21:26:30,123 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'ibuprofen' to SMILES: CC(C)Cc1ccc(cc1)C(C)C(O)=O
2025-08-06 21:26:35,973 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:26:36,703 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-06 21:26:43,506 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:26:43,902 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3e109e98-de7d-44a2-b320-84d91a8056fd "HTTP/1.1 200 OK"
2025-08-06 21:26:44,308 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3e109e98-de7d-44a2-b320-84d91a8056fd "HTTP/1.1 200 OK"
2025-08-06 21:26:54,734 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3e109e98-de7d-44a2-b320-84d91a8056fd "HTTP/1.1 200 OK"
2025-08-06 21:27:05,160 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3e109e98-de7d-44a2-b320-84d91a8056fd "HTTP/1.1 200 OK"
2025-08-06 21:27:10,907 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:27:11,572 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-06 21:27:12,377 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:27:13,013 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-06 21:27:18,199 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:27:18,598 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3e109e98-de7d-44a2-b320-84d91a8056fd "HTTP/1.1 200 OK"
2025-08-06 21:27:19,005 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3e109e98-de7d-44a2-b320-84d91a8056fd "HTTP/1.1 200 OK"
2025-08-06 21:27:19,456 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3e109e98-de7d-44a2-b320-84d91a8056fd "HTTP/1.1 200 OK"
2025-08-06 21:27:25,068 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:27:25,434 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3e109e98-de7d-44a2-b320-84d91a8056fd "HTTP/1.1 200 OK"
2025-08-06 21:27:25,840 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3e109e98-de7d-44a2-b320-84d91a8056fd "HTTP/1.1 200 OK"
2025-08-06 21:27:30,556 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:27:31,230 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-06 21:27:36,053 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:27:36,458 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/acb99522-5060-40af-a43b-2f476a2f5426 "HTTP/1.1 200 OK"
2025-08-06 21:27:36,878 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/acb99522-5060-40af-a43b-2f476a2f5426 "HTTP/1.1 200 OK"
2025-08-06 21:27:47,263 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/acb99522-5060-40af-a43b-2f476a2f5426 "HTTP/1.1 200 OK"
2025-08-06 21:27:57,693 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/acb99522-5060-40af-a43b-2f476a2f5426 "HTTP/1.1 200 OK"
2025-08-06 21:27:57,832 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:27:58,217 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/475fe9b8-cdb4-4bdf-99fa-82bb6c4f8c29 "HTTP/1.1 200 OK"
2025-08-06 21:27:58,726 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/475fe9b8-cdb4-4bdf-99fa-82bb6c4f8c29 "HTTP/1.1 200 OK"
2025-08-06 21:27:59,252 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/475fe9b8-cdb4-4bdf-99fa-82bb6c4f8c29 "HTTP/1.1 200 OK"
2025-08-06 21:27:59,511 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:27:59,911 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:28:00,375 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:28:00,791 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:28:05,769 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:28:06,167 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/475fe9b8-cdb4-4bdf-99fa-82bb6c4f8c29 "HTTP/1.1 200 OK"
2025-08-06 21:28:06,674 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/475fe9b8-cdb4-4bdf-99fa-82bb6c4f8c29 "HTTP/1.1 200 OK"
2025-08-06 21:28:07,807 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:28:08,472 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-06 21:28:16,820 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:28:17,218 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/acb99522-5060-40af-a43b-2f476a2f5426 "HTTP/1.1 200 OK"
2025-08-06 21:28:17,639 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/acb99522-5060-40af-a43b-2f476a2f5426 "HTTP/1.1 200 OK"
2025-08-06 21:28:18,023 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/acb99522-5060-40af-a43b-2f476a2f5426 "HTTP/1.1 200 OK"
2025-08-06 21:28:18,174 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:28:18,556 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:28:18,966 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:28:19,394 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:28:19,539 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:28:19,947 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e6c8eee1-b651-49ed-bd78-0b6d29b6852e "HTTP/1.1 200 OK"
2025-08-06 21:28:20,405 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e6c8eee1-b651-49ed-bd78-0b6d29b6852e "HTTP/1.1 200 OK"
2025-08-06 21:28:20,856 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e6c8eee1-b651-49ed-bd78-0b6d29b6852e "HTTP/1.1 200 OK"
2025-08-06 21:28:25,067 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:28:25,471 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/acb99522-5060-40af-a43b-2f476a2f5426 "HTTP/1.1 200 OK"
2025-08-06 21:28:25,867 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/acb99522-5060-40af-a43b-2f476a2f5426 "HTTP/1.1 200 OK"
2025-08-06 21:28:32,012 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:28:32,408 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:28:32,817 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:28:43,202 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:28:53,607 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:29:04,012 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:29:14,484 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:29:24,975 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:29:35,454 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:29:45,902 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:29:56,430 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:30:06,847 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:30:17,272 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:30:27,683 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:30:38,120 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:30:48,566 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:30:58,962 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:31:09,388 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:31:19,834 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:31:30,281 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:31:40,711 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:31:51,140 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:32:01,560 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:32:06,815 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:32:07,213 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e6c8eee1-b651-49ed-bd78-0b6d29b6852e "HTTP/1.1 200 OK"
2025-08-06 21:32:07,615 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e6c8eee1-b651-49ed-bd78-0b6d29b6852e "HTTP/1.1 200 OK"
2025-08-06 21:32:07,994 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e6c8eee1-b651-49ed-bd78-0b6d29b6852e "HTTP/1.1 200 OK"
2025-08-06 21:32:11,752 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:32:12,152 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e6c8eee1-b651-49ed-bd78-0b6d29b6852e "HTTP/1.1 200 OK"
2025-08-06 21:32:12,565 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e6c8eee1-b651-49ed-bd78-0b6d29b6852e "HTTP/1.1 200 OK"
2025-08-06 21:32:19,714 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:32:20,385 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-06 21:32:20,877 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:32:22,257 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:32:24,393 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:32:24,796 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:32:28,555 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:32:28,949 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:32:29,337 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6cdcbd9c-b767-4ff0-ba52-a81eca8cfc18 "HTTP/1.1 200 OK"
2025-08-06 21:32:37,485 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:32:38,074 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-06 21:32:38,969 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-06 21:32:39,358 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0b952e58-2030-49e6-94d2-fd2f3c4b96fc "HTTP/1.1 200 OK"
2025-08-06 21:32:39,750 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0b952e58-2030-49e6-94d2-fd2f3c4b96fc "HTTP/1.1 200 OK"
2025-08-06 21:32:50,156 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0b952e58-2030-49e6-94d2-fd2f3c4b96fc "HTTP/1.1 200 OK"
2025-08-06 21:33:00,589 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0b952e58-2030-49e6-94d2-fd2f3c4b96fc "HTTP/1.1 200 OK"
2025-08-07 21:19:30,439 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-07 21:19:46,146 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-07 21:19:46,154 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-07 21:20:00,462 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:20:00,464 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: ibuprofen
2025-08-07 21:20:01,477 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'ibuprofen' to SMILES: CC(C)Cc1ccc(cc1)C(C)C(O)=O
2025-08-07 21:20:07,227 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:20:08,089 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-07 21:20:14,414 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:20:14,814 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/943c10f1-d70b-44fe-bd9a-261e6e5e1b2f "HTTP/1.1 200 OK"
2025-08-07 21:20:15,174 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/943c10f1-d70b-44fe-bd9a-261e6e5e1b2f "HTTP/1.1 200 OK"
2025-08-07 21:20:25,551 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/943c10f1-d70b-44fe-bd9a-261e6e5e1b2f "HTTP/1.1 200 OK"
2025-08-07 21:20:36,012 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/943c10f1-d70b-44fe-bd9a-261e6e5e1b2f "HTTP/1.1 200 OK"
2025-08-07 21:20:40,816 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:20:41,194 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/943c10f1-d70b-44fe-bd9a-261e6e5e1b2f "HTTP/1.1 200 OK"
2025-08-07 21:20:41,583 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/943c10f1-d70b-44fe-bd9a-261e6e5e1b2f "HTTP/1.1 200 OK"
2025-08-07 21:20:42,003 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/943c10f1-d70b-44fe-bd9a-261e6e5e1b2f "HTTP/1.1 200 OK"
2025-08-07 21:20:45,612 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:20:45,991 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/943c10f1-d70b-44fe-bd9a-261e6e5e1b2f "HTTP/1.1 200 OK"
2025-08-07 21:20:46,368 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/943c10f1-d70b-44fe-bd9a-261e6e5e1b2f "HTTP/1.1 200 OK"
2025-08-07 21:20:51,476 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:20:52,182 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-07 21:20:56,897 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:20:57,304 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1133d42b-7f70-4be4-ad83-511c2586b440 "HTTP/1.1 200 OK"
2025-08-07 21:20:57,686 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1133d42b-7f70-4be4-ad83-511c2586b440 "HTTP/1.1 200 OK"
2025-08-07 21:21:08,061 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1133d42b-7f70-4be4-ad83-511c2586b440 "HTTP/1.1 200 OK"
2025-08-07 21:21:18,467 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1133d42b-7f70-4be4-ad83-511c2586b440 "HTTP/1.1 200 OK"
2025-08-07 21:21:22,740 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:21:23,127 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1133d42b-7f70-4be4-ad83-511c2586b440 "HTTP/1.1 200 OK"
2025-08-07 21:21:23,510 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1133d42b-7f70-4be4-ad83-511c2586b440 "HTTP/1.1 200 OK"
2025-08-07 21:21:23,880 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1133d42b-7f70-4be4-ad83-511c2586b440 "HTTP/1.1 200 OK"
2025-08-07 21:21:28,835 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:21:29,204 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1133d42b-7f70-4be4-ad83-511c2586b440 "HTTP/1.1 200 OK"
2025-08-07 21:21:29,560 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1133d42b-7f70-4be4-ad83-511c2586b440 "HTTP/1.1 200 OK"
2025-08-07 21:21:38,364 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:21:39,065 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-07 21:21:47,279 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:21:47,635 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e49b94a6-1827-4078-b085-2d62e19ebb72 "HTTP/1.1 200 OK"
2025-08-07 21:21:48,011 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e49b94a6-1827-4078-b085-2d62e19ebb72 "HTTP/1.1 200 OK"
2025-08-07 21:21:58,405 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e49b94a6-1827-4078-b085-2d62e19ebb72 "HTTP/1.1 200 OK"
2025-08-07 21:22:08,793 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e49b94a6-1827-4078-b085-2d62e19ebb72 "HTTP/1.1 200 OK"
2025-08-07 21:22:19,167 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e49b94a6-1827-4078-b085-2d62e19ebb72 "HTTP/1.1 200 OK"
2025-08-07 21:22:19,438 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:22:20,018 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-07 21:22:20,166 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:22:20,799 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-07 21:22:27,016 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:22:27,402 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e49b94a6-1827-4078-b085-2d62e19ebb72 "HTTP/1.1 200 OK"
2025-08-07 21:22:27,900 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e49b94a6-1827-4078-b085-2d62e19ebb72 "HTTP/1.1 200 OK"
2025-08-07 21:22:28,384 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e49b94a6-1827-4078-b085-2d62e19ebb72 "HTTP/1.1 200 OK"
2025-08-07 21:22:28,647 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:22:29,012 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c7be0bb8-15c5-48fb-9bfd-7f553067243b "HTTP/1.1 200 OK"
2025-08-07 21:22:29,369 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c7be0bb8-15c5-48fb-9bfd-7f553067243b "HTTP/1.1 200 OK"
2025-08-07 21:22:29,743 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c7be0bb8-15c5-48fb-9bfd-7f553067243b "HTTP/1.1 200 OK"
2025-08-07 21:22:29,889 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:22:30,290 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cbd89cc6-a19f-44a9-90ed-6130b3be411f "HTTP/1.1 200 OK"
2025-08-07 21:22:30,655 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cbd89cc6-a19f-44a9-90ed-6130b3be411f "HTTP/1.1 200 OK"
2025-08-07 21:22:31,052 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cbd89cc6-a19f-44a9-90ed-6130b3be411f "HTTP/1.1 200 OK"
2025-08-07 21:22:36,559 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:22:36,944 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e49b94a6-1827-4078-b085-2d62e19ebb72 "HTTP/1.1 200 OK"
2025-08-07 21:22:37,427 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e49b94a6-1827-4078-b085-2d62e19ebb72 "HTTP/1.1 200 OK"
2025-08-07 21:22:37,693 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:22:38,042 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c7be0bb8-15c5-48fb-9bfd-7f553067243b "HTTP/1.1 200 OK"
2025-08-07 21:22:38,409 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c7be0bb8-15c5-48fb-9bfd-7f553067243b "HTTP/1.1 200 OK"
2025-08-07 21:22:48,781 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c7be0bb8-15c5-48fb-9bfd-7f553067243b "HTTP/1.1 200 OK"
2025-08-07 21:22:59,177 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c7be0bb8-15c5-48fb-9bfd-7f553067243b "HTTP/1.1 200 OK"
2025-08-07 21:23:09,570 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c7be0bb8-15c5-48fb-9bfd-7f553067243b "HTTP/1.1 200 OK"
2025-08-07 21:23:09,832 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:23:10,194 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cbd89cc6-a19f-44a9-90ed-6130b3be411f "HTTP/1.1 200 OK"
2025-08-07 21:23:10,609 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cbd89cc6-a19f-44a9-90ed-6130b3be411f "HTTP/1.1 200 OK"
2025-08-07 21:23:17,889 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:23:18,496 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-07 21:23:19,127 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:23:19,497 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c7be0bb8-15c5-48fb-9bfd-7f553067243b "HTTP/1.1 200 OK"
2025-08-07 21:23:19,989 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c7be0bb8-15c5-48fb-9bfd-7f553067243b "HTTP/1.1 200 OK"
2025-08-07 21:23:20,480 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c7be0bb8-15c5-48fb-9bfd-7f553067243b "HTTP/1.1 200 OK"
2025-08-07 21:23:26,537 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:23:26,910 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c7be0bb8-15c5-48fb-9bfd-7f553067243b "HTTP/1.1 200 OK"
2025-08-07 21:23:27,481 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c7be0bb8-15c5-48fb-9bfd-7f553067243b "HTTP/1.1 200 OK"
2025-08-07 21:23:28,062 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:23:28,425 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3a95be4f-70e3-467f-b9e3-556e7886cc0b "HTTP/1.1 200 OK"
2025-08-07 21:23:28,785 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3a95be4f-70e3-467f-b9e3-556e7886cc0b "HTTP/1.1 200 OK"
2025-08-07 21:23:39,170 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3a95be4f-70e3-467f-b9e3-556e7886cc0b "HTTP/1.1 200 OK"
2025-08-07 21:23:45,022 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:23:45,378 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3a95be4f-70e3-467f-b9e3-556e7886cc0b "HTTP/1.1 200 OK"
2025-08-07 21:23:45,749 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3a95be4f-70e3-467f-b9e3-556e7886cc0b "HTTP/1.1 200 OK"
2025-08-07 21:23:46,112 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3a95be4f-70e3-467f-b9e3-556e7886cc0b "HTTP/1.1 200 OK"
2025-08-07 21:23:51,525 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:23:51,896 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3a95be4f-70e3-467f-b9e3-556e7886cc0b "HTTP/1.1 200 OK"
2025-08-07 21:23:52,252 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3a95be4f-70e3-467f-b9e3-556e7886cc0b "HTTP/1.1 200 OK"
2025-08-07 21:23:57,838 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:23:58,490 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-07 21:24:04,183 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:24:04,813 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-07 21:24:09,537 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:24:09,906 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:24:10,267 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:24:20,645 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:24:31,031 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:24:41,456 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:24:51,833 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:25:02,287 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:25:12,659 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:25:23,019 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:25:33,450 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:25:43,846 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:25:54,262 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:26:04,661 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:26:15,042 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:26:25,431 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:26:35,823 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:26:46,206 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:26:56,579 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:27:07,018 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:27:12,325 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:27:12,733 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:27:13,146 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:27:13,588 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:27:19,961 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:27:20,374 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:27:20,788 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1277a441-2aa9-499a-9856-e1ab090d05ad "HTTP/1.1 200 OK"
2025-08-07 21:47:36,473 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:47:36,475 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: ibuprofen
2025-08-07 21:47:37,008 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'ibuprofen' to SMILES: CC(C)Cc1ccc(cc1)C(C)C(O)=O
2025-08-07 21:47:43,656 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:47:44,348 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-07 21:47:55,557 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:47:55,917 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8cdf633e-cf0c-4b7b-b5e8-41bf945b8872 "HTTP/1.1 200 OK"
2025-08-07 21:47:56,336 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8cdf633e-cf0c-4b7b-b5e8-41bf945b8872 "HTTP/1.1 200 OK"
2025-08-07 21:48:01,744 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8cdf633e-cf0c-4b7b-b5e8-41bf945b8872 "HTTP/1.1 200 OK"
2025-08-07 21:48:07,755 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:48:08,114 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8cdf633e-cf0c-4b7b-b5e8-41bf945b8872 "HTTP/1.1 200 OK"
2025-08-07 21:48:14,833 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:48:15,782 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-07 21:48:21,607 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:48:21,976 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7e1d7b31-0ba1-4211-b0c0-fff7a45d4d2b "HTTP/1.1 200 OK"
2025-08-07 21:48:22,383 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7e1d7b31-0ba1-4211-b0c0-fff7a45d4d2b "HTTP/1.1 200 OK"
2025-08-07 21:48:27,786 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7e1d7b31-0ba1-4211-b0c0-fff7a45d4d2b "HTTP/1.1 200 OK"
2025-08-07 21:48:33,164 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7e1d7b31-0ba1-4211-b0c0-fff7a45d4d2b "HTTP/1.1 200 OK"
2025-08-07 21:48:38,947 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:48:39,308 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7e1d7b31-0ba1-4211-b0c0-fff7a45d4d2b "HTTP/1.1 200 OK"
2025-08-07 21:48:39,697 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7e1d7b31-0ba1-4211-b0c0-fff7a45d4d2b "HTTP/1.1 200 OK"
2025-08-07 21:48:48,845 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:48:49,476 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-07 21:48:55,768 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:48:56,133 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c6a4f376-cb73-4408-84a6-c7c621e23ae8 "HTTP/1.1 200 OK"
2025-08-07 21:48:56,537 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c6a4f376-cb73-4408-84a6-c7c621e23ae8 "HTTP/1.1 200 OK"
2025-08-07 21:49:02,001 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c6a4f376-cb73-4408-84a6-c7c621e23ae8 "HTTP/1.1 200 OK"
2025-08-07 21:49:07,394 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c6a4f376-cb73-4408-84a6-c7c621e23ae8 "HTTP/1.1 200 OK"
2025-08-07 21:49:12,810 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c6a4f376-cb73-4408-84a6-c7c621e23ae8 "HTTP/1.1 200 OK"
2025-08-07 21:49:18,201 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c6a4f376-cb73-4408-84a6-c7c621e23ae8 "HTTP/1.1 200 OK"
2025-08-07 21:49:23,597 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c6a4f376-cb73-4408-84a6-c7c621e23ae8 "HTTP/1.1 200 OK"
2025-08-07 21:49:29,036 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c6a4f376-cb73-4408-84a6-c7c621e23ae8 "HTTP/1.1 200 OK"
2025-08-07 21:49:34,529 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c6a4f376-cb73-4408-84a6-c7c621e23ae8 "HTTP/1.1 200 OK"
2025-08-07 21:49:40,236 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:49:40,706 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c6a4f376-cb73-4408-84a6-c7c621e23ae8 "HTTP/1.1 200 OK"
2025-08-07 21:49:41,292 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c6a4f376-cb73-4408-84a6-c7c621e23ae8 "HTTP/1.1 200 OK"
2025-08-07 21:49:47,541 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:49:48,660 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/4df29cdc-3e6f-43ae-ab6b-8b737cb01459/molecules "HTTP/1.1 200 OK"
2025-08-07 21:50:06,398 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:50:07,197 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-07 21:50:13,670 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:50:14,352 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-07 21:50:23,150 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:50:23,557 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9c575940-88d5-40a7-a4fe-5465ecfb361e "HTTP/1.1 200 OK"
2025-08-07 21:50:23,985 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9c575940-88d5-40a7-a4fe-5465ecfb361e "HTTP/1.1 200 OK"
2025-08-07 21:50:29,359 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9c575940-88d5-40a7-a4fe-5465ecfb361e "HTTP/1.1 200 OK"
2025-08-07 21:50:34,726 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9c575940-88d5-40a7-a4fe-5465ecfb361e "HTTP/1.1 200 OK"
2025-08-07 21:50:40,148 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9c575940-88d5-40a7-a4fe-5465ecfb361e "HTTP/1.1 200 OK"
2025-08-07 21:50:45,522 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9c575940-88d5-40a7-a4fe-5465ecfb361e "HTTP/1.1 200 OK"
2025-08-07 21:50:50,926 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9c575940-88d5-40a7-a4fe-5465ecfb361e "HTTP/1.1 200 OK"
2025-08-07 21:50:56,331 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9c575940-88d5-40a7-a4fe-5465ecfb361e "HTTP/1.1 200 OK"
2025-08-07 21:51:02,427 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:51:02,803 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9c575940-88d5-40a7-a4fe-5465ecfb361e "HTTP/1.1 200 OK"
2025-08-07 21:51:12,811 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:51:13,170 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:51:13,532 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:51:23,917 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:51:34,311 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:51:44,681 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:51:55,048 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:52:05,438 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:52:15,829 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:52:26,226 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:52:36,615 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:52:47,016 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:52:57,406 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:53:07,815 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:53:18,247 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:53:28,645 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:53:39,057 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:53:49,462 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:53:59,885 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:54:10,281 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:54:20,641 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:54:31,015 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:54:41,433 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:54:51,813 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:55:02,334 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:55:09,246 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:55:09,651 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:55:10,167 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ecddaf4-18f2-405d-a171-8c21c709ddca "HTTP/1.1 200 OK"
2025-08-07 21:55:18,368 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:55:19,074 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-07 21:55:26,576 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:55:26,984 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-07 21:55:27,383 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-07 21:55:37,767 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-07 21:55:48,187 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-07 21:55:58,590 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-07 21:56:09,001 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-07 21:56:19,388 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-07 21:56:29,811 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-07 21:56:40,199 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-07 21:56:50,633 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-07 21:57:01,037 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-07 21:57:11,406 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-07 21:57:21,797 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-07 21:57:32,215 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-07 21:57:40,301 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-07 21:57:40,750 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-07 21:57:41,182 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e08deb77-c422-4742-9439-4f56c640349b "HTTP/1.1 200 OK"
2025-08-12 19:41:02,130 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-13 15:53:14,590 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-13 15:53:14,592 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-13 15:53:14,599 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-13 15:53:14,599 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-13 15:53:45,417 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-13 15:53:45,419 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-13 15:53:45,427 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-13 15:53:45,428 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 13:46:16,659 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 13:46:16,680 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 13:46:16,691 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 13:46:16,694 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 13:54:23,972 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 13:54:23,974 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 13:54:23,984 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 13:54:23,985 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 13:54:26,269 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 13:54:26,272 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 13:54:26,280 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 13:54:26,280 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 13:55:17,605 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 13:55:17,612 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 13:57:08,263 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-17 13:57:33,283 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 13:57:33,285 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 13:57:33,294 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 13:57:33,294 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 13:57:35,869 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 13:57:35,870 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 13:57:35,879 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 13:57:35,880 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 13:57:44,047 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 13:57:44,051 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 13:57:44,060 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 13:57:44,061 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:01:34,519 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:01:34,523 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:01:34,531 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:01:34,531 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:11:38,222 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:11:38,224 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:11:38,232 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:11:38,232 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:13:08,175 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:13:08,177 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:13:08,185 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:13:08,186 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:13:27,850 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:13:27,852 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:13:27,861 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:13:27,861 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:14:23,623 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:14:23,624 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-17 14:14:24,488 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-17 14:14:26,391 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:14:26,391 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-17 14:14:26,969 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-17 14:14:36,473 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:14:37,235 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:14:38,094 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:14:38,765 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:14:44,302 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:14:44,664 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e281f249-e89d-4294-90ff-f2b9373b7a43 "HTTP/1.1 200 OK"
2025-08-17 14:14:45,029 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/e281f249-e89d-4294-90ff-f2b9373b7a43 "HTTP/1.1 200 OK"
2025-08-17 14:14:48,638 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:14:49,224 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:14:51,418 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:14:52,076 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:14:53,999 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:14:54,365 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2c6b7a80-1ba9-481a-91f6-f224b434db73 "HTTP/1.1 200 OK"
2025-08-17 14:14:54,725 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2c6b7a80-1ba9-481a-91f6-f224b434db73 "HTTP/1.1 200 OK"
2025-08-17 14:14:54,966 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:14:55,327 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3123d8f2-5e55-418b-a543-6a18e7721ebf "HTTP/1.1 200 OK"
2025-08-17 14:14:55,675 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3123d8f2-5e55-418b-a543-6a18e7721ebf "HTTP/1.1 200 OK"
2025-08-17 14:15:06,051 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3123d8f2-5e55-418b-a543-6a18e7721ebf "HTTP/1.1 200 OK"
2025-08-17 14:15:06,054 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:15:06,424 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8dcf25bd-7359-4386-917e-5a81b0c4cc50 "HTTP/1.1 200 OK"
2025-08-17 14:15:06,821 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8dcf25bd-7359-4386-917e-5a81b0c4cc50 "HTTP/1.1 200 OK"
2025-08-17 14:15:11,630 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:15:12,264 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:15:14,807 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:15:15,396 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:15:17,854 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:15:18,293 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/787ce89c-a4b2-44bb-97d9-0d552a125c2c "HTTP/1.1 200 OK"
2025-08-17 14:15:18,732 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/787ce89c-a4b2-44bb-97d9-0d552a125c2c "HTTP/1.1 200 OK"
2025-08-17 14:15:19,105 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:15:19,105 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-17 14:15:19,740 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-17 14:15:19,742 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:15:20,185 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3123d8f2-5e55-418b-a543-6a18e7721ebf "HTTP/1.1 200 OK"
2025-08-17 14:15:21,515 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3123d8f2-5e55-418b-a543-6a18e7721ebf "HTTP/1.1 200 OK"
2025-08-17 14:15:25,506 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:15:26,271 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:15:26,402 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:15:27,051 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:15:27,055 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:15:27,695 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:15:27,724 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:15:32,021 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:15:32,400 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bc0295a6-fe45-4e90-b7e8-eef5655df606 "HTTP/1.1 200 OK"
2025-08-17 14:15:32,779 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bc0295a6-fe45-4e90-b7e8-eef5655df606 "HTTP/1.1 200 OK"
2025-08-17 14:15:38,176 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bc0295a6-fe45-4e90-b7e8-eef5655df606 "HTTP/1.1 200 OK"
2025-08-17 14:15:43,556 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bc0295a6-fe45-4e90-b7e8-eef5655df606 "HTTP/1.1 200 OK"
2025-08-17 14:15:48,932 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bc0295a6-fe45-4e90-b7e8-eef5655df606 "HTTP/1.1 200 OK"
2025-08-17 14:15:48,937 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:15:49,303 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7a6d19fb-a277-4ae4-92b4-7b5aeca60268 "HTTP/1.1 200 OK"
2025-08-17 14:15:49,661 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7a6d19fb-a277-4ae4-92b4-7b5aeca60268 "HTTP/1.1 200 OK"
2025-08-17 14:15:55,063 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7a6d19fb-a277-4ae4-92b4-7b5aeca60268 "HTTP/1.1 200 OK"
2025-08-17 14:16:00,448 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7a6d19fb-a277-4ae4-92b4-7b5aeca60268 "HTTP/1.1 200 OK"
2025-08-17 14:16:05,814 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7a6d19fb-a277-4ae4-92b4-7b5aeca60268 "HTTP/1.1 200 OK"
2025-08-17 14:16:11,188 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7a6d19fb-a277-4ae4-92b4-7b5aeca60268 "HTTP/1.1 200 OK"
2025-08-17 14:16:11,189 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:16:11,811 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:16:11,818 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:16:12,246 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:16:12,679 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:16:18,086 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:16:23,489 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:16:28,863 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:16:34,256 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:16:39,638 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:16:45,021 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:16:50,396 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:16:55,772 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:17:01,271 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:17:06,657 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:17:12,088 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:17:17,511 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:17:22,888 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:17:28,282 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:17:33,651 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:17:39,014 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:17:44,381 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:17:49,750 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:17:55,134 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:18:00,562 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:18:05,983 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:18:12,416 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:18:17,803 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:18:23,224 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:18:28,652 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:18:34,036 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:18:39,415 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:18:44,841 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:18:50,284 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:18:56,252 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:19:01,678 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:19:07,086 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:19:12,519 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:19:17,882 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:19:23,266 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:19:28,647 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:19:34,066 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:19:39,440 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:19:44,811 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:19:50,219 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:19:55,595 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:20:01,798 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:20:07,203 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:20:12,699 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:20:18,127 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:20:23,568 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:20:28,968 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:20:34,409 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:20:39,834 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:20:45,218 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:20:50,606 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:20:56,008 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:21:01,426 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:21:06,829 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:21:12,263 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:21:17,714 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:21:23,132 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:21:28,544 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:21:33,926 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:21:39,324 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:21:44,886 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:21:50,285 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:21:55,677 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:22:01,110 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:22:06,508 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:22:11,937 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:22:17,321 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:22:22,694 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:22:28,059 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:22:33,450 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:22:38,839 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:22:44,215 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:22:49,603 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:22:54,981 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:23:00,358 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/87f95f21-3c73-4e4f-a0c6-34cecc5b8f32 "HTTP/1.1 200 OK"
2025-08-17 14:23:07,546 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-17 14:23:31,007 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:23:31,014 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:23:43,762 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:23:43,766 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-17 14:23:44,365 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-17 14:23:48,358 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:23:48,363 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:23:51,678 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:23:52,330 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:23:59,041 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:23:59,041 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-17 14:23:59,596 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-17 14:23:59,646 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:24:00,309 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:24:04,903 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:24:04,908 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:24:05,198 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:24:05,850 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:24:05,859 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:24:06,212 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a16dd602-d54e-4649-8158-40ddf5111a8a "HTTP/1.1 200 OK"
2025-08-17 14:24:06,575 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/a16dd602-d54e-4649-8158-40ddf5111a8a "HTTP/1.1 200 OK"
2025-08-17 14:24:13,064 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:24:13,630 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:24:14,602 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:24:15,206 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:24:20,147 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:24:20,518 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c1398804-3889-49e0-b3b6-da575eecab47 "HTTP/1.1 200 OK"
2025-08-17 14:24:20,899 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c1398804-3889-49e0-b3b6-da575eecab47 "HTTP/1.1 200 OK"
2025-08-17 14:24:21,699 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:24:22,059 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d09be680-ac9d-49fb-8053-902312b3c967 "HTTP/1.1 200 OK"
2025-08-17 14:24:22,410 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d09be680-ac9d-49fb-8053-902312b3c967 "HTTP/1.1 200 OK"
2025-08-17 14:24:22,875 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:24:22,891 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:24:26,498 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:24:26,553 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:24:26,561 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:24:27,999 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:24:28,383 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c1398804-3889-49e0-b3b6-da575eecab47 "HTTP/1.1 200 OK"
2025-08-17 14:24:28,742 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c1398804-3889-49e0-b3b6-da575eecab47 "HTTP/1.1 200 OK"
2025-08-17 14:24:29,119 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c1398804-3889-49e0-b3b6-da575eecab47 "HTTP/1.1 200 OK"
2025-08-17 14:24:33,206 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:24:33,599 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c1398804-3889-49e0-b3b6-da575eecab47 "HTTP/1.1 200 OK"
2025-08-17 14:24:35,371 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:24:35,994 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:24:36,376 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:24:36,730 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b467e9f2-978d-4f1f-8b0c-129d2fbec4cc "HTTP/1.1 200 OK"
2025-08-17 14:24:37,098 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b467e9f2-978d-4f1f-8b0c-129d2fbec4cc "HTTP/1.1 200 OK"
2025-08-17 14:24:41,398 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:24:42,012 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:24:43,786 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:24:44,417 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:24:48,505 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:24:48,886 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7f600af3-31d5-4925-8e07-b286e2b1ad12 "HTTP/1.1 200 OK"
2025-08-17 14:24:49,292 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7f600af3-31d5-4925-8e07-b286e2b1ad12 "HTTP/1.1 200 OK"
2025-08-17 14:24:59,673 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7f600af3-31d5-4925-8e07-b286e2b1ad12 "HTTP/1.1 200 OK"
2025-08-17 14:25:10,053 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7f600af3-31d5-4925-8e07-b286e2b1ad12 "HTTP/1.1 200 OK"
2025-08-17 14:25:20,456 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7f600af3-31d5-4925-8e07-b286e2b1ad12 "HTTP/1.1 200 OK"
2025-08-17 14:25:20,469 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:25:20,855 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/696c1316-38d9-4d94-a662-4a501537f322 "HTTP/1.1 200 OK"
2025-08-17 14:25:21,277 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/696c1316-38d9-4d94-a662-4a501537f322 "HTTP/1.1 200 OK"
2025-08-17 14:25:21,279 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:25:21,682 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d7f285c6-a5b6-43a5-b4af-8e2318c9b340 "HTTP/1.1 200 OK"
2025-08-17 14:25:22,087 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d7f285c6-a5b6-43a5-b4af-8e2318c9b340 "HTTP/1.1 200 OK"
2025-08-17 14:25:25,670 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:25:27,017 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:25:27,017 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: acetylsalicylic acid
2025-08-17 14:25:28,122 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'acetylsalicylic acid' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-17 14:25:28,338 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:25:28,727 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7f600af3-31d5-4925-8e07-b286e2b1ad12 "HTTP/1.1 200 OK"
2025-08-17 14:25:29,113 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7f600af3-31d5-4925-8e07-b286e2b1ad12 "HTTP/1.1 200 OK"
2025-08-17 14:25:29,498 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7f600af3-31d5-4925-8e07-b286e2b1ad12 "HTTP/1.1 200 OK"
2025-08-17 14:25:30,854 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:25:31,475 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:25:33,793 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:25:34,207 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7f600af3-31d5-4925-8e07-b286e2b1ad12 "HTTP/1.1 200 OK"
2025-08-17 14:25:35,599 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:25:36,323 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:25:42,428 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:25:42,808 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d1821b16-27e1-469a-91ff-07f73901218b "HTTP/1.1 200 OK"
2025-08-17 14:25:43,196 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d1821b16-27e1-469a-91ff-07f73901218b "HTTP/1.1 200 OK"
2025-08-17 14:25:53,558 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d1821b16-27e1-469a-91ff-07f73901218b "HTTP/1.1 200 OK"
2025-08-17 14:25:53,564 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:25:53,952 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9de926c2-2009-4ccf-bd6a-59b61844b493 "HTTP/1.1 200 OK"
2025-08-17 14:25:54,370 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9de926c2-2009-4ccf-bd6a-59b61844b493 "HTTP/1.1 200 OK"
2025-08-17 14:25:57,406 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:25:57,779 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d1821b16-27e1-469a-91ff-07f73901218b "HTTP/1.1 200 OK"
2025-08-17 14:25:58,175 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d1821b16-27e1-469a-91ff-07f73901218b "HTTP/1.1 200 OK"
2025-08-17 14:25:58,534 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d1821b16-27e1-469a-91ff-07f73901218b "HTTP/1.1 200 OK"
2025-08-17 14:26:00,776 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:26:01,473 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:26:02,110 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:26:02,475 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d1821b16-27e1-469a-91ff-07f73901218b "HTTP/1.1 200 OK"
2025-08-17 14:26:07,378 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:26:07,769 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c375abf7-29be-4bdd-8fc8-88477f859394 "HTTP/1.1 200 OK"
2025-08-17 14:26:08,148 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c375abf7-29be-4bdd-8fc8-88477f859394 "HTTP/1.1 200 OK"
2025-08-17 14:26:13,554 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c375abf7-29be-4bdd-8fc8-88477f859394 "HTTP/1.1 200 OK"
2025-08-17 14:26:18,956 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c375abf7-29be-4bdd-8fc8-88477f859394 "HTTP/1.1 200 OK"
2025-08-17 14:26:24,353 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c375abf7-29be-4bdd-8fc8-88477f859394 "HTTP/1.1 200 OK"
2025-08-17 14:26:29,761 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c375abf7-29be-4bdd-8fc8-88477f859394 "HTTP/1.1 200 OK"
2025-08-17 14:26:35,171 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c375abf7-29be-4bdd-8fc8-88477f859394 "HTTP/1.1 200 OK"
2025-08-17 14:26:41,019 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c375abf7-29be-4bdd-8fc8-88477f859394 "HTTP/1.1 200 OK"
2025-08-17 14:26:46,398 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c375abf7-29be-4bdd-8fc8-88477f859394 "HTTP/1.1 200 OK"
2025-08-17 14:26:51,772 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c375abf7-29be-4bdd-8fc8-88477f859394 "HTTP/1.1 200 OK"
2025-08-17 14:26:57,469 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:26:57,850 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/fde760ee-7a46-4286-8717-63c2350ad146 "HTTP/1.1 200 OK"
2025-08-17 14:26:58,246 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/fde760ee-7a46-4286-8717-63c2350ad146 "HTTP/1.1 200 OK"
2025-08-17 14:27:04,051 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:27:04,465 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c375abf7-29be-4bdd-8fc8-88477f859394 "HTTP/1.1 200 OK"
2025-08-17 14:27:04,829 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/c375abf7-29be-4bdd-8fc8-88477f859394 "HTTP/1.1 200 OK"
2025-08-17 14:28:13,498 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:28:13,522 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-17 14:28:14,147 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-17 14:28:30,904 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:28:31,577 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:28:31,719 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:28:32,292 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:28:36,467 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:28:36,846 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58ad3785-9517-4e61-b6aa-5b61882f51da "HTTP/1.1 200 OK"
2025-08-17 14:28:37,237 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58ad3785-9517-4e61-b6aa-5b61882f51da "HTTP/1.1 200 OK"
2025-08-17 14:28:42,627 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58ad3785-9517-4e61-b6aa-5b61882f51da "HTTP/1.1 200 OK"
2025-08-17 14:28:48,014 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58ad3785-9517-4e61-b6aa-5b61882f51da "HTTP/1.1 200 OK"
2025-08-17 14:28:53,416 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58ad3785-9517-4e61-b6aa-5b61882f51da "HTTP/1.1 200 OK"
2025-08-17 14:28:58,807 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58ad3785-9517-4e61-b6aa-5b61882f51da "HTTP/1.1 200 OK"
2025-08-17 14:29:04,182 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58ad3785-9517-4e61-b6aa-5b61882f51da "HTTP/1.1 200 OK"
2025-08-17 14:29:09,569 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58ad3785-9517-4e61-b6aa-5b61882f51da "HTTP/1.1 200 OK"
2025-08-17 14:29:09,711 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:29:10,065 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31b19adf-5394-44e2-b4d5-1d4863feaece "HTTP/1.1 200 OK"
2025-08-17 14:29:10,442 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/31b19adf-5394-44e2-b4d5-1d4863feaece "HTTP/1.1 200 OK"
2025-08-17 14:29:26,105 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:29:26,500 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58ad3785-9517-4e61-b6aa-5b61882f51da "HTTP/1.1 200 OK"
2025-08-17 14:29:26,925 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58ad3785-9517-4e61-b6aa-5b61882f51da "HTTP/1.1 200 OK"
2025-08-17 14:29:27,404 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58ad3785-9517-4e61-b6aa-5b61882f51da "HTTP/1.1 200 OK"
2025-08-17 14:29:27,544 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:29:28,163 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:29:33,965 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:29:34,316 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58ad3785-9517-4e61-b6aa-5b61882f51da "HTTP/1.1 200 OK"
2025-08-17 14:29:34,452 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:29:34,835 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2227e4be-0b87-45e1-86f0-d8a99a70063d "HTTP/1.1 200 OK"
2025-08-17 14:29:35,206 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2227e4be-0b87-45e1-86f0-d8a99a70063d "HTTP/1.1 200 OK"
2025-08-17 14:29:40,621 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2227e4be-0b87-45e1-86f0-d8a99a70063d "HTTP/1.1 200 OK"
2025-08-17 14:29:46,078 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2227e4be-0b87-45e1-86f0-d8a99a70063d "HTTP/1.1 200 OK"
2025-08-17 14:29:52,235 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:29:52,593 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2227e4be-0b87-45e1-86f0-d8a99a70063d "HTTP/1.1 200 OK"
2025-08-17 14:29:53,001 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2227e4be-0b87-45e1-86f0-d8a99a70063d "HTTP/1.1 200 OK"
2025-08-17 14:29:53,407 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2227e4be-0b87-45e1-86f0-d8a99a70063d "HTTP/1.1 200 OK"
2025-08-17 14:29:56,378 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:29:56,802 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2227e4be-0b87-45e1-86f0-d8a99a70063d "HTTP/1.1 200 OK"
2025-08-17 14:30:02,422 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:30:15,346 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:30:16,054 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:30:20,000 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:30:20,347 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f5d1f97e-9def-4df0-8654-9d07e3f642e4 "HTTP/1.1 200 OK"
2025-08-17 14:30:20,735 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f5d1f97e-9def-4df0-8654-9d07e3f642e4 "HTTP/1.1 200 OK"
2025-08-17 14:30:26,131 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f5d1f97e-9def-4df0-8654-9d07e3f642e4 "HTTP/1.1 200 OK"
2025-08-17 14:30:31,556 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f5d1f97e-9def-4df0-8654-9d07e3f642e4 "HTTP/1.1 200 OK"
2025-08-17 14:30:34,982 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:30:35,355 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f5d1f97e-9def-4df0-8654-9d07e3f642e4 "HTTP/1.1 200 OK"
2025-08-17 14:30:35,755 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f5d1f97e-9def-4df0-8654-9d07e3f642e4 "HTTP/1.1 200 OK"
2025-08-17 14:30:36,152 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f5d1f97e-9def-4df0-8654-9d07e3f642e4 "HTTP/1.1 200 OK"
2025-08-17 14:30:39,111 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:30:39,521 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f5d1f97e-9def-4df0-8654-9d07e3f642e4 "HTTP/1.1 200 OK"
2025-08-17 14:30:46,711 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:30:47,367 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:30:49,266 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:30:49,661 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:30:50,051 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:30:50,461 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:30:54,456 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:30:54,856 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:30:55,248 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:30:55,645 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:30:59,195 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:30:59,631 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:31:00,143 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:31:05,622 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:31:11,177 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:31:16,608 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:31:22,064 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:31:27,443 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:31:32,831 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:31:38,215 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:31:43,767 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:31:49,165 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:31:54,594 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:32:00,027 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5a625f1a-3df8-4d5e-8239-fc2d90348315 "HTTP/1.1 200 OK"
2025-08-17 14:32:07,302 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:32:07,894 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:32:11,820 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:32:12,267 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58284f92-73ee-4e14-a9a6-3d1a5567b994 "HTTP/1.1 200 OK"
2025-08-17 14:32:12,700 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58284f92-73ee-4e14-a9a6-3d1a5567b994 "HTTP/1.1 200 OK"
2025-08-17 14:32:13,130 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58284f92-73ee-4e14-a9a6-3d1a5567b994 "HTTP/1.1 200 OK"
2025-08-17 14:32:16,184 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:32:16,546 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/58284f92-73ee-4e14-a9a6-3d1a5567b994 "HTTP/1.1 200 OK"
2025-08-17 14:32:28,041 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:36:41,265 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:36:41,272 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:36:43,075 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:36:43,089 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:36:56,074 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-17 14:36:58,581 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:36:58,588 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:36:59,928 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:36:59,936 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:37:16,748 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:37:16,749 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-17 14:37:17,348 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-17 14:37:22,888 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:37:22,888 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-17 14:37:23,503 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-17 14:37:24,367 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:37:25,108 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:37:26,412 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:37:27,023 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:37:31,774 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:37:32,380 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:37:33,922 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:37:34,549 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:37:36,199 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:37:36,205 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:37:36,400 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:37:36,762 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/59880660-613b-4d75-b541-877f0fa700fe "HTTP/1.1 200 OK"
2025-08-17 14:37:37,119 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/59880660-613b-4d75-b541-877f0fa700fe "HTTP/1.1 200 OK"
2025-08-17 14:37:47,493 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/59880660-613b-4d75-b541-877f0fa700fe "HTTP/1.1 200 OK"
2025-08-17 14:37:57,933 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/59880660-613b-4d75-b541-877f0fa700fe "HTTP/1.1 200 OK"
2025-08-17 14:38:08,314 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/59880660-613b-4d75-b541-877f0fa700fe "HTTP/1.1 200 OK"
2025-08-17 14:38:08,321 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:38:08,694 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6d4feac7-299c-464e-8795-867029a2c761 "HTTP/1.1 200 OK"
2025-08-17 14:38:09,080 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/6d4feac7-299c-464e-8795-867029a2c761 "HTTP/1.1 200 OK"
2025-08-17 14:38:09,116 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:38:09,470 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/81e458cd-892f-4ed1-b9ad-39b0b8fd086f "HTTP/1.1 200 OK"
2025-08-17 14:38:09,834 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/81e458cd-892f-4ed1-b9ad-39b0b8fd086f "HTTP/1.1 200 OK"
2025-08-17 14:38:09,843 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:38:10,202 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bf1f999e-4f30-4b7a-8c0e-13a962b1b5e5 "HTTP/1.1 200 OK"
2025-08-17 14:38:10,554 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bf1f999e-4f30-4b7a-8c0e-13a962b1b5e5 "HTTP/1.1 200 OK"
2025-08-17 14:38:10,572 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:38:10,576 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:38:10,578 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:38:10,586 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:38:10,589 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:38:10,589 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:38:15,294 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:38:15,330 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:38:19,912 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:38:20,489 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:38:21,171 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:38:21,770 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:38:24,819 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:38:25,184 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3c18d0d2-d492-4080-ac68-4f53dc90aecd "HTTP/1.1 200 OK"
2025-08-17 14:38:25,588 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3c18d0d2-d492-4080-ac68-4f53dc90aecd "HTTP/1.1 200 OK"
2025-08-17 14:38:35,970 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3c18d0d2-d492-4080-ac68-4f53dc90aecd "HTTP/1.1 200 OK"
2025-08-17 14:38:35,972 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:38:36,340 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8e0b76ac-6ad2-4943-9212-4eff537e061f "HTTP/1.1 200 OK"
2025-08-17 14:38:36,701 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8e0b76ac-6ad2-4943-9212-4eff537e061f "HTTP/1.1 200 OK"
2025-08-17 14:38:47,076 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8e0b76ac-6ad2-4943-9212-4eff537e061f "HTTP/1.1 200 OK"
2025-08-17 14:38:57,489 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8e0b76ac-6ad2-4943-9212-4eff537e061f "HTTP/1.1 200 OK"
2025-08-17 14:39:07,899 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8e0b76ac-6ad2-4943-9212-4eff537e061f "HTTP/1.1 200 OK"
2025-08-17 14:39:18,310 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8e0b76ac-6ad2-4943-9212-4eff537e061f "HTTP/1.1 200 OK"
2025-08-17 14:39:28,701 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8e0b76ac-6ad2-4943-9212-4eff537e061f "HTTP/1.1 200 OK"
2025-08-17 14:39:39,160 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8e0b76ac-6ad2-4943-9212-4eff537e061f "HTTP/1.1 200 OK"
2025-08-17 14:39:39,171 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:39:39,570 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/59880660-613b-4d75-b541-877f0fa700fe "HTTP/1.1 200 OK"
2025-08-17 14:39:40,962 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/59880660-613b-4d75-b541-877f0fa700fe "HTTP/1.1 200 OK"
2025-08-17 14:39:41,335 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/59880660-613b-4d75-b541-877f0fa700fe "HTTP/1.1 200 OK"
2025-08-17 14:39:41,336 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:39:41,337 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-17 14:39:41,986 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-17 14:39:43,905 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:39:44,297 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8e0b76ac-6ad2-4943-9212-4eff537e061f "HTTP/1.1 200 OK"
2025-08-17 14:39:44,674 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8e0b76ac-6ad2-4943-9212-4eff537e061f "HTTP/1.1 200 OK"
2025-08-17 14:39:46,124 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:39:46,582 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/59880660-613b-4d75-b541-877f0fa700fe "HTTP/1.1 200 OK"
2025-08-17 14:39:46,773 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:39:47,151 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3c18d0d2-d492-4080-ac68-4f53dc90aecd "HTTP/1.1 200 OK"
2025-08-17 14:39:47,558 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3c18d0d2-d492-4080-ac68-4f53dc90aecd "HTTP/1.1 200 OK"
2025-08-17 14:39:53,322 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:39:53,953 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 14:39:57,350 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:39:57,720 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/11035979-e612-4710-a187-b5800c2d78af "HTTP/1.1 200 OK"
2025-08-17 14:39:58,216 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/11035979-e612-4710-a187-b5800c2d78af "HTTP/1.1 200 OK"
2025-08-17 14:40:08,577 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/11035979-e612-4710-a187-b5800c2d78af "HTTP/1.1 200 OK"
2025-08-17 14:40:18,985 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/11035979-e612-4710-a187-b5800c2d78af "HTTP/1.1 200 OK"
2025-08-17 14:40:29,437 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/11035979-e612-4710-a187-b5800c2d78af "HTTP/1.1 200 OK"
2025-08-17 14:40:39,893 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/11035979-e612-4710-a187-b5800c2d78af "HTTP/1.1 200 OK"
2025-08-17 14:40:50,318 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/11035979-e612-4710-a187-b5800c2d78af "HTTP/1.1 200 OK"
2025-08-17 14:41:00,742 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/11035979-e612-4710-a187-b5800c2d78af "HTTP/1.1 200 OK"
2025-08-17 14:41:11,174 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/11035979-e612-4710-a187-b5800c2d78af "HTTP/1.1 200 OK"
2025-08-17 14:41:21,564 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/11035979-e612-4710-a187-b5800c2d78af "HTTP/1.1 200 OK"
2025-08-17 14:41:21,578 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:41:22,249 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-17 14:41:22,249 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_pka_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_pka_workflow.py", line 85, in submit_pka_workflow
    return rowan.submit_pka_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=stjames.Molecule.from_smiles(initial_molecule),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 588, in submit_pka_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-17 14:41:22,506 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:41:22,987 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-17 14:41:22,988 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_solubility_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_solubility_workflow.py", line 103, in submit_solubility_workflow
    result = rowan.submit_solubility_workflow(
        initial_smiles=initial_smiles,
    ...<4 lines>...
        max_credits=max_credits
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 532, in submit_solubility_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-17 14:55:21,924 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:55:21,947 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:55:21,965 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:55:21,965 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:55:21,965 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 14:55:21,972 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 14:56:37,188 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:56:37,190 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-17 14:56:37,779 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-17 14:57:22,035 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:57:22,746 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-17 14:57:22,749 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_pka_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_pka_workflow.py", line 85, in submit_pka_workflow
    return rowan.submit_pka_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=stjames.Molecule.from_smiles(initial_molecule),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 588, in submit_pka_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-17 14:57:23,008 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 14:57:23,523 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-17 14:57:23,524 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_solubility_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_solubility_workflow.py", line 103, in submit_solubility_workflow
    result = rowan.submit_solubility_workflow(
        initial_smiles=initial_smiles,
    ...<4 lines>...
        max_credits=max_credits
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 532, in submit_solubility_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-17 15:04:19,230 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:04:19,231 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-17 15:04:19,782 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-17 15:04:26,421 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 15:04:26,433 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 15:04:28,541 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:04:29,145 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-17 15:04:29,147 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_pka_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_pka_workflow.py", line 85, in submit_pka_workflow
    return rowan.submit_pka_workflow(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        initial_molecule=stjames.Molecule.from_smiles(initial_molecule),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        max_credits=max_credits
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 588, in submit_pka_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-17 15:04:29,436 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:04:29,951 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-17 15:04:29,952 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_solubility_workflow': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_solubility_workflow.py", line 103, in submit_solubility_workflow
    result = rowan.submit_solubility_workflow(
        initial_smiles=initial_smiles,
    ...<4 lines>...
        max_credits=max_credits
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 532, in submit_solubility_workflow
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/workflow'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-17 15:04:49,581 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:04:50,207 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 15:04:56,205 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:04:56,821 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 15:05:03,338 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:05:03,738 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/dc053f17-9d88-4911-9c81-4ed0ba5c94b1 "HTTP/1.1 200 OK"
2025-08-17 15:05:04,157 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/dc053f17-9d88-4911-9c81-4ed0ba5c94b1 "HTTP/1.1 200 OK"
2025-08-17 15:05:09,550 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/dc053f17-9d88-4911-9c81-4ed0ba5c94b1 "HTTP/1.1 200 OK"
2025-08-17 15:05:14,924 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/dc053f17-9d88-4911-9c81-4ed0ba5c94b1 "HTTP/1.1 200 OK"
2025-08-17 15:05:20,307 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/dc053f17-9d88-4911-9c81-4ed0ba5c94b1 "HTTP/1.1 200 OK"
2025-08-17 15:05:25,705 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/dc053f17-9d88-4911-9c81-4ed0ba5c94b1 "HTTP/1.1 200 OK"
2025-08-17 15:05:31,082 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/dc053f17-9d88-4911-9c81-4ed0ba5c94b1 "HTTP/1.1 200 OK"
2025-08-17 15:05:31,317 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:05:31,734 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5d56d0b8-6753-4ffb-aafb-13546eba3988 "HTTP/1.1 200 OK"
2025-08-17 15:05:32,112 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5d56d0b8-6753-4ffb-aafb-13546eba3988 "HTTP/1.1 200 OK"
2025-08-17 15:05:41,246 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:05:48,894 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:05:49,316 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/dc053f17-9d88-4911-9c81-4ed0ba5c94b1 "HTTP/1.1 200 OK"
2025-08-17 15:05:49,738 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/dc053f17-9d88-4911-9c81-4ed0ba5c94b1 "HTTP/1.1 200 OK"
2025-08-17 15:05:50,184 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/dc053f17-9d88-4911-9c81-4ed0ba5c94b1 "HTTP/1.1 200 OK"
2025-08-17 15:05:50,339 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:05:50,955 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 15:05:55,591 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:05:56,029 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/dc053f17-9d88-4911-9c81-4ed0ba5c94b1 "HTTP/1.1 200 OK"
2025-08-17 15:05:56,170 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:05:56,555 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3815ca1e-7d98-4605-893a-18890f0dfae8 "HTTP/1.1 200 OK"
2025-08-17 15:05:56,941 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3815ca1e-7d98-4605-893a-18890f0dfae8 "HTTP/1.1 200 OK"
2025-08-17 15:06:02,320 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3815ca1e-7d98-4605-893a-18890f0dfae8 "HTTP/1.1 200 OK"
2025-08-17 15:06:07,692 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3815ca1e-7d98-4605-893a-18890f0dfae8 "HTTP/1.1 200 OK"
2025-08-17 15:06:14,006 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:06:14,412 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3815ca1e-7d98-4605-893a-18890f0dfae8 "HTTP/1.1 200 OK"
2025-08-17 15:06:14,790 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3815ca1e-7d98-4605-893a-18890f0dfae8 "HTTP/1.1 200 OK"
2025-08-17 15:06:15,153 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3815ca1e-7d98-4605-893a-18890f0dfae8 "HTTP/1.1 200 OK"
2025-08-17 15:06:39,493 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:06:39,861 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/3815ca1e-7d98-4605-893a-18890f0dfae8 "HTTP/1.1 200 OK"
2025-08-17 15:06:42,092 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:06:50,922 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:06:51,540 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 15:06:54,492 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:06:54,844 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:06:55,183 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:07:00,560 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:07:05,936 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:07:11,398 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:07:16,768 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:07:22,165 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:07:27,549 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:07:32,952 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:07:38,351 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:07:43,741 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:07:49,097 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:07:54,478 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:07:59,897 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:08:05,300 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:08:10,651 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:08:10,705 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 15:08:10,718 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 15:08:13,471 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:08:13,805 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:08:14,221 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:08:14,617 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:08:17,681 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:08:18,038 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5f162e5b-96f6-4f9a-bcfe-c5b54ffbbf25 "HTTP/1.1 200 OK"
2025-08-17 15:11:49,465 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 15:11:49,474 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 15:12:18,857 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:12:19,253 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/11035979-e612-4710-a187-b5800c2d78af "HTTP/1.1 200 OK"
2025-08-17 15:12:19,650 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/11035979-e612-4710-a187-b5800c2d78af "HTTP/1.1 200 OK"
2025-08-17 15:15:59,545 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:15:59,546 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-17 15:16:00,137 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-17 15:16:10,181 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:16:11,017 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 15:16:12,445 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:16:13,123 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 15:16:22,582 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:16:22,943 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0650f09e-83d0-440c-bb8b-3527adc4d911 "HTTP/1.1 200 OK"
2025-08-17 15:16:23,301 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0650f09e-83d0-440c-bb8b-3527adc4d911 "HTTP/1.1 200 OK"
2025-08-17 15:16:28,674 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0650f09e-83d0-440c-bb8b-3527adc4d911 "HTTP/1.1 200 OK"
2025-08-17 15:16:34,054 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0650f09e-83d0-440c-bb8b-3527adc4d911 "HTTP/1.1 200 OK"
2025-08-17 15:16:39,416 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0650f09e-83d0-440c-bb8b-3527adc4d911 "HTTP/1.1 200 OK"
2025-08-17 15:16:44,804 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0650f09e-83d0-440c-bb8b-3527adc4d911 "HTTP/1.1 200 OK"
2025-08-17 15:16:44,973 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:16:45,622 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9765b66f-be04-45b0-84c3-f628a8b6a4b0 "HTTP/1.1 200 OK"
2025-08-17 15:16:46,057 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9765b66f-be04-45b0-84c3-f628a8b6a4b0 "HTTP/1.1 200 OK"
2025-08-17 15:16:50,408 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:16:56,188 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:16:56,803 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 15:17:00,939 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:17:01,331 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:17:01,744 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:17:07,178 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:17:12,575 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:17:18,246 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:17:23,595 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:17:29,045 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:17:34,446 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:17:39,823 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:17:45,765 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:17:51,141 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:17:56,525 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:18:01,935 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:18:07,410 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:18:12,610 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:18:12,968 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0650f09e-83d0-440c-bb8b-3527adc4d911 "HTTP/1.1 200 OK"
2025-08-17 15:18:13,371 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0650f09e-83d0-440c-bb8b-3527adc4d911 "HTTP/1.1 200 OK"
2025-08-17 15:18:13,794 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0650f09e-83d0-440c-bb8b-3527adc4d911 "HTTP/1.1 200 OK"
2025-08-17 15:18:13,941 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:18:14,308 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:18:14,691 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:18:15,085 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:18:19,354 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:18:19,738 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0650f09e-83d0-440c-bb8b-3527adc4d911 "HTTP/1.1 200 OK"
2025-08-17 15:18:20,102 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:18:20,537 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/08ea8699-0799-46e8-b760-b6d164633543 "HTTP/1.1 200 OK"
2025-08-17 15:35:08,987 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 15:35:08,996 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 15:36:23,231 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 15:36:23,244 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 15:36:37,946 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 15:36:37,948 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-17 15:36:38,020 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 15:36:38,021 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-17 15:56:32,658 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:56:32,662 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-17 15:56:33,307 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-17 15:56:41,845 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:56:42,678 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 15:56:50,093 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:56:50,681 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 15:56:56,536 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:56:56,912 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cae0a117-d289-4a94-a9ee-bab40bfad11e "HTTP/1.1 200 OK"
2025-08-17 15:56:57,337 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cae0a117-d289-4a94-a9ee-bab40bfad11e "HTTP/1.1 200 OK"
2025-08-17 15:57:02,792 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cae0a117-d289-4a94-a9ee-bab40bfad11e "HTTP/1.1 200 OK"
2025-08-17 15:57:08,202 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cae0a117-d289-4a94-a9ee-bab40bfad11e "HTTP/1.1 200 OK"
2025-08-17 15:57:13,600 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cae0a117-d289-4a94-a9ee-bab40bfad11e "HTTP/1.1 200 OK"
2025-08-17 15:57:19,031 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cae0a117-d289-4a94-a9ee-bab40bfad11e "HTTP/1.1 200 OK"
2025-08-17 15:57:20,678 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:57:21,764 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/35e85fe8-2f9f-448e-944c-649f421c3e42 "HTTP/1.1 200 OK"
2025-08-17 15:57:22,184 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/35e85fe8-2f9f-448e-944c-649f421c3e42 "HTTP/1.1 200 OK"
2025-08-17 15:57:26,960 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:57:27,434 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cae0a117-d289-4a94-a9ee-bab40bfad11e "HTTP/1.1 200 OK"
2025-08-17 15:57:27,851 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cae0a117-d289-4a94-a9ee-bab40bfad11e "HTTP/1.1 200 OK"
2025-08-17 15:57:28,235 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cae0a117-d289-4a94-a9ee-bab40bfad11e "HTTP/1.1 200 OK"
2025-08-17 15:57:30,444 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:57:30,828 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cae0a117-d289-4a94-a9ee-bab40bfad11e "HTTP/1.1 200 OK"
2025-08-17 15:57:34,259 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:57:34,812 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 15:57:36,889 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:57:37,293 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/86a39ff1-01ed-461b-977c-113a37636185 "HTTP/1.1 200 OK"
2025-08-17 15:57:37,668 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/86a39ff1-01ed-461b-977c-113a37636185 "HTTP/1.1 200 OK"
2025-08-17 15:57:43,109 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/86a39ff1-01ed-461b-977c-113a37636185 "HTTP/1.1 200 OK"
2025-08-17 15:57:48,603 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/86a39ff1-01ed-461b-977c-113a37636185 "HTTP/1.1 200 OK"
2025-08-17 15:57:51,280 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:57:51,691 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/86a39ff1-01ed-461b-977c-113a37636185 "HTTP/1.1 200 OK"
2025-08-17 15:57:52,107 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/86a39ff1-01ed-461b-977c-113a37636185 "HTTP/1.1 200 OK"
2025-08-17 15:57:52,592 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/86a39ff1-01ed-461b-977c-113a37636185 "HTTP/1.1 200 OK"
2025-08-17 15:57:54,603 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:57:55,098 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/86a39ff1-01ed-461b-977c-113a37636185 "HTTP/1.1 200 OK"
2025-08-17 15:58:02,391 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:58:03,178 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 15:58:10,679 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:58:11,070 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ebd64f9-3117-428a-85f5-5a93dce41a11 "HTTP/1.1 200 OK"
2025-08-17 15:58:11,472 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/8ebd64f9-3117-428a-85f5-5a93dce41a11 "HTTP/1.1 200 OK"
2025-08-17 15:58:14,116 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:58:14,787 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-17 15:58:16,927 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:58:17,314 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/310da3c3-ed4a-47a2-8430-9c924151d8ba "HTTP/1.1 200 OK"
2025-08-17 15:58:17,758 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/310da3c3-ed4a-47a2-8430-9c924151d8ba "HTTP/1.1 200 OK"
2025-08-17 15:58:23,139 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/310da3c3-ed4a-47a2-8430-9c924151d8ba "HTTP/1.1 200 OK"
2025-08-17 15:58:28,513 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/310da3c3-ed4a-47a2-8430-9c924151d8ba "HTTP/1.1 200 OK"
2025-08-17 15:58:33,921 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/310da3c3-ed4a-47a2-8430-9c924151d8ba "HTTP/1.1 200 OK"
2025-08-17 15:58:39,366 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/310da3c3-ed4a-47a2-8430-9c924151d8ba "HTTP/1.1 200 OK"
2025-08-17 15:58:44,744 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/310da3c3-ed4a-47a2-8430-9c924151d8ba "HTTP/1.1 200 OK"
2025-08-17 15:58:50,963 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/310da3c3-ed4a-47a2-8430-9c924151d8ba "HTTP/1.1 200 OK"
2025-08-17 15:58:55,927 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-17 15:58:56,303 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/310da3c3-ed4a-47a2-8430-9c924151d8ba "HTTP/1.1 200 OK"
2025-08-17 15:58:56,792 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/310da3c3-ed4a-47a2-8430-9c924151d8ba "HTTP/1.1 200 OK"
2025-08-17 15:58:57,150 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/310da3c3-ed4a-47a2-8430-9c924151d8ba "HTTP/1.1 200 OK"
2025-08-17 16:06:07,515 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-20 19:09:32,315 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-20 19:09:32,343 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-20 19:09:32,352 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-20 19:09:32,353 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-20 19:09:42,840 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-20 19:09:42,843 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-20 19:09:42,854 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-20 19:09:42,886 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-20 19:11:15,292 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:11:16,206 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-20 19:11:18,376 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:11:18,791 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b90659e2-5c22-467e-840f-8994fa067e66 "HTTP/1.1 200 OK"
2025-08-20 19:11:19,186 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b90659e2-5c22-467e-840f-8994fa067e66 "HTTP/1.1 200 OK"
2025-08-20 19:11:24,606 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b90659e2-5c22-467e-840f-8994fa067e66 "HTTP/1.1 200 OK"
2025-08-20 19:11:30,021 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b90659e2-5c22-467e-840f-8994fa067e66 "HTTP/1.1 200 OK"
2025-08-20 19:11:35,435 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b90659e2-5c22-467e-840f-8994fa067e66 "HTTP/1.1 200 OK"
2025-08-20 19:11:40,813 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b90659e2-5c22-467e-840f-8994fa067e66 "HTTP/1.1 200 OK"
2025-08-20 19:11:46,198 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b90659e2-5c22-467e-840f-8994fa067e66 "HTTP/1.1 200 OK"
2025-08-20 19:11:51,603 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b90659e2-5c22-467e-840f-8994fa067e66 "HTTP/1.1 200 OK"
2025-08-20 19:11:56,979 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b90659e2-5c22-467e-840f-8994fa067e66 "HTTP/1.1 200 OK"
2025-08-20 19:11:59,055 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:11:59,432 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b90659e2-5c22-467e-840f-8994fa067e66 "HTTP/1.1 200 OK"
2025-08-20 19:11:59,814 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b90659e2-5c22-467e-840f-8994fa067e66 "HTTP/1.1 200 OK"
2025-08-20 19:12:00,214 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b90659e2-5c22-467e-840f-8994fa067e66 "HTTP/1.1 200 OK"
2025-08-20 19:12:04,777 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:12:05,158 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b90659e2-5c22-467e-840f-8994fa067e66 "HTTP/1.1 200 OK"
2025-08-20 19:12:13,602 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:12:14,300 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-20 19:12:16,236 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:12:16,610 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9fb02571-fd6b-43ab-b6f8-4ec96e6812e2 "HTTP/1.1 200 OK"
2025-08-20 19:12:16,991 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9fb02571-fd6b-43ab-b6f8-4ec96e6812e2 "HTTP/1.1 200 OK"
2025-08-20 19:12:22,428 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9fb02571-fd6b-43ab-b6f8-4ec96e6812e2 "HTTP/1.1 200 OK"
2025-08-20 19:12:27,910 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9fb02571-fd6b-43ab-b6f8-4ec96e6812e2 "HTTP/1.1 200 OK"
2025-08-20 19:12:33,303 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9fb02571-fd6b-43ab-b6f8-4ec96e6812e2 "HTTP/1.1 200 OK"
2025-08-20 19:12:38,715 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9fb02571-fd6b-43ab-b6f8-4ec96e6812e2 "HTTP/1.1 200 OK"
2025-08-20 19:12:44,374 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9fb02571-fd6b-43ab-b6f8-4ec96e6812e2 "HTTP/1.1 200 OK"
2025-08-20 19:12:48,798 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:12:49,165 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9fb02571-fd6b-43ab-b6f8-4ec96e6812e2 "HTTP/1.1 200 OK"
2025-08-20 19:12:49,611 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9fb02571-fd6b-43ab-b6f8-4ec96e6812e2 "HTTP/1.1 200 OK"
2025-08-20 19:12:50,021 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9fb02571-fd6b-43ab-b6f8-4ec96e6812e2 "HTTP/1.1 200 OK"
2025-08-20 19:12:52,100 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:12:52,463 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9fb02571-fd6b-43ab-b6f8-4ec96e6812e2 "HTTP/1.1 200 OK"
2025-08-20 19:12:54,762 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:12:58,444 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:12:59,047 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-20 19:13:00,794 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:13:01,164 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/847f8bc6-464f-43e6-8bf1-66f3612d291a "HTTP/1.1 200 OK"
2025-08-20 19:13:01,567 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/847f8bc6-464f-43e6-8bf1-66f3612d291a "HTTP/1.1 200 OK"
2025-08-20 19:13:06,943 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/847f8bc6-464f-43e6-8bf1-66f3612d291a "HTTP/1.1 200 OK"
2025-08-20 19:13:12,379 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/847f8bc6-464f-43e6-8bf1-66f3612d291a "HTTP/1.1 200 OK"
2025-08-20 19:13:17,804 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/847f8bc6-464f-43e6-8bf1-66f3612d291a "HTTP/1.1 200 OK"
2025-08-20 19:13:23,222 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/847f8bc6-464f-43e6-8bf1-66f3612d291a "HTTP/1.1 200 OK"
2025-08-20 19:13:28,645 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/847f8bc6-464f-43e6-8bf1-66f3612d291a "HTTP/1.1 200 OK"
2025-08-20 19:13:30,528 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:13:30,894 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/847f8bc6-464f-43e6-8bf1-66f3612d291a "HTTP/1.1 200 OK"
2025-08-20 19:13:31,246 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/847f8bc6-464f-43e6-8bf1-66f3612d291a "HTTP/1.1 200 OK"
2025-08-20 19:13:31,621 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/847f8bc6-464f-43e6-8bf1-66f3612d291a "HTTP/1.1 200 OK"
2025-08-20 19:13:35,382 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:13:35,772 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/847f8bc6-464f-43e6-8bf1-66f3612d291a "HTTP/1.1 200 OK"
2025-08-20 19:13:39,097 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:13:39,786 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-20 19:13:41,446 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:13:41,839 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:13:42,237 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:13:47,601 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:13:52,984 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:13:58,368 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:14:03,786 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:14:09,236 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:14:14,612 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:14:19,986 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:14:25,370 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:14:30,756 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:14:36,152 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:14:41,556 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:14:46,942 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:14:52,345 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:14:57,729 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:14:59,487 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:14:59,867 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:15:00,259 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:15:00,648 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-20 19:15:02,803 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-20 19:15:03,271 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cd7d282e-1256-4b4a-824f-5dc84aafa5c8 "HTTP/1.1 200 OK"
2025-08-22 13:08:28,028 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 13:20:20,729 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 13:20:20,736 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 13:20:41,815 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:20:41,816 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-22 13:20:42,554 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-22 13:20:48,988 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:20:49,046 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 96, in submit_fukui_workflow
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 83, in submit_fukui_workflow
    result = rowan.workflow.submit_fukui_workflow(
        initial_molecule=molecule,
    ...<5 lines>...
        max_credits=max_credits
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-22 13:20:52,154 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:20:52,173 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 96, in submit_fukui_workflow
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 83, in submit_fukui_workflow
    result = rowan.workflow.submit_fukui_workflow(
        initial_molecule=molecule,
    ...<5 lines>...
        max_credits=max_credits
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-22 13:20:56,625 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:20:57,361 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 13:21:04,381 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:21:05,097 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 13:21:05,898 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:21:06,306 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d532545b-b784-460c-b58c-90a1b8211cc5 "HTTP/1.1 200 OK"
2025-08-22 13:21:06,809 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/d532545b-b784-460c-b58c-90a1b8211cc5 "HTTP/1.1 200 OK"
2025-08-22 13:23:18,346 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 13:23:20,961 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 13:23:20,968 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 13:23:28,941 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:23:28,942 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-22 13:23:29,589 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-22 13:23:35,497 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:23:35,548 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 96, in submit_fukui_workflow
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 83, in submit_fukui_workflow
    result = rowan.workflow.submit_fukui_workflow(
        initial_molecule=molecule,
    ...<5 lines>...
        max_credits=max_credits
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-22 13:23:38,783 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:23:38,801 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 96, in submit_fukui_workflow
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 83, in submit_fukui_workflow
    result = rowan.workflow.submit_fukui_workflow(
        initial_molecule=molecule,
    ...<5 lines>...
        max_credits=max_credits
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ~~~~~~~~~~~~^
        "POST",
        ^^^^^^^
    ...<11 lines>...
        extensions=extensions,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
        method=method,
    ...<9 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
        method,
    ...<8 lines>...
        extensions=extensions,
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ~~~~~~~~~~~~~~^
        content=content,
        ^^^^^^^^^^^^^^^^
    ...<7 lines>...
        ),
        ^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ~~~~~~~~~~^
        json, ensure_ascii=False, separators=(",", ":"), allow_nan=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).encode("utf-8")
    ^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ~~~~~~^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 261, in iterencode
    return _iterencode(o, 0)
  File "/opt/homebrew/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
                    f'is not JSON serializable')
TypeError: Object of type Settings is not JSON serializable
2025-08-22 13:23:42,980 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:23:43,686 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 13:27:24,783 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 13:27:37,331 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 13:27:37,338 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 13:27:38,017 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 13:27:38,026 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 13:27:49,165 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:27:49,166 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-22 13:27:49,752 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-22 13:27:57,163 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:27:57,936 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 13:28:06,339 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:28:06,725 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cc67ee1d-c63e-473a-aefe-094a60660d25 "HTTP/1.1 200 OK"
2025-08-22 13:28:07,123 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/cc67ee1d-c63e-473a-aefe-094a60660d25 "HTTP/1.1 200 OK"
2025-08-22 13:28:12,492 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:28:13,144 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 13:28:17,738 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:28:18,126 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/35dae140-930a-4c66-adec-0328c5919a10 "HTTP/1.1 200 OK"
2025-08-22 13:28:18,498 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/35dae140-930a-4c66-adec-0328c5919a10 "HTTP/1.1 200 OK"
2025-08-22 13:28:24,065 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:28:24,662 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 13:28:28,629 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:28:28,992 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/dca164d6-6aad-4594-b329-fa0b1ad39237 "HTTP/1.1 200 OK"
2025-08-22 13:28:29,369 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/dca164d6-6aad-4594-b329-fa0b1ad39237 "HTTP/1.1 200 OK"
2025-08-22 13:28:34,770 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/dca164d6-6aad-4594-b329-fa0b1ad39237 "HTTP/1.1 200 OK"
2025-08-22 13:28:40,658 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:28:41,353 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 13:33:15,426 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 13:33:17,503 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 13:33:17,511 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 13:33:33,843 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:33:33,844 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: phenol
2025-08-22 13:33:34,409 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'phenol' to SMILES: Oc1ccccc1
2025-08-22 13:33:42,339 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:33:42,962 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 13:33:54,104 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:33:54,484 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:33:54,881 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:34:05,291 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:34:15,697 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:34:26,098 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:34:36,480 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:34:46,923 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:34:57,325 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:35:07,776 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:35:18,158 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:35:28,551 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:35:38,974 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:35:49,399 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:35:59,799 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:36:10,189 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:36:20,556 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:36:30,969 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:36:41,370 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:36:51,730 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:37:02,140 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:37:12,541 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:37:22,925 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:37:33,304 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:37:43,668 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:37:54,069 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:38:04,484 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:38:14,919 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:38:25,335 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:38:35,722 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:38:46,099 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:38:56,497 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:39:06,860 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:39:17,242 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/45629999-c378-47da-821b-65c17ef321c2 "HTTP/1.1 200 OK"
2025-08-22 13:39:19,728 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 13:39:22,011 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 13:39:22,019 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 13:39:36,507 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:39:36,980 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow?page=0&size=5 "HTTP/1.1 200 OK"
2025-08-22 13:39:37,000 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'list_workflows': 1 validation error for Workflow
object_data
  Input should be a valid dictionary [type=dict_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/dict_type
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        object,
        ^^^^^^^
    ...<5 lines>...
        by_name=by_name,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/workflow_management_v2.py", line 251, in list_workflows
    workflows = rowan.list_workflows(
        parent_uuid=parent_uuid,
    ...<6 lines>...
        size=size
    )
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/rowan/workflow.py", line 349, in list_workflows
    return [Workflow(**item) for item in response.json()["workflows"]]
            ~~~~~~~~^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.13/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for Workflow
object_data
  Input should be a valid dictionary [type=dict_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/dict_type
2025-08-22 13:48:25,370 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 13:48:28,480 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 13:48:28,487 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 13:48:34,434 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:48:34,916 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow?page=0&size=5 "HTTP/1.1 200 OK"
2025-08-22 13:48:35,094 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'list_workflows': 1 validation error for Workflow
object_data
  Input should be a valid dictionary [type=dict_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/dict_type
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/workflow_management_v2.py", line 251, in list_workflows
    return rowan.list_workflows(
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/rowan/workflow.py", line 349, in list_workflows
    return [Workflow(**item) for item in response.json()["workflows"]]
            ^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 1 validation error for Workflow
object_data
  Input should be a valid dictionary [type=dict_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/dict_type
2025-08-22 13:49:10,347 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow?page=0&size=5 "HTTP/1.1 200 OK"
2025-08-22 13:49:11,305 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow?page=0&size=3&object_type=conformer_search "HTTP/1.1 200 OK"
2025-08-22 13:50:02,559 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow?page=0&size=5 "HTTP/1.1 200 OK"
2025-08-22 13:50:03,233 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow?object_type=conformer_search&page=0&size=3 "HTTP/1.1 200 OK"
2025-08-22 13:50:03,615 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow?name_contains=xyz123unlikely&page=0&size=5 "HTTP/1.1 200 OK"
2025-08-22 13:50:49,079 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow?page=0&size=5 "HTTP/1.1 200 OK"
2025-08-22 13:50:50,930 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow?object_type=fukui&page=0&size=10 "HTTP/1.1 200 OK"
2025-08-22 13:50:51,730 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow?name_contains=Phenol&page=0&size=10 "HTTP/1.1 200 OK"
2025-08-22 13:51:42,638 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 13:51:46,055 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 13:51:46,063 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 13:51:51,787 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:51:52,218 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow?page=0&size=5 "HTTP/1.1 200 OK"
2025-08-22 13:54:55,669 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:54:55,704 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': submit_conformer_search_workflow() got an unexpected keyword argument 'transition_state'
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 120, in submit_conformer_search_workflow
    result = rowan.submit_conformer_search_workflow(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: submit_conformer_search_workflow() got an unexpected keyword argument 'transition_state'
2025-08-22 13:54:59,256 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:54:59,260 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': submit_conformer_search_workflow() got an unexpected keyword argument 'transition_state'
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 120, in submit_conformer_search_workflow
    result = rowan.submit_conformer_search_workflow(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: submit_conformer_search_workflow() got an unexpected keyword argument 'transition_state'
2025-08-22 13:55:02,411 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:55:02,418 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': submit_conformer_search_workflow() got an unexpected keyword argument 'transition_state'
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 120, in submit_conformer_search_workflow
    result = rowan.submit_conformer_search_workflow(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: submit_conformer_search_workflow() got an unexpected keyword argument 'transition_state'
2025-08-22 13:55:09,281 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:55:09,286 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_conformer_search_workflow': submit_conformer_search_workflow() got an unexpected keyword argument 'transition_state'
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_conformer_search_workflow.py", line 120, in submit_conformer_search_workflow
    result = rowan.submit_conformer_search_workflow(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: submit_conformer_search_workflow() got an unexpected keyword argument 'transition_state'
2025-08-22 13:55:11,876 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:56:59,452 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 13:57:02,695 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 13:57:02,703 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 13:57:13,910 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:57:14,768 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 13:57:23,973 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:57:24,341 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bffb3128-c93c-46e6-84f6-af23cf7cc6ce "HTTP/1.1 200 OK"
2025-08-22 13:57:24,713 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bffb3128-c93c-46e6-84f6-af23cf7cc6ce "HTTP/1.1 200 OK"
2025-08-22 13:57:29,834 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:57:31,118 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 13:57:35,503 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:57:35,889 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/60e57cb2-bb69-426f-b8cf-99f747040ef3 "HTTP/1.1 200 OK"
2025-08-22 13:57:36,267 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/60e57cb2-bb69-426f-b8cf-99f747040ef3 "HTTP/1.1 200 OK"
2025-08-22 13:57:42,304 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:57:42,944 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 13:57:48,075 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:57:48,712 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5bb8000e-9a66-4434-a164-f5e40732b0c7 "HTTP/1.1 200 OK"
2025-08-22 13:57:49,145 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5bb8000e-9a66-4434-a164-f5e40732b0c7 "HTTP/1.1 200 OK"
2025-08-22 13:57:54,565 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/5bb8000e-9a66-4434-a164-f5e40732b0c7 "HTTP/1.1 200 OK"
2025-08-22 13:58:00,950 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:58:01,593 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 13:58:07,218 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 13:58:07,592 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b88967b3-ca6a-4d4a-9ad3-0cee6e1611d4 "HTTP/1.1 200 OK"
2025-08-22 13:58:07,968 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b88967b3-ca6a-4d4a-9ad3-0cee6e1611d4 "HTTP/1.1 200 OK"
2025-08-22 13:58:18,412 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b88967b3-ca6a-4d4a-9ad3-0cee6e1611d4 "HTTP/1.1 200 OK"
2025-08-22 13:58:28,848 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b88967b3-ca6a-4d4a-9ad3-0cee6e1611d4 "HTTP/1.1 200 OK"
2025-08-22 13:58:39,245 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b88967b3-ca6a-4d4a-9ad3-0cee6e1611d4 "HTTP/1.1 200 OK"
2025-08-22 13:58:49,620 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/b88967b3-ca6a-4d4a-9ad3-0cee6e1611d4 "HTTP/1.1 200 OK"
2025-08-22 14:02:21,411 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 500 Internal Server Error"
2025-08-22 14:03:27,705 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 14:29:01,361 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 14:29:03,849 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 14:29:03,856 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 14:29:15,769 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 14:29:15,876 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 96, in submit_fukui_workflow
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 83, in submit_fukui_workflow
    result = rowan.workflow.submit_fukui_workflow(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
              ^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
           ^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
           ^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type Settings is not JSON serializable
2025-08-22 14:29:20,235 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 14:29:20,950 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 14:29:25,661 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 14:29:26,020 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bf355292-9c70-4dad-8879-421c849ab71a "HTTP/1.1 200 OK"
2025-08-22 14:29:26,397 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bf355292-9c70-4dad-8879-421c849ab71a "HTTP/1.1 200 OK"
2025-08-22 14:29:29,779 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bf355292-9c70-4dad-8879-421c849ab71a "HTTP/1.1 200 OK"
2025-08-22 14:29:33,167 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bf355292-9c70-4dad-8879-421c849ab71a "HTTP/1.1 200 OK"
2025-08-22 14:29:36,545 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bf355292-9c70-4dad-8879-421c849ab71a "HTTP/1.1 200 OK"
2025-08-22 14:29:39,948 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bf355292-9c70-4dad-8879-421c849ab71a "HTTP/1.1 200 OK"
2025-08-22 14:29:43,332 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/bf355292-9c70-4dad-8879-421c849ab71a "HTTP/1.1 200 OK"
2025-08-22 14:29:52,469 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 14:29:52,508 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_fukui_workflow': Object of type Settings is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 96, in submit_fukui_workflow
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_fukui_workflow.py", line 83, in submit_fukui_workflow
    result = rowan.workflow.submit_fukui_workflow(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/rowan/workflow.py", line 689, in submit_fukui_workflow
    response = client.post("/workflow", json=data)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
              ^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
           ^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
           ^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type Settings is not JSON serializable
2025-08-22 14:29:55,856 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 14:29:56,746 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 14:30:00,898 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 14:30:00,899 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'workflow_wait_for_result': [Errno 2] No such file or directory
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool.py", line 187, in run
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/pydantic/type_adapter.py", line 421, in validate_python
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/workflow_management_v2.py", line 66, in workflow_wait_for_result
    workflow = rowan.retrieve_workflow(workflow_uuid)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/rowan/workflow.py", line 282, in retrieve_workflow
  File "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/contextlib.py", line 137, in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/rowan/utils.py", line 47, in api_client
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_client.py", line 688, in __init__
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_client.py", line 731, in _init_transport
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_transports/default.py", line 153, in __init__
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_config.py", line 40, in create_ssl_context
  File "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ssl.py", line 707, in create_default_context
    context.load_verify_locations(cafile, capath, cadata)
FileNotFoundError: [Errno 2] No such file or directory
2025-08-22 14:30:04,368 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 14:30:04,370 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'workflow_get_status': [Errno 2] No such file or directory
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool.py", line 187, in run
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/pydantic/type_adapter.py", line 421, in validate_python
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/workflow_management_v2.py", line 22, in workflow_get_status
    workflow = rowan.retrieve_workflow(workflow_uuid)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/rowan/workflow.py", line 282, in retrieve_workflow
  File "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/contextlib.py", line 137, in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/rowan/utils.py", line 47, in api_client
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_client.py", line 688, in __init__
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_client.py", line 731, in _init_transport
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_transports/default.py", line 153, in __init__
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_config.py", line 40, in create_ssl_context
  File "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ssl.py", line 707, in create_default_context
    context.load_verify_locations(cafile, capath, cadata)
FileNotFoundError: [Errno 2] No such file or directory
2025-08-22 14:30:04,735 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 14:30:04,737 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'workflow_get_status': [Errno 2] No such file or directory
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/fastmcp/tools/tool.py", line 187, in run
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/pydantic/type_adapter.py", line 421, in validate_python
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/workflow_management_v2.py", line 22, in workflow_get_status
    workflow = rowan.retrieve_workflow(workflow_uuid)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/rowan/workflow.py", line 282, in retrieve_workflow
  File "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/contextlib.py", line 137, in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/rowan/utils.py", line 47, in api_client
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_client.py", line 688, in __init__
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_client.py", line 731, in _init_transport
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_transports/default.py", line 153, in __init__
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.12/site-packages/httpx/_config.py", line 40, in create_ssl_context
  File "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ssl.py", line 707, in create_default_context
    context.load_verify_locations(cafile, capath, cadata)
FileNotFoundError: [Errno 2] No such file or directory
2025-08-22 15:12:24,232 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 15:15:10,271 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 15:16:28,568 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 15:16:31,628 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 15:16:31,634 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 15:16:44,965 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:16:45,951 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:16:53,086 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:16:53,521 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1bf88196-0cae-4cad-b00f-9686950e1c60 "HTTP/1.1 200 OK"
2025-08-22 15:16:53,896 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1bf88196-0cae-4cad-b00f-9686950e1c60 "HTTP/1.1 200 OK"
2025-08-22 15:17:01,254 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:17:02,052 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:17:06,995 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:17:07,636 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:17:11,761 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:17:12,143 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2497aa9f-f21c-4940-a657-35601623e296 "HTTP/1.1 200 OK"
2025-08-22 15:17:12,537 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2497aa9f-f21c-4940-a657-35601623e296 "HTTP/1.1 200 OK"
2025-08-22 15:17:22,924 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2497aa9f-f21c-4940-a657-35601623e296 "HTTP/1.1 200 OK"
2025-08-22 15:17:27,564 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:17:27,935 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2497aa9f-f21c-4940-a657-35601623e296 "HTTP/1.1 200 OK"
2025-08-22 15:17:28,333 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/2497aa9f-f21c-4940-a657-35601623e296 "HTTP/1.1 200 OK"
2025-08-22 15:17:34,269 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:17:34,632 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3cbaec7-fe3d-476c-8d19-be3425164c7d "HTTP/1.1 200 OK"
2025-08-22 15:17:35,072 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/f3cbaec7-fe3d-476c-8d19-be3425164c7d "HTTP/1.1 200 OK"
2025-08-22 15:19:33,069 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 15:19:33,191 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 15:19:33,197 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 15:19:41,152 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:19:41,849 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:19:48,848 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:19:49,246 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/db52ae6d-bd47-4ac3-a5de-5fdaa8dd42c9 "HTTP/1.1 200 OK"
2025-08-22 15:19:49,625 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/db52ae6d-bd47-4ac3-a5de-5fdaa8dd42c9 "HTTP/1.1 200 OK"
2025-08-22 15:19:55,032 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/db52ae6d-bd47-4ac3-a5de-5fdaa8dd42c9 "HTTP/1.1 200 OK"
2025-08-22 15:20:03,297 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:20:03,764 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/calculation/86a55017-d126-461e-8b5b-075ba5dd23f4/molecules "HTTP/1.1 200 OK"
2025-08-22 15:20:04,692 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:20:05,361 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:20:12,090 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:20:12,473 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1733e542-71fc-4b43-8537-6bc3c665ba5a "HTTP/1.1 200 OK"
2025-08-22 15:20:12,848 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1733e542-71fc-4b43-8537-6bc3c665ba5a "HTTP/1.1 200 OK"
2025-08-22 15:20:18,255 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1733e542-71fc-4b43-8537-6bc3c665ba5a "HTTP/1.1 200 OK"
2025-08-22 15:21:11,982 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:21:12,013 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: glucose
2025-08-22 15:21:13,268 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'glucose' to SMILES: OC[C@@H](O)[C@@H](O)[C@H](O)[C@@H](O)C=O
2025-08-22 15:21:19,137 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:21:19,838 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:21:27,159 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:21:27,539 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:21:27,932 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:21:38,334 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:21:48,860 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:21:59,506 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:22:10,099 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:22:20,675 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:22:31,276 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:22:41,829 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:22:52,599 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:23:03,173 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:23:13,751 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:23:24,408 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:23:34,982 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:23:45,597 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:23:56,164 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:24:06,767 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:24:17,333 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:24:27,931 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:24:38,512 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:24:49,092 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:24:59,644 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:25:10,238 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:25:20,868 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:25:31,429 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:25:33,266 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:25:33,857 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:25:34,429 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:25:35,121 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:25:35,823 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:25:36,666 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:25:37,177 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:25:42,044 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:25:52,639 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:26:03,242 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:26:13,784 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:26:24,348 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:26:34,904 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:26:45,452 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:26:56,012 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:27:06,777 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:27:17,421 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:27:28,057 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:27:38,659 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:27:39,467 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:27:40,089 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:27:40,754 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:27:41,456 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:27:42,188 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:27:42,912 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:27:43,616 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:27:44,343 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:27:45,061 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:27:45,579 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:27:46,291 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:27:46,825 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:27:49,243 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:27:59,814 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:28:10,415 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:28:21,117 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:28:31,674 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:28:42,316 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:28:52,951 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:29:03,545 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:29:14,126 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:29:24,709 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:29:35,322 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:29:45,872 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:29:56,434 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:30:07,025 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:30:11,866 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:12,600 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:13,318 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:14,023 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:17,593 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:30:28,179 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:30:38,778 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:30:47,248 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:47,956 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:48,523 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:49,095 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:49,373 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:30:49,855 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:50,579 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:51,348 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:52,076 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:52,848 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:53,368 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:54,059 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:54,595 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:30:55,265 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:31:00,002 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:31:10,607 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:31:21,256 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:31:31,885 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:31:42,517 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:31:53,149 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:32:03,760 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:32:14,342 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:32:24,906 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:32:35,492 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:32:46,082 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:32:56,654 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:33:07,256 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/13a7132b-6d41-4240-99f3-7b7b1723e6f6 "HTTP/1.1 200 OK"
2025-08-22 15:33:11,630 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 15:33:13,138 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 15:33:13,145 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 15:35:02,798 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1CA2 "HTTP/1.1 200 OK"
2025-08-22 15:35:04,146 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 15:35:04,953 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/d7ef3176-26bd-4d28-8dc8-77151e8322d1 "HTTP/1.1 500 Internal Server Error"
2025-08-22 15:35:05,542 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:39:02,067 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:39:02,710 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:39:03,347 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:43:52,665 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-22 15:43:53,986 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 15:43:54,684 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/3f966f5f-c9bb-419b-a10a-bdbc2144a871 "HTTP/1.1 500 Internal Server Error"
2025-08-22 15:46:00,422 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:46:01,145 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:46:01,752 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:46:02,590 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:46:03,058 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HEW "HTTP/1.1 200 OK"
2025-08-22 15:46:03,979 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 15:46:05,656 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/a39d368f-262d-44ad-b7bd-fedaf55a06ca "HTTP/1.1 500 Internal Server Error"
2025-08-22 15:46:06,249 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:46:46,776 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:46:47,465 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:46:48,065 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:46:48,725 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:46:49,460 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:46:50,282 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:46:50,734 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HEW "HTTP/1.1 200 OK"
2025-08-22 15:46:51,609 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 15:46:52,345 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/28865387-fa44-47a4-a03d-c084f5d9cb88 "HTTP/1.1 500 Internal Server Error"
2025-08-22 15:46:52,869 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:50:33,433 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 15:50:35,541 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 15:50:35,549 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 15:50:47,246 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:50:47,247 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-22 15:50:48,207 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-22 15:50:48,326 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:50:51,041 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1CX2 "HTTP/1.1 200 OK"
2025-08-22 15:50:57,983 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 15:51:03,224 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:51:04,022 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/393aacc3-4a84-4d9b-98e1-6d887852f95d "HTTP/1.1 500 Internal Server Error"
2025-08-22 15:51:04,023 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'sanitize_protein': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/393aacc3-4a84-4d9b-98e1-6d887852f95d'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 319, in sanitize_protein
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 249, in sanitize_protein
    protein = rowan.retrieve_protein(uuid)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/rowan/protein.py", line 129, in retrieve_protein
    response.raise_for_status()
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/393aacc3-4a84-4d9b-98e1-6d887852f95d'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-22 15:51:07,834 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:51:10,788 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=3LN1 "HTTP/1.1 200 OK"
2025-08-22 15:51:16,338 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 15:51:19,216 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:51:19,955 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/62f49ca6-4f03-4355-8349-b5209c244140 "HTTP/1.1 500 Internal Server Error"
2025-08-22 15:51:19,956 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'sanitize_protein': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/62f49ca6-4f03-4355-8349-b5209c244140'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 319, in sanitize_protein
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 249, in sanitize_protein
    protein = rowan.retrieve_protein(uuid)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/rowan/protein.py", line 129, in retrieve_protein
    response.raise_for_status()
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/62f49ca6-4f03-4355-8349-b5209c244140'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-22 15:51:27,638 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:51:28,299 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:51:36,055 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:51:36,428 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0896ea98-d5c7-4698-ab1b-0b1f63d0680f "HTTP/1.1 200 OK"
2025-08-22 15:51:36,827 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0896ea98-d5c7-4698-ab1b-0b1f63d0680f "HTTP/1.1 200 OK"
2025-08-22 15:51:37,227 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0896ea98-d5c7-4698-ab1b-0b1f63d0680f "HTTP/1.1 200 OK"
2025-08-22 15:56:17,906 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 15:56:19,473 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 15:56:19,481 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 15:56:29,827 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:56:29,827 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-22 15:56:30,426 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-22 15:57:16,019 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:57:18,917 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=5IKT "HTTP/1.1 200 OK"
2025-08-22 15:57:25,053 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 15:57:29,342 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:57:30,033 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/7aadc2f5-9617-4ec2-ab1f-c4ea05b4bba0 "HTTP/1.1 500 Internal Server Error"
2025-08-22 15:57:30,034 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'sanitize_protein': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/7aadc2f5-9617-4ec2-ab1f-c4ea05b4bba0'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 261, in sanitize_protein
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 240, in sanitize_protein
    protein = rowan.retrieve_protein(uuid)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/rowan/protein.py", line 129, in retrieve_protein
    response.raise_for_status()
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/7aadc2f5-9617-4ec2-ab1f-c4ea05b4bba0'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-22 15:57:47,323 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:57:48,444 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1CX2 "HTTP/1.1 200 OK"
2025-08-22 15:57:54,336 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'create_protein_from_pdb_id': The write operation timed out
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 101, in map_httpcore_exceptions
    yield
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 256, in handle_request
    raise exc from None
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 103, in handle_request
    return self._connection.handle_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 136, in handle_request
    raise exc
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 88, in handle_request
    self._send_request_body(**kwargs)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 159, in _send_request_body
    self._send_event(event, timeout=timeout)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 166, in _send_event
    self._network_stream.write(bytes_to_send, timeout=timeout)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 135, in write
    with map_exceptions(exc_map):
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.WriteTimeout: The write operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 71, in create_protein_from_pdb_id
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 53, in create_protein_from_pdb_id
    protein = rowan.create_protein_from_pdb_id(name=name, code=code)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/rowan/protein.py", line 211, in create_protein_from_pdb_id
    final_response = client.post("/protein", json=creation_payload)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 825, in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.WriteTimeout: The write operation timed out
2025-08-22 15:57:57,550 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:57:59,618 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=5F19 "HTTP/1.1 200 OK"
2025-08-22 15:58:04,894 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 15:58:08,122 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:58:08,887 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/3e1df47d-a005-4ad8-8092-f892f872f5d7 "HTTP/1.1 500 Internal Server Error"
2025-08-22 15:58:08,888 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'sanitize_protein': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/3e1df47d-a005-4ad8-8092-f892f872f5d7'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 261, in sanitize_protein
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 240, in sanitize_protein
    protein = rowan.retrieve_protein(uuid)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/rowan/protein.py", line 129, in retrieve_protein
    response.raise_for_status()
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/3e1df47d-a005-4ad8-8092-f892f872f5d7'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-22 15:58:15,577 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:58:16,159 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 15:58:23,285 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 15:58:23,655 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0175fe39-06de-42d6-8822-4ba15cba406f "HTTP/1.1 200 OK"
2025-08-22 15:58:24,038 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0175fe39-06de-42d6-8822-4ba15cba406f "HTTP/1.1 200 OK"
2025-08-22 15:58:24,417 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/0175fe39-06de-42d6-8822-4ba15cba406f "HTTP/1.1 200 OK"
2025-08-22 16:00:52,223 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 16:00:52,867 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 16:00:53,543 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 16:03:05,880 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 16:19:46,905 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-22 16:19:48,578 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 16:19:49,298 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/4b8c4f93-2c09-49e1-a82f-d8cad77deb74 "HTTP/1.1 500 Internal Server Error"
2025-08-22 16:19:49,903 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 16:39:18,862 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-22 16:39:20,363 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 16:39:21,164 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/5366f954-b938-48b3-b416-74d4672568f5 "HTTP/1.1 500 Internal Server Error"
2025-08-22 16:39:21,780 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 16:39:46,735 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-22 16:39:48,310 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 16:39:51,452 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/655729b6-c234-43e3-802d-0a51a8728fe8 "HTTP/1.1 500 Internal Server Error"
2025-08-22 16:39:52,068 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 16:40:54,498 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-22 16:40:55,984 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 16:40:58,757 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 16:41:21,648 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-22 16:41:23,130 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 16:41:26,302 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein/sanitize/65851db6-0536-48c4-9454-c6e4aaea6136 "HTTP/1.1 500 Internal Server Error"
2025-08-22 16:41:26,899 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 16:42:03,644 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-22 16:42:05,020 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 16:42:07,778 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein/sanitize/65d2e9b8-2d5f-4f10-b9c5-3bdb345fdcca "HTTP/1.1 500 Internal Server Error"
2025-08-22 16:42:08,351 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 16:42:18,734 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/376f7d82-05b3-494f-8df5-4305e246483e "HTTP/1.1 200 OK"
2025-08-22 16:47:52,049 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-22 16:47:53,387 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 16:47:56,087 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 16:48:06,446 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/1cf3b19f-f40a-4c57-a5b9-84b88d7bfb4f "HTTP/1.1 200 OK"
2025-08-22 16:52:23,828 - mcp.server.lowlevel.server - INFO - Processing request of type ListResourcesRequest
2025-08-22 16:52:25,819 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 16:53:30,585 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 16:53:31,288 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 17:07:42,680 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 17:10:01,306 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 17:10:01,342 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 17:10:12,116 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:10:12,120 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-22 17:10:12,867 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-22 17:10:18,474 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:10:21,170 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1CX2 "HTTP/1.1 200 OK"
2025-08-22 17:10:27,195 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'create_protein_from_pdb_id': The write operation timed out
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 101, in map_httpcore_exceptions
    yield
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 256, in handle_request
    raise exc from None
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 103, in handle_request
    return self._connection.handle_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 136, in handle_request
    raise exc
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 88, in handle_request
    self._send_request_body(**kwargs)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 159, in _send_request_body
    self._send_event(event, timeout=timeout)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 166, in _send_event
    self._network_stream.write(bytes_to_send, timeout=timeout)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 135, in write
    with map_exceptions(exc_map):
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.WriteTimeout: The write operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 71, in create_protein_from_pdb_id
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 53, in create_protein_from_pdb_id
    protein = rowan.create_protein_from_pdb_id(name=name, code=code)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/rowan/protein.py", line 211, in create_protein_from_pdb_id
    final_response = client.post("/protein", json=creation_payload)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 825, in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.WriteTimeout: The write operation timed out
2025-08-22 17:10:31,050 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:10:33,354 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=5KIR "HTTP/1.1 200 OK"
2025-08-22 17:10:39,269 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'create_protein_from_pdb_id': The write operation timed out
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 101, in map_httpcore_exceptions
    yield
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 256, in handle_request
    raise exc from None
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 103, in handle_request
    return self._connection.handle_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 136, in handle_request
    raise exc
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 88, in handle_request
    self._send_request_body(**kwargs)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 159, in _send_request_body
    self._send_event(event, timeout=timeout)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 166, in _send_event
    self._network_stream.write(bytes_to_send, timeout=timeout)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 135, in write
    with map_exceptions(exc_map):
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.WriteTimeout: The write operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 71, in create_protein_from_pdb_id
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 53, in create_protein_from_pdb_id
    protein = rowan.create_protein_from_pdb_id(name=name, code=code)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/rowan/protein.py", line 211, in create_protein_from_pdb_id
    final_response = client.post("/protein", json=creation_payload)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 825, in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.WriteTimeout: The write operation timed out
2025-08-22 17:10:42,644 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:10:44,969 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=3LN1 "HTTP/1.1 200 OK"
2025-08-22 17:10:50,846 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'create_protein_from_pdb_id': The write operation timed out
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 101, in map_httpcore_exceptions
    yield
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 256, in handle_request
    raise exc from None
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 103, in handle_request
    return self._connection.handle_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 136, in handle_request
    raise exc
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 88, in handle_request
    self._send_request_body(**kwargs)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 159, in _send_request_body
    self._send_event(event, timeout=timeout)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 166, in _send_event
    self._network_stream.write(bytes_to_send, timeout=timeout)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 135, in write
    with map_exceptions(exc_map):
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.WriteTimeout: The write operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 71, in create_protein_from_pdb_id
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 53, in create_protein_from_pdb_id
    protein = rowan.create_protein_from_pdb_id(name=name, code=code)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/rowan/protein.py", line 211, in create_protein_from_pdb_id
    final_response = client.post("/protein", json=creation_payload)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 825, in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.WriteTimeout: The write operation timed out
2025-08-22 17:10:53,933 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:10:54,546 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein?page=0&size=10 "HTTP/1.1 200 OK"
2025-08-22 17:11:00,809 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:11:01,335 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein/sanitize/3e1df47d-a005-4ad8-8092-f892f872f5d7 "HTTP/1.1 200 OK"
2025-08-22 17:11:08,591 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:11:08,592 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': [Errno 2] No such file or directory: '1ema.pdb'
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 44, in open
    with builtins.open(path) as f:
         ^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_docking_workflow.py", line 90, in submit_docking_workflow
    protein = read_pdb("1ema.pdb")
              ^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/pdb.py", line 200, in read_pdb
    return PDB.model_validate(astj.open(str(path), data_dict=True))
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 47, in open
    with builtins.open(path, "rb") as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'
2025-08-22 17:11:12,573 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:11:13,186 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein/sanitize/393aacc3-4a84-4d9b-98e1-6d887852f95d "HTTP/1.1 200 OK"
2025-08-22 17:11:16,702 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:11:16,702 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': [Errno 2] No such file or directory: '1ema.pdb'
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 44, in open
    with builtins.open(path) as f:
         ^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_docking_workflow.py", line 90, in submit_docking_workflow
    protein = read_pdb("1ema.pdb")
              ^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/pdb.py", line 200, in read_pdb
    return PDB.model_validate(astj.open(str(path), data_dict=True))
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 47, in open
    with builtins.open(path, "rb") as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'
2025-08-22 17:11:20,261 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:11:21,093 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/393aacc3-4a84-4d9b-98e1-6d887852f95d "HTTP/1.1 200 OK"
2025-08-22 17:11:25,345 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:11:27,833 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1PXX "HTTP/1.1 200 OK"
2025-08-22 17:11:33,668 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 17:11:36,623 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:11:37,395 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein/sanitize/f3b8d434-74a7-4650-a603-c35a1c74fd63 "HTTP/1.1 500 Internal Server Error"
2025-08-22 17:11:37,396 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'sanitize_protein': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/sanitize/f3b8d434-74a7-4650-a603-c35a1c74fd63'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 254, in sanitize_protein
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 245, in sanitize_protein
    response.raise_for_status()
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/sanitize/f3b8d434-74a7-4650-a603-c35a1c74fd63'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-22 17:11:47,483 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:11:47,484 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-22 17:11:48,034 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-22 17:11:48,161 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:11:49,114 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1CX2 "HTTP/1.1 200 OK"
2025-08-22 17:11:55,093 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'create_protein_from_pdb_id': The write operation timed out
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 101, in map_httpcore_exceptions
    yield
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 256, in handle_request
    raise exc from None
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 103, in handle_request
    return self._connection.handle_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 136, in handle_request
    raise exc
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 88, in handle_request
    self._send_request_body(**kwargs)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 159, in _send_request_body
    self._send_event(event, timeout=timeout)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 166, in _send_event
    self._network_stream.write(bytes_to_send, timeout=timeout)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 135, in write
    with map_exceptions(exc_map):
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.WriteTimeout: The write operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 71, in create_protein_from_pdb_id
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 53, in create_protein_from_pdb_id
    protein = rowan.create_protein_from_pdb_id(name=name, code=code)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/rowan/protein.py", line 211, in create_protein_from_pdb_id
    final_response = client.post("/protein", json=creation_payload)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 825, in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.WriteTimeout: The write operation timed out
2025-08-22 17:12:00,181 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 17:12:04,450 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 17:12:04,456 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-08-22 17:12:16,066 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:12:16,067 - rowan_mcp.functions_v2.molecule_lookup - INFO - Looking up molecule: aspirin
2025-08-22 17:12:16,648 - rowan_mcp.functions_v2.molecule_lookup - INFO - Successfully converted 'aspirin' to SMILES: CC(=O)Oc1ccccc1C(O)=O
2025-08-22 17:12:16,771 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:12:17,890 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1CX2 "HTTP/1.1 200 OK"
2025-08-22 17:12:23,789 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'create_protein_from_pdb_id': The write operation timed out
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 101, in map_httpcore_exceptions
    yield
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 256, in handle_request
    raise exc from None
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 103, in handle_request
    return self._connection.handle_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 136, in handle_request
    raise exc
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 88, in handle_request
    self._send_request_body(**kwargs)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 159, in _send_request_body
    self._send_event(event, timeout=timeout)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 166, in _send_event
    self._network_stream.write(bytes_to_send, timeout=timeout)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 135, in write
    with map_exceptions(exc_map):
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.WriteTimeout: The write operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 71, in create_protein_from_pdb_id
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 53, in create_protein_from_pdb_id
    protein = rowan.create_protein_from_pdb_id(name=name, code=code)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/rowan/protein.py", line 211, in create_protein_from_pdb_id
    final_response = client.post("/protein", json=creation_payload)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 825, in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_transports/default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.WriteTimeout: The write operation timed out
2025-08-22 17:12:28,638 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:12:29,664 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=5KIR "HTTP/1.1 200 OK"
2025-08-22 17:12:36,442 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 17:12:39,762 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:12:41,587 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein/sanitize/1add47fd-2d89-4104-bf81-183b32fb7d59 "HTTP/1.1 500 Internal Server Error"
2025-08-22 17:12:41,588 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'sanitize_protein': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/sanitize/1add47fd-2d89-4104-bf81-183b32fb7d59'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 254, in sanitize_protein
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 245, in sanitize_protein
    response.raise_for_status()
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/sanitize/1add47fd-2d89-4104-bf81-183b32fb7d59'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-22 17:12:52,944 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:12:52,945 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': [Errno 2] No such file or directory: '1ema.pdb'
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 44, in open
    with builtins.open(path) as f:
         ^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_docking_workflow.py", line 90, in submit_docking_workflow
    protein = read_pdb("./1ema.pdb")
              ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/pdb.py", line 200, in read_pdb
    return PDB.model_validate(astj.open(str(path), data_dict=True))
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 47, in open
    with builtins.open(path, "rb") as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'
2025-08-22 17:12:57,025 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:12:57,789 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/1add47fd-2d89-4104-bf81-183b32fb7d59 "HTTP/1.1 500 Internal Server Error"
2025-08-22 17:12:57,790 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'retrieve_protein': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/1add47fd-2d89-4104-bf81-183b32fb7d59'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 107, in retrieve_protein
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 86, in retrieve_protein
    protein = rowan.retrieve_protein(uuid)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/rowan/protein.py", line 129, in retrieve_protein
    response.raise_for_status()
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/1add47fd-2d89-4104-bf81-183b32fb7d59'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-22 17:13:01,210 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:13:03,303 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=3LN1 "HTTP/1.1 200 OK"
2025-08-22 17:13:10,734 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 17:13:14,126 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:13:14,855 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein/sanitize/415c987a-167a-4dc8-9ca6-b9a4969e9db7 "HTTP/1.1 500 Internal Server Error"
2025-08-22 17:13:14,856 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'sanitize_protein': Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/sanitize/415c987a-167a-4dc8-9ca6-b9a4969e9db7'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 254, in sanitize_protein
    raise e
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/protein_management.py", line 245, in sanitize_protein
    response.raise_for_status()
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/sanitize/415c987a-167a-4dc8-9ca6-b9a4969e9db7'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-22 17:13:20,503 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:13:20,504 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': [Errno 2] No such file or directory: '1ema.pdb'
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 44, in open
    with builtins.open(path) as f:
         ^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_docking_workflow.py", line 90, in submit_docking_workflow
    protein = read_pdb("./1ema.pdb")
              ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/pdb.py", line 200, in read_pdb
    return PDB.model_validate(astj.open(str(path), data_dict=True))
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 47, in open
    with builtins.open(path, "rb") as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'
2025-08-22 17:13:23,796 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:13:24,220 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein?page=0&size=10 "HTTP/1.1 200 OK"
2025-08-22 17:13:29,889 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:13:29,890 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': [Errno 2] No such file or directory: '1ema.pdb'
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 44, in open
    with builtins.open(path) as f:
         ^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_docking_workflow.py", line 90, in submit_docking_workflow
    protein = read_pdb("./1ema.pdb")
              ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/pdb.py", line 200, in read_pdb
    return PDB.model_validate(astj.open(str(path), data_dict=True))
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 47, in open
    with builtins.open(path, "rb") as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'
2025-08-22 17:13:34,815 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:13:34,815 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': [Errno 2] No such file or directory: '1ema.pdb'
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 44, in open
    with builtins.open(path) as f:
         ^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_docking_workflow.py", line 90, in submit_docking_workflow
    protein = read_pdb("./1ema.pdb")
              ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/pdb.py", line 200, in read_pdb
    return PDB.model_validate(astj.open(str(path), data_dict=True))
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 47, in open
    with builtins.open(path, "rb") as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'
2025-08-22 17:13:39,022 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:13:40,876 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1EQG "HTTP/1.1 200 OK"
2025-08-22 17:13:44,283 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 17:13:48,767 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:13:48,768 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': [Errno 2] No such file or directory: '1ema.pdb'
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 44, in open
    with builtins.open(path) as f:
         ^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_docking_workflow.py", line 90, in submit_docking_workflow
    protein = read_pdb("./1ema.pdb")
              ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/pdb.py", line 200, in read_pdb
    return PDB.model_validate(astj.open(str(path), data_dict=True))
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 47, in open
    with builtins.open(path, "rb") as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'
2025-08-22 17:13:53,957 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:13:53,957 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': [Errno 2] No such file or directory: '1ema.pdb'
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 44, in open
    with builtins.open(path) as f:
         ^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_docking_workflow.py", line 90, in submit_docking_workflow
    protein = read_pdb("./1ema.pdb")
              ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/pdb.py", line 200, in read_pdb
    return PDB.model_validate(astj.open(str(path), data_dict=True))
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/stjames/atomium_stjames/utilities.py", line 47, in open
    with builtins.open(path, "rb") as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '1ema.pdb'
2025-08-22 17:14:50,277 - rowan_mcp.server - INFO - Received signal 2, initiating shutdown...
2025-08-22 17:14:50,298 - rowan_mcp.server - INFO - Performing cleanup...
2025-08-22 17:14:50,298 - rowan_mcp.server - INFO - Cleanup complete
2025-08-22 17:14:50,299 - rowan_mcp.server - INFO - Performing cleanup...
2025-08-22 17:14:50,299 - rowan_mcp.server - INFO - Cleanup complete
2025-08-22 17:14:52,589 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 17:15:04,816 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 17:15:17,087 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:15:17,092 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': 2 validation errors for call[submit_docking_workflow]
protein
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'kld...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
pocket
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'kld...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for call[submit_docking_workflow]
protein
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'kld...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
pocket
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'kld...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
2025-08-22 17:16:10,638 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:16:10,665 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': 2 validation errors for call[submit_docking_workflow]
protein
  Missing required argument [type=missing_argument, input_value={'initial_molecule': '0',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
pocket
  Missing required argument [type=missing_argument, input_value={'initial_molecule': '0',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for call[submit_docking_workflow]
protein
  Missing required argument [type=missing_argument, input_value={'initial_molecule': '0',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
pocket
  Missing required argument [type=missing_argument, input_value={'initial_molecule': '0',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
2025-08-22 17:16:14,729 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:16:14,730 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': 2 validation errors for call[submit_docking_workflow]
protein
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'O',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
pocket
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'O',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for call[submit_docking_workflow]
protein
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'O',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
pocket
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'O',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
2025-08-22 17:16:45,330 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:16:45,332 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': 2 validation errors for call[submit_docking_workflow]
protein
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'O',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
pocket
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'O',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for call[submit_docking_workflow]
protein
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'O',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
pocket
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'O',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
2025-08-22 17:17:07,887 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:17:07,888 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': 2 validation errors for call[submit_docking_workflow]
protein
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'O',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
pocket
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'O',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for call[submit_docking_workflow]
protein
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'O',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
pocket
  Missing required argument [type=missing_argument, input_value={'initial_molecule': 'O',...None, 'blocking': False}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing_argument
2025-08-22 17:17:36,864 - rowan_mcp.server - INFO - Received signal 2, initiating shutdown...
2025-08-22 17:17:36,864 - rowan_mcp.server - INFO - Performing cleanup...
2025-08-22 17:17:36,864 - rowan_mcp.server - INFO - Cleanup complete
2025-08-22 17:17:36,864 - rowan_mcp.server - INFO - Performing cleanup...
2025-08-22 17:17:36,864 - rowan_mcp.server - INFO - Cleanup complete
2025-08-22 17:17:48,165 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 17:18:05,494 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 17:18:09,092 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:18:09,140 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': name 'name' is not defined
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_docking_workflow.py", line 99, in submit_docking_workflow
    name=name,
         ^^^^
NameError: name 'name' is not defined
2025-08-22 17:18:42,858 - rowan_mcp.server - INFO - Received signal 2, initiating shutdown...
2025-08-22 17:18:42,885 - rowan_mcp.server - INFO - Performing cleanup...
2025-08-22 17:18:42,886 - rowan_mcp.server - INFO - Cleanup complete
2025-08-22 17:18:42,886 - rowan_mcp.server - INFO - Performing cleanup...
2025-08-22 17:18:42,886 - rowan_mcp.server - INFO - Cleanup complete
2025-08-22 17:18:44,232 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 17:18:59,606 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 17:19:01,678 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:19:01,763 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': Object of type PDB is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_docking_workflow.py", line 93, in submit_docking_workflow
    workflow = rowan.submit_docking_workflow(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/rowan/workflow.py", line 1049, in submit_docking_workflow
    response = client.post("/workflow", json=data)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
              ^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
           ^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
           ^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ^^^^^^^^^^^
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/json/encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type PDB is not JSON serializable
2025-08-22 17:24:30,191 - rowan_mcp.server - INFO - Received signal 2, initiating shutdown...
2025-08-22 17:24:30,219 - rowan_mcp.server - INFO - Performing cleanup...
2025-08-22 17:24:30,219 - rowan_mcp.server - INFO - Cleanup complete
2025-08-22 17:24:30,226 - rowan_mcp.server - INFO - Performing cleanup...
2025-08-22 17:24:30,227 - rowan_mcp.server - INFO - Cleanup complete
2025-08-22 17:24:33,348 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 17:24:47,654 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 17:24:51,001 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:24:51,745 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 17:24:51,747 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': name 'blocking' is not defined
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_docking_workflow.py", line 104, in submit_docking_workflow
    if blocking:
       ^^^^^^^^
NameError: name 'blocking' is not defined
2025-08-22 17:25:33,236 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 17:25:41,576 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 17:25:43,466 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:25:44,225 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 17:29:02,232 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 17:29:14,659 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 17:29:20,220 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:29:20,977 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 17:31:52,615 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 17:32:02,732 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 17:32:05,313 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:32:05,314 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': module 'rowan' has no attribute 'default_project'
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_docking_workflow.py", line 92, in submit_docking_workflow
    "CDK2", "1HCK", project_uuid=rowan.default_project().uuid
                                 ^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'rowan' has no attribute 'default_project'
2025-08-22 17:32:36,868 - rowan_mcp.server - INFO - Received signal 2, initiating shutdown...
2025-08-22 17:32:36,894 - rowan_mcp.server - INFO - Performing cleanup...
2025-08-22 17:32:36,894 - rowan_mcp.server - INFO - Cleanup complete
2025-08-22 17:32:36,895 - rowan_mcp.server - INFO - Performing cleanup...
2025-08-22 17:32:36,895 - rowan_mcp.server - INFO - Cleanup complete
2025-08-22 17:32:38,429 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 17:36:23,676 - rowan_mcp.server - INFO - Received signal 2, initiating shutdown...
2025-08-22 17:36:23,704 - rowan_mcp.server - INFO - Performing cleanup...
2025-08-22 17:36:23,704 - rowan_mcp.server - INFO - Cleanup complete
2025-08-22 17:36:23,712 - rowan_mcp.server - INFO - Performing cleanup...
2025-08-22 17:36:23,712 - rowan_mcp.server - INFO - Cleanup complete
2025-08-22 17:36:25,627 - FastMCP.fastmcp.server.server - INFO - Starting MCP server 'Rowan MCP Server' with transport 'sse' on http://127.0.0.1:6276/sse
2025-08-22 17:36:38,869 - mcp.server.lowlevel.server - INFO - Processing request of type ListResourcesRequest
2025-08-22 17:36:42,599 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-08-22 17:36:51,442 - mcp.server.lowlevel.server - INFO - Processing request of type CallToolRequest
2025-08-22 17:36:51,619 - FastMCP.fastmcp.tools.tool_manager - ERROR - Error calling tool 'submit_docking_workflow': Object of type PDB is not JSON serializable
Traceback (most recent call last):
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool_manager.py", line 131, in call_tool
    return await tool.run(arguments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/fastmcp/tools/tool.py", line 187, in run
    result = type_adapter.validate_python(arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/pydantic/type_adapter.py", line 421, in validate_python
    return self.validator.validate_python(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/rowan_mcp/functions_v2/submit_docking_workflow.py", line 96, in submit_docking_workflow
    workflow = rowan.submit_docking_workflow(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/rowan/workflow.py", line 1049, in submit_docking_workflow
    response = client.post("/workflow", json=data)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 1144, in post
    return self.request(
           ^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 812, in request
    request = self.build_request(
              ^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_client.py", line 378, in build_request
    return Request(
           ^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_models.py", line 408, in __init__
    headers, stream = encode_request(
                      ^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_content.py", line 216, in encode_request
    return encode_json(json)
           ^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/Desktop/sandbox/rowan-mcp/.venv/lib/python3.11/site-packages/httpx/_content.py", line 177, in encode_json
    body = json_dumps(
           ^^^^^^^^^^^
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/json/encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "/Users/katherineyenko/.local/share/uv/python/cpython-3.11.13-macos-aarch64-none/lib/python3.11/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type PDB is not JSON serializable
2025-08-22 17:43:18,204 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Creating protein from PDB ID: 1HCK
2025-08-22 17:46:15,300 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Creating protein from PDB ID: 1HCK
2025-08-22 17:46:52,364 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Creating protein from PDB ID: 1HCK
2025-08-22 17:46:52,931 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-22 17:46:54,311 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 17:46:54,453 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Created protein with UUID: e6b65743-b03e-44da-ad5a-70c6952f440e
2025-08-22 17:46:54,453 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Sanitizing protein for docking...
2025-08-22 17:46:55,101 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein/sanitize/e6b65743-b03e-44da-ad5a-70c6952f440e "HTTP/1.1 500 Internal Server Error"
2025-08-22 17:47:35,077 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Creating protein from PDB ID: 1HCK
2025-08-22 17:47:35,610 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-22 17:47:36,875 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-22 17:47:36,999 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Created protein with UUID: 9c9c894a-63ae-4172-9796-5c0a376f0b57
2025-08-22 17:47:36,999 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Sanitizing protein for docking...
2025-08-22 17:47:37,597 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein/sanitize/9c9c894a-63ae-4172-9796-5c0a376f0b57 "HTTP/1.1 500 Internal Server Error"
2025-08-22 17:47:37,599 - rowan_mcp.functions_v2.submit_docking_workflow - WARNING - Sanitization failed: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/sanitize/9c9c894a-63ae-4172-9796-5c0a376f0b57'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-22 17:47:37,599 - rowan_mcp.functions_v2.submit_docking_workflow - WARNING - Proceeding without sanitization - docking may fail if protein needs sanitization
2025-08-22 17:47:37,599 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Submitting docking workflow: Test Docking - CDK2 with PDB ID Input
2025-08-22 17:47:38,220 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-22 17:47:38,220 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Docking workflow submitted with UUID: 9d705953-8efa-4e73-a4a5-645c040f76fc
2025-08-22 17:47:48,592 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/9d705953-8efa-4e73-a4a5-645c040f76fc "HTTP/1.1 200 OK"
2025-08-23 12:47:15,265 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Creating protein from PDB ID: 1HCK
2025-08-23 12:47:15,287 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Could not get default project: module 'rowan' has no attribute 'default_project'
2025-08-23 12:47:15,287 - rowan_mcp.functions_v2.submit_docking_workflow - ERROR - Failed to get/create project: module 'rowan' has no attribute 'list_projects'
2025-08-23 12:48:09,532 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Creating protein from PDB ID: 1HCK
2025-08-23 12:48:11,028 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-23 12:48:12,268 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-23 12:48:12,385 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Created protein with UUID: 586b184b-32eb-4751-a3e9-750b964efe06
2025-08-23 12:48:12,385 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Sanitizing protein for docking...
2025-08-23 12:48:12,985 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein/sanitize/586b184b-32eb-4751-a3e9-750b964efe06 "HTTP/1.1 500 Internal Server Error"
2025-08-23 12:48:12,986 - rowan_mcp.functions_v2.submit_docking_workflow - WARNING - Sanitization failed: Server error '500 Internal Server Error' for url 'https://api.rowansci.com/protein/sanitize/586b184b-32eb-4751-a3e9-750b964efe06'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
2025-08-23 12:48:12,986 - rowan_mcp.functions_v2.submit_docking_workflow - WARNING - Proceeding without sanitization - docking may fail if protein needs sanitization
2025-08-23 12:48:12,986 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Submitting docking workflow: Test Docking - CDK2 with PDB ID Input
2025-08-23 12:48:13,657 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-23 12:48:13,659 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Docking workflow submitted with UUID: 49235b78-e8fb-456f-81c0-ab84777e6325
2025-08-23 12:48:24,049 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/49235b78-e8fb-456f-81c0-ab84777e6325 "HTTP/1.1 200 OK"
2025-08-23 13:20:38,933 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Creating protein from PDB ID: 1HCK
2025-08-23 13:20:39,360 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/user/me/default_project "HTTP/1.1 200 OK"
2025-08-23 13:20:39,361 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Using default project: 0344551e-0a5e-4f68-a619-f6f8a0607e3e
2025-08-23 13:20:39,908 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/convert/pdb_id_to_protein?pdb_id=1HCK "HTTP/1.1 200 OK"
2025-08-23 13:20:41,395 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein "HTTP/1.1 200 OK"
2025-08-23 13:20:41,565 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Created protein with UUID: d0634a8d-c476-422e-b320-b679f85b6efe
2025-08-23 13:20:41,565 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Sanitizing protein for docking...
2025-08-23 13:20:41,994 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/protein/sanitize/d0634a8d-c476-422e-b320-b679f85b6efe "HTTP/1.1 200 OK"
2025-08-23 13:20:44,454 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/protein/d0634a8d-c476-422e-b320-b679f85b6efe "HTTP/1.1 200 OK"
2025-08-23 13:20:44,912 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Protein sanitized successfully (sanitized=1)
2025-08-23 13:20:44,912 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Submitting docking workflow: Test Docking - CDK2 with PDB ID Input
2025-08-23 13:20:45,512 - httpx - INFO - HTTP Request: POST https://api.rowansci.com/workflow "HTTP/1.1 200 OK"
2025-08-23 13:20:45,513 - rowan_mcp.functions_v2.submit_docking_workflow - INFO - Docking workflow submitted with UUID: 7670d962-f5d2-4104-89b6-4f18a92e5225
2025-08-23 13:20:55,897 - httpx - INFO - HTTP Request: GET https://api.rowansci.com/workflow/7670d962-f5d2-4104-89b6-4f18a92e5225 "HTTP/1.1 200 OK"
